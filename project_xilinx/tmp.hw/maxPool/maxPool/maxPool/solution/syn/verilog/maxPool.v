// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="maxPool_maxPool,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3981,HLS_SYN_LUT=5066,HLS_VERSION=2020_2}" *)

module maxPool (
        ap_clk,
        ap_rst_n,
        event_done,
        m_axi_gmem0_AWVALID,
        m_axi_gmem0_AWREADY,
        m_axi_gmem0_AWADDR,
        m_axi_gmem0_AWID,
        m_axi_gmem0_AWLEN,
        m_axi_gmem0_AWSIZE,
        m_axi_gmem0_AWBURST,
        m_axi_gmem0_AWLOCK,
        m_axi_gmem0_AWCACHE,
        m_axi_gmem0_AWPROT,
        m_axi_gmem0_AWQOS,
        m_axi_gmem0_AWREGION,
        m_axi_gmem0_AWUSER,
        m_axi_gmem0_WVALID,
        m_axi_gmem0_WREADY,
        m_axi_gmem0_WDATA,
        m_axi_gmem0_WSTRB,
        m_axi_gmem0_WLAST,
        m_axi_gmem0_WID,
        m_axi_gmem0_WUSER,
        m_axi_gmem0_ARVALID,
        m_axi_gmem0_ARREADY,
        m_axi_gmem0_ARADDR,
        m_axi_gmem0_ARID,
        m_axi_gmem0_ARLEN,
        m_axi_gmem0_ARSIZE,
        m_axi_gmem0_ARBURST,
        m_axi_gmem0_ARLOCK,
        m_axi_gmem0_ARCACHE,
        m_axi_gmem0_ARPROT,
        m_axi_gmem0_ARQOS,
        m_axi_gmem0_ARREGION,
        m_axi_gmem0_ARUSER,
        m_axi_gmem0_RVALID,
        m_axi_gmem0_RREADY,
        m_axi_gmem0_RDATA,
        m_axi_gmem0_RLAST,
        m_axi_gmem0_RID,
        m_axi_gmem0_RUSER,
        m_axi_gmem0_RRESP,
        m_axi_gmem0_BVALID,
        m_axi_gmem0_BREADY,
        m_axi_gmem0_BRESP,
        m_axi_gmem0_BID,
        m_axi_gmem0_BUSER,
        m_axi_gmem1_AWVALID,
        m_axi_gmem1_AWREADY,
        m_axi_gmem1_AWADDR,
        m_axi_gmem1_AWID,
        m_axi_gmem1_AWLEN,
        m_axi_gmem1_AWSIZE,
        m_axi_gmem1_AWBURST,
        m_axi_gmem1_AWLOCK,
        m_axi_gmem1_AWCACHE,
        m_axi_gmem1_AWPROT,
        m_axi_gmem1_AWQOS,
        m_axi_gmem1_AWREGION,
        m_axi_gmem1_AWUSER,
        m_axi_gmem1_WVALID,
        m_axi_gmem1_WREADY,
        m_axi_gmem1_WDATA,
        m_axi_gmem1_WSTRB,
        m_axi_gmem1_WLAST,
        m_axi_gmem1_WID,
        m_axi_gmem1_WUSER,
        m_axi_gmem1_ARVALID,
        m_axi_gmem1_ARREADY,
        m_axi_gmem1_ARADDR,
        m_axi_gmem1_ARID,
        m_axi_gmem1_ARLEN,
        m_axi_gmem1_ARSIZE,
        m_axi_gmem1_ARBURST,
        m_axi_gmem1_ARLOCK,
        m_axi_gmem1_ARCACHE,
        m_axi_gmem1_ARPROT,
        m_axi_gmem1_ARQOS,
        m_axi_gmem1_ARREGION,
        m_axi_gmem1_ARUSER,
        m_axi_gmem1_RVALID,
        m_axi_gmem1_RREADY,
        m_axi_gmem1_RDATA,
        m_axi_gmem1_RLAST,
        m_axi_gmem1_RID,
        m_axi_gmem1_RUSER,
        m_axi_gmem1_RRESP,
        m_axi_gmem1_BVALID,
        m_axi_gmem1_BREADY,
        m_axi_gmem1_BRESP,
        m_axi_gmem1_BID,
        m_axi_gmem1_BUSER,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt,
        event_start,
        stall_start_ext,
        stall_done_ext,
        stall_start_str,
        stall_done_str,
        stall_start_int,
        stall_done_int
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_pp0_stage0 = 8'd32;
parameter    ap_ST_fsm_pp0_stage1 = 8'd64;
parameter    ap_ST_fsm_state156 = 8'd128;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM0_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM0_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM0_USER_VALUE = 0;
parameter    C_M_AXI_GMEM0_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM0_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ADDR_WIDTH = 64;
parameter    C_M_AXI_GMEM1_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM1_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM1_USER_VALUE = 0;
parameter    C_M_AXI_GMEM1_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM1_CACHE_VALUE = 3;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM0_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM1_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   event_done;
output   m_axi_gmem0_AWVALID;
input   m_axi_gmem0_AWREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_AWADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_AWID;
output  [7:0] m_axi_gmem0_AWLEN;
output  [2:0] m_axi_gmem0_AWSIZE;
output  [1:0] m_axi_gmem0_AWBURST;
output  [1:0] m_axi_gmem0_AWLOCK;
output  [3:0] m_axi_gmem0_AWCACHE;
output  [2:0] m_axi_gmem0_AWPROT;
output  [3:0] m_axi_gmem0_AWQOS;
output  [3:0] m_axi_gmem0_AWREGION;
output  [C_M_AXI_GMEM0_AWUSER_WIDTH - 1:0] m_axi_gmem0_AWUSER;
output   m_axi_gmem0_WVALID;
input   m_axi_gmem0_WREADY;
output  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_WDATA;
output  [C_M_AXI_GMEM0_WSTRB_WIDTH - 1:0] m_axi_gmem0_WSTRB;
output   m_axi_gmem0_WLAST;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_WID;
output  [C_M_AXI_GMEM0_WUSER_WIDTH - 1:0] m_axi_gmem0_WUSER;
output   m_axi_gmem0_ARVALID;
input   m_axi_gmem0_ARREADY;
output  [C_M_AXI_GMEM0_ADDR_WIDTH - 1:0] m_axi_gmem0_ARADDR;
output  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_ARID;
output  [7:0] m_axi_gmem0_ARLEN;
output  [2:0] m_axi_gmem0_ARSIZE;
output  [1:0] m_axi_gmem0_ARBURST;
output  [1:0] m_axi_gmem0_ARLOCK;
output  [3:0] m_axi_gmem0_ARCACHE;
output  [2:0] m_axi_gmem0_ARPROT;
output  [3:0] m_axi_gmem0_ARQOS;
output  [3:0] m_axi_gmem0_ARREGION;
output  [C_M_AXI_GMEM0_ARUSER_WIDTH - 1:0] m_axi_gmem0_ARUSER;
input   m_axi_gmem0_RVALID;
output   m_axi_gmem0_RREADY;
input  [C_M_AXI_GMEM0_DATA_WIDTH - 1:0] m_axi_gmem0_RDATA;
input   m_axi_gmem0_RLAST;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_RID;
input  [C_M_AXI_GMEM0_RUSER_WIDTH - 1:0] m_axi_gmem0_RUSER;
input  [1:0] m_axi_gmem0_RRESP;
input   m_axi_gmem0_BVALID;
output   m_axi_gmem0_BREADY;
input  [1:0] m_axi_gmem0_BRESP;
input  [C_M_AXI_GMEM0_ID_WIDTH - 1:0] m_axi_gmem0_BID;
input  [C_M_AXI_GMEM0_BUSER_WIDTH - 1:0] m_axi_gmem0_BUSER;
output   m_axi_gmem1_AWVALID;
input   m_axi_gmem1_AWREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_AWADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_AWID;
output  [7:0] m_axi_gmem1_AWLEN;
output  [2:0] m_axi_gmem1_AWSIZE;
output  [1:0] m_axi_gmem1_AWBURST;
output  [1:0] m_axi_gmem1_AWLOCK;
output  [3:0] m_axi_gmem1_AWCACHE;
output  [2:0] m_axi_gmem1_AWPROT;
output  [3:0] m_axi_gmem1_AWQOS;
output  [3:0] m_axi_gmem1_AWREGION;
output  [C_M_AXI_GMEM1_AWUSER_WIDTH - 1:0] m_axi_gmem1_AWUSER;
output   m_axi_gmem1_WVALID;
input   m_axi_gmem1_WREADY;
output  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_WDATA;
output  [C_M_AXI_GMEM1_WSTRB_WIDTH - 1:0] m_axi_gmem1_WSTRB;
output   m_axi_gmem1_WLAST;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_WID;
output  [C_M_AXI_GMEM1_WUSER_WIDTH - 1:0] m_axi_gmem1_WUSER;
output   m_axi_gmem1_ARVALID;
input   m_axi_gmem1_ARREADY;
output  [C_M_AXI_GMEM1_ADDR_WIDTH - 1:0] m_axi_gmem1_ARADDR;
output  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_ARID;
output  [7:0] m_axi_gmem1_ARLEN;
output  [2:0] m_axi_gmem1_ARSIZE;
output  [1:0] m_axi_gmem1_ARBURST;
output  [1:0] m_axi_gmem1_ARLOCK;
output  [3:0] m_axi_gmem1_ARCACHE;
output  [2:0] m_axi_gmem1_ARPROT;
output  [3:0] m_axi_gmem1_ARQOS;
output  [3:0] m_axi_gmem1_ARREGION;
output  [C_M_AXI_GMEM1_ARUSER_WIDTH - 1:0] m_axi_gmem1_ARUSER;
input   m_axi_gmem1_RVALID;
output   m_axi_gmem1_RREADY;
input  [C_M_AXI_GMEM1_DATA_WIDTH - 1:0] m_axi_gmem1_RDATA;
input   m_axi_gmem1_RLAST;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_RID;
input  [C_M_AXI_GMEM1_RUSER_WIDTH - 1:0] m_axi_gmem1_RUSER;
input  [1:0] m_axi_gmem1_RRESP;
input   m_axi_gmem1_BVALID;
output   m_axi_gmem1_BREADY;
input  [1:0] m_axi_gmem1_BRESP;
input  [C_M_AXI_GMEM1_ID_WIDTH - 1:0] m_axi_gmem1_BID;
input  [C_M_AXI_GMEM1_BUSER_WIDTH - 1:0] m_axi_gmem1_BUSER;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;
output   event_start;
output   stall_start_ext;
output   stall_done_ext;
output   stall_start_str;
output   stall_done_str;
output   stall_start_int;
output   stall_done_int;

reg stall_start_ext;
reg stall_done_ext;
reg stall_start_str;
reg stall_done_str;
reg stall_start_int;
reg stall_done_int;

(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
wire    ap_continue;
reg    ap_done_reg;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [7:0] conv_x;
wire   [15:0] conv_xy;
wire   [7:0] pool_dim1;
wire   [15:0] pool_dim3;
wire   [15:0] pool_dim1x2;
wire   [7:0] pool_size;
wire   [7:0] pool_stride;
wire   [7:0] padd_offset;
wire   [15:0] pool_times;
wire   [15:0] pool_group;
wire   [15:0] pool_y_bound;
wire   [15:0] item_loop_bound;
wire   [15:0] load_data_bound;
wire   [15:0] write_back_bound;
wire   [7:0] pool_win_num_x;
wire   [7:0] win_size_x;
wire   [63:0] bottom;
wire   [63:0] top;
reg    gmem0_blk_n_AR;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter3;
wire    ap_block_pp0_stage0;
reg   [0:0] icmp_ln144_reg_2196;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter2_reg;
reg   [0:0] and_ln149_reg_2273;
reg   [0:0] and_ln149_reg_2273_pp0_iter2_reg;
reg   [0:0] cmp37_reg_2371;
reg   [0:0] cmp37_reg_2371_pp0_iter2_reg;
reg    gmem0_blk_n_R;
reg    ap_enable_reg_pp0_iter38;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter37_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter37_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter37_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter3_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter38_reg;
reg    gmem1_blk_n_AW;
reg    ap_enable_reg_pp0_iter40;
reg   [0:0] and_ln234_reg_2205;
reg   [0:0] and_ln234_reg_2205_pp0_iter39_reg;
reg   [0:0] icmp_ln235_reg_2214;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter39_reg;
reg   [0:0] and_ln239_reg_2244;
reg   [0:0] and_ln239_reg_2244_pp0_iter39_reg;
reg    gmem1_blk_n_W;
reg   [0:0] and_ln234_reg_2205_pp0_iter40_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter40_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter40_reg;
reg    gmem1_blk_n_B;
reg    ap_enable_reg_pp0_iter74;
reg   [0:0] and_ln234_reg_2205_pp0_iter74_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter74_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter74_reg;
wire    gmem0_AWREADY;
wire    gmem0_WREADY;
reg    gmem0_ARVALID;
wire    gmem0_ARREADY;
reg   [63:0] gmem0_ARADDR;
wire    gmem0_RVALID;
reg    gmem0_RREADY;
wire   [15:0] gmem0_RDATA;
wire    gmem0_RLAST;
wire   [0:0] gmem0_RID;
wire   [0:0] gmem0_RUSER;
wire   [1:0] gmem0_RRESP;
wire    gmem0_BVALID;
wire   [1:0] gmem0_BRESP;
wire   [0:0] gmem0_BID;
wire   [0:0] gmem0_BUSER;
reg    gmem1_AWVALID;
wire    gmem1_AWREADY;
reg    gmem1_WVALID;
wire    gmem1_WREADY;
wire    gmem1_ARREADY;
wire    gmem1_RVALID;
wire   [7:0] gmem1_RDATA;
wire    gmem1_RLAST;
wire   [0:0] gmem1_RID;
wire   [0:0] gmem1_RUSER;
wire   [1:0] gmem1_RRESP;
wire    gmem1_BVALID;
reg    gmem1_BREADY;
wire   [1:0] gmem1_BRESP;
wire   [0:0] gmem1_BID;
wire   [0:0] gmem1_BUSER;
reg   [15:0] k_reg_489;
reg   [7:0] lane_cnt_reg_501;
reg   [7:0] gp_final_cnt_reg_513;
reg   [15:0] pool_win_cnt_reg_525;
reg   [15:0] item_loop_cnt_reg_537;
reg   [7:0] win_item_cnt_reg_549;
reg   [7:0] win_item_s_reg_561;
reg   [7:0] win_item_y_reg_573;
reg   [7:0] win_item_x_reg_585;
reg   [7:0] win_item_x_reg_585_pp0_iter1_reg;
wire    ap_block_state7_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_state11_pp0_stage1_iter2;
wire    ap_block_state13_pp0_stage1_iter3;
reg    ap_predicate_op469_readreq_state13;
reg    ap_block_state13_io;
wire    ap_block_state15_pp0_stage1_iter4;
wire    ap_block_state17_pp0_stage1_iter5;
wire    ap_block_state19_pp0_stage1_iter6;
wire    ap_block_state21_pp0_stage1_iter7;
wire    ap_block_state23_pp0_stage1_iter8;
wire    ap_block_state25_pp0_stage1_iter9;
wire    ap_block_state27_pp0_stage1_iter10;
wire    ap_block_state29_pp0_stage1_iter11;
wire    ap_block_state31_pp0_stage1_iter12;
wire    ap_block_state33_pp0_stage1_iter13;
wire    ap_block_state35_pp0_stage1_iter14;
wire    ap_block_state37_pp0_stage1_iter15;
wire    ap_block_state39_pp0_stage1_iter16;
wire    ap_block_state41_pp0_stage1_iter17;
wire    ap_block_state43_pp0_stage1_iter18;
wire    ap_block_state45_pp0_stage1_iter19;
wire    ap_block_state47_pp0_stage1_iter20;
wire    ap_block_state49_pp0_stage1_iter21;
wire    ap_block_state51_pp0_stage1_iter22;
wire    ap_block_state53_pp0_stage1_iter23;
wire    ap_block_state55_pp0_stage1_iter24;
wire    ap_block_state57_pp0_stage1_iter25;
wire    ap_block_state59_pp0_stage1_iter26;
wire    ap_block_state61_pp0_stage1_iter27;
wire    ap_block_state63_pp0_stage1_iter28;
wire    ap_block_state65_pp0_stage1_iter29;
wire    ap_block_state67_pp0_stage1_iter30;
wire    ap_block_state69_pp0_stage1_iter31;
wire    ap_block_state71_pp0_stage1_iter32;
wire    ap_block_state73_pp0_stage1_iter33;
wire    ap_block_state75_pp0_stage1_iter34;
wire    ap_block_state77_pp0_stage1_iter35;
wire    ap_block_state79_pp0_stage1_iter36;
wire    ap_block_state81_pp0_stage1_iter37;
reg    ap_predicate_op628_read_state83;
reg    ap_block_state83_pp0_stage1_iter38;
wire    ap_block_state85_pp0_stage1_iter39;
wire    ap_block_state87_pp0_stage1_iter40;
reg    ap_predicate_op723_write_state87;
reg    ap_block_state87_io;
wire    ap_block_state89_pp0_stage1_iter41;
wire    ap_block_state91_pp0_stage1_iter42;
wire    ap_block_state93_pp0_stage1_iter43;
wire    ap_block_state95_pp0_stage1_iter44;
wire    ap_block_state97_pp0_stage1_iter45;
wire    ap_block_state99_pp0_stage1_iter46;
wire    ap_block_state101_pp0_stage1_iter47;
wire    ap_block_state103_pp0_stage1_iter48;
wire    ap_block_state105_pp0_stage1_iter49;
wire    ap_block_state107_pp0_stage1_iter50;
wire    ap_block_state109_pp0_stage1_iter51;
wire    ap_block_state111_pp0_stage1_iter52;
wire    ap_block_state113_pp0_stage1_iter53;
wire    ap_block_state115_pp0_stage1_iter54;
wire    ap_block_state117_pp0_stage1_iter55;
wire    ap_block_state119_pp0_stage1_iter56;
wire    ap_block_state121_pp0_stage1_iter57;
wire    ap_block_state123_pp0_stage1_iter58;
wire    ap_block_state125_pp0_stage1_iter59;
wire    ap_block_state127_pp0_stage1_iter60;
wire    ap_block_state129_pp0_stage1_iter61;
wire    ap_block_state131_pp0_stage1_iter62;
wire    ap_block_state133_pp0_stage1_iter63;
wire    ap_block_state135_pp0_stage1_iter64;
wire    ap_block_state137_pp0_stage1_iter65;
wire    ap_block_state139_pp0_stage1_iter66;
wire    ap_block_state141_pp0_stage1_iter67;
wire    ap_block_state143_pp0_stage1_iter68;
wire    ap_block_state145_pp0_stage1_iter69;
wire    ap_block_state147_pp0_stage1_iter70;
wire    ap_block_state149_pp0_stage1_iter71;
wire    ap_block_state151_pp0_stage1_iter72;
wire    ap_block_state153_pp0_stage1_iter73;
reg    ap_predicate_op791_writeresp_state155;
reg    ap_block_state155_pp0_stage1_iter74;
reg    ap_block_pp0_stage1_11001;
reg   [7:0] gp_final_cnt_3_reg_597;
reg   [7:0] lane_cnt_2_reg_609;
reg   [7:0] win_item_x_2_reg_621;
reg   [7:0] win_item_y_3_reg_633;
reg   [7:0] win_item_s_3_reg_645;
reg   [7:0] win_item_cnt_3_reg_657;
reg   [63:0] top_read_reg_2021;
reg   [63:0] bottom_read_reg_2026;
wire   [31:0] conv8_fu_689_p1;
reg   [31:0] conv8_reg_2056;
wire   [15:0] pool_stride_cast_fu_693_p1;
reg   [15:0] pool_stride_cast_reg_2061;
wire   [23:0] conv_x_cast14_fu_697_p1;
reg   [23:0] conv_x_cast14_reg_2066;
wire   [25:0] conv_x_cast1_fu_701_p1;
reg   [25:0] conv_x_cast1_reg_2071;
wire   [15:0] pool_win_num_x_cast_fu_705_p1;
reg   [15:0] pool_win_num_x_cast_reg_2076;
wire   [8:0] sub_fu_713_p2;
reg   [8:0] sub_reg_2082;
wire   [19:0] pool_dim1_cast16_fu_719_p1;
reg   [19:0] pool_dim1_cast16_reg_2089;
wire   [15:0] pool_dim1_cast9_fu_723_p1;
reg   [15:0] pool_dim1_cast9_reg_2094;
wire   [16:0] sub272_fu_735_p2;
reg   [16:0] sub272_reg_2099;
wire   [0:0] cmp78_fu_741_p2;
reg   [0:0] cmp78_reg_2104;
wire   [15:0] padd_offset_cast17_fu_747_p1;
reg   [15:0] padd_offset_cast17_reg_2108;
wire   [16:0] padd_offset_cast_fu_751_p1;
reg   [16:0] padd_offset_cast_reg_2113;
wire   [16:0] pool_dim3_cast_fu_755_p1;
reg   [16:0] pool_dim3_cast_reg_2118;
wire   [29:0] zext_ln240_fu_759_p1;
reg   [29:0] zext_ln240_reg_2123;
wire   [8:0] sub184_fu_767_p2;
reg   [8:0] sub184_reg_2128;
wire   [16:0] sub287_fu_777_p2;
reg   [16:0] sub287_reg_2133;
wire   [8:0] sub291_fu_783_p2;
reg   [8:0] sub291_reg_2138;
wire   [23:0] zext_ln160_fu_789_p1;
reg   [23:0] zext_ln160_reg_2143;
wire   [15:0] zext_ln125_fu_811_p1;
reg   [15:0] zext_ln125_reg_2148;
wire   [15:0] i_1_fu_815_p2;
reg   [15:0] i_1_reg_2153;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln125_fu_821_p2;
wire   [16:0] pool_group_cnt_cast_fu_830_p1;
reg   [16:0] pool_group_cnt_cast_reg_2166;
wire    ap_CS_fsm_state5;
wire   [31:0] grp_fu_1970_p2;
reg   [31:0] mul_reg_2171;
wire   [8:0] pool_y_cnt_cast10_fu_834_p1;
reg   [8:0] pool_y_cnt_cast10_reg_2176;
wire   [15:0] mul13_fu_842_p2;
reg   [15:0] mul13_reg_2181;
wire   [15:0] shl_ln236_fu_847_p2;
reg   [15:0] shl_ln236_reg_2186;
wire   [29:0] zext_ln144_fu_858_p1;
reg   [29:0] zext_ln144_reg_2191;
wire   [0:0] icmp_ln144_fu_862_p2;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_state12_pp0_stage0_iter3;
reg    ap_predicate_op467_readreq_state12;
reg    ap_block_state12_io;
wire    ap_block_state14_pp0_stage0_iter4;
wire    ap_block_state16_pp0_stage0_iter5;
wire    ap_block_state18_pp0_stage0_iter6;
wire    ap_block_state20_pp0_stage0_iter7;
wire    ap_block_state22_pp0_stage0_iter8;
wire    ap_block_state24_pp0_stage0_iter9;
wire    ap_block_state26_pp0_stage0_iter10;
wire    ap_block_state28_pp0_stage0_iter11;
wire    ap_block_state30_pp0_stage0_iter12;
wire    ap_block_state32_pp0_stage0_iter13;
wire    ap_block_state34_pp0_stage0_iter14;
wire    ap_block_state36_pp0_stage0_iter15;
wire    ap_block_state38_pp0_stage0_iter16;
wire    ap_block_state40_pp0_stage0_iter17;
wire    ap_block_state42_pp0_stage0_iter18;
wire    ap_block_state44_pp0_stage0_iter19;
wire    ap_block_state46_pp0_stage0_iter20;
wire    ap_block_state48_pp0_stage0_iter21;
wire    ap_block_state50_pp0_stage0_iter22;
wire    ap_block_state52_pp0_stage0_iter23;
wire    ap_block_state54_pp0_stage0_iter24;
wire    ap_block_state56_pp0_stage0_iter25;
wire    ap_block_state58_pp0_stage0_iter26;
wire    ap_block_state60_pp0_stage0_iter27;
wire    ap_block_state62_pp0_stage0_iter28;
wire    ap_block_state64_pp0_stage0_iter29;
wire    ap_block_state66_pp0_stage0_iter30;
wire    ap_block_state68_pp0_stage0_iter31;
wire    ap_block_state70_pp0_stage0_iter32;
wire    ap_block_state72_pp0_stage0_iter33;
wire    ap_block_state74_pp0_stage0_iter34;
wire    ap_block_state76_pp0_stage0_iter35;
wire    ap_block_state78_pp0_stage0_iter36;
wire    ap_block_state80_pp0_stage0_iter37;
reg    ap_predicate_op606_read_state82;
reg    ap_block_state82_pp0_stage0_iter38;
wire    ap_block_state84_pp0_stage0_iter39;
wire    ap_block_state86_pp0_stage0_iter40;
reg    ap_predicate_op722_writereq_state86;
reg    ap_block_state86_io;
wire    ap_block_state88_pp0_stage0_iter41;
wire    ap_block_state90_pp0_stage0_iter42;
wire    ap_block_state92_pp0_stage0_iter43;
wire    ap_block_state94_pp0_stage0_iter44;
wire    ap_block_state96_pp0_stage0_iter45;
wire    ap_block_state98_pp0_stage0_iter46;
wire    ap_block_state100_pp0_stage0_iter47;
wire    ap_block_state102_pp0_stage0_iter48;
wire    ap_block_state104_pp0_stage0_iter49;
wire    ap_block_state106_pp0_stage0_iter50;
wire    ap_block_state108_pp0_stage0_iter51;
wire    ap_block_state110_pp0_stage0_iter52;
wire    ap_block_state112_pp0_stage0_iter53;
wire    ap_block_state114_pp0_stage0_iter54;
wire    ap_block_state116_pp0_stage0_iter55;
wire    ap_block_state118_pp0_stage0_iter56;
wire    ap_block_state120_pp0_stage0_iter57;
wire    ap_block_state122_pp0_stage0_iter58;
wire    ap_block_state124_pp0_stage0_iter59;
wire    ap_block_state126_pp0_stage0_iter60;
wire    ap_block_state128_pp0_stage0_iter61;
wire    ap_block_state130_pp0_stage0_iter62;
wire    ap_block_state132_pp0_stage0_iter63;
wire    ap_block_state134_pp0_stage0_iter64;
wire    ap_block_state136_pp0_stage0_iter65;
wire    ap_block_state138_pp0_stage0_iter66;
wire    ap_block_state140_pp0_stage0_iter67;
wire    ap_block_state142_pp0_stage0_iter68;
wire    ap_block_state144_pp0_stage0_iter69;
wire    ap_block_state146_pp0_stage0_iter70;
wire    ap_block_state148_pp0_stage0_iter71;
wire    ap_block_state150_pp0_stage0_iter72;
wire    ap_block_state152_pp0_stage0_iter73;
wire    ap_block_state154_pp0_stage0_iter74;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter1_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter4_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter5_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter6_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter7_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter8_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter9_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter10_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter11_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter12_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter13_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter14_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter15_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter16_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter17_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter18_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter19_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter20_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter21_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter22_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter23_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter24_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter25_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter26_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter27_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter28_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter29_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter30_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter31_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter32_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter33_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter34_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter35_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter36_reg;
reg   [0:0] icmp_ln144_reg_2196_pp0_iter39_reg;
wire   [0:0] and_ln234_fu_894_p2;
reg   [0:0] and_ln234_reg_2205_pp0_iter1_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter2_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter3_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter4_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter5_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter6_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter7_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter8_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter9_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter10_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter11_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter12_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter13_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter14_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter15_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter16_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter17_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter18_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter19_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter20_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter21_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter22_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter23_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter24_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter25_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter26_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter27_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter28_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter29_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter30_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter31_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter32_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter33_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter34_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter35_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter36_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter37_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter38_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter41_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter42_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter43_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter44_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter45_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter46_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter47_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter48_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter49_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter50_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter51_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter52_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter53_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter54_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter55_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter56_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter57_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter58_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter59_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter60_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter61_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter62_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter63_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter64_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter65_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter66_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter67_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter68_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter69_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter70_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter71_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter72_reg;
reg   [0:0] and_ln234_reg_2205_pp0_iter73_reg;
wire  signed [19:0] add_ln235_1_fu_914_p2;
reg  signed [19:0] add_ln235_1_reg_2209;
reg  signed [19:0] add_ln235_1_reg_2209_pp0_iter1_reg;
wire   [0:0] icmp_ln235_fu_920_p2;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter1_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter2_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter3_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter4_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter5_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter6_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter7_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter8_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter9_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter10_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter11_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter12_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter13_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter14_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter15_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter16_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter17_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter18_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter19_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter20_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter21_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter22_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter23_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter24_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter25_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter26_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter27_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter28_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter29_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter30_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter31_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter32_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter33_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter34_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter35_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter36_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter37_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter38_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter41_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter42_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter43_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter44_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter45_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter46_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter47_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter48_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter49_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter50_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter51_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter52_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter53_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter54_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter55_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter56_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter57_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter58_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter59_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter60_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter61_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter62_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter63_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter64_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter65_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter66_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter67_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter68_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter69_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter70_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter71_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter72_reg;
reg   [0:0] icmp_ln235_reg_2214_pp0_iter73_reg;
reg   [0:0] tmp_2_reg_2218;
reg   [0:0] tmp_2_reg_2218_pp0_iter1_reg;
reg   [14:0] trunc_ln237_1_reg_2224;
reg   [14:0] trunc_ln237_2_reg_2229;
wire   [1:0] trunc_ln238_fu_977_p1;
reg   [1:0] trunc_ln238_reg_2234;
reg   [1:0] trunc_ln238_reg_2234_pp0_iter1_reg;
wire   [1:0] trunc_ln238_1_fu_981_p1;
reg   [1:0] trunc_ln238_1_reg_2239;
reg   [1:0] trunc_ln238_1_reg_2239_pp0_iter1_reg;
wire   [0:0] and_ln239_fu_1001_p2;
reg   [0:0] and_ln239_reg_2244_pp0_iter1_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter2_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter3_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter4_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter5_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter6_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter7_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter8_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter9_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter10_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter11_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter12_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter13_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter14_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter15_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter16_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter17_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter18_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter19_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter20_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter21_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter22_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter23_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter24_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter25_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter26_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter27_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter28_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter29_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter30_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter31_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter32_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter33_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter34_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter35_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter36_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter37_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter38_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter41_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter42_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter43_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter44_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter45_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter46_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter47_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter48_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter49_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter50_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter51_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter52_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter53_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter54_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter55_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter56_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter57_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter58_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter59_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter60_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter61_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter62_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter63_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter64_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter65_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter66_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter67_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter68_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter69_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter70_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter71_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter72_reg;
reg   [0:0] and_ln239_reg_2244_pp0_iter73_reg;
wire   [3:0] trunc_ln240_1_fu_1007_p1;
reg   [3:0] trunc_ln240_1_reg_2248;
wire   [7:0] gp_final_cnt_2_fu_1043_p3;
wire   [7:0] select_ln248_fu_1057_p3;
wire   [15:0] k_1_fu_1065_p2;
reg   [15:0] k_1_reg_2263;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] flag_fu_1071_p1;
reg   [0:0] flag_reg_2268;
wire   [0:0] and_ln149_fu_1089_p2;
reg   [0:0] and_ln149_reg_2273_pp0_iter1_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter3_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter4_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter5_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter6_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter7_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter8_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter9_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter10_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter11_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter12_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter13_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter14_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter15_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter16_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter17_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter18_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter19_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter20_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter21_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter22_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter23_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter24_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter25_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter26_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter27_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter28_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter29_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter30_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter31_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter32_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter33_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter34_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter35_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter36_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter38_reg;
reg   [0:0] and_ln149_reg_2273_pp0_iter39_reg;
wire   [0:0] cmp52_fu_1135_p2;
reg   [0:0] cmp52_reg_2282;
reg   [0:0] cmp52_reg_2282_pp0_iter1_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter2_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter3_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter4_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter5_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter6_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter7_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter8_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter9_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter10_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter11_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter12_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter13_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter14_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter15_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter16_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter17_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter18_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter19_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter20_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter21_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter22_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter23_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter24_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter25_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter26_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter27_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter28_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter29_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter30_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter31_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter32_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter33_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter34_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter35_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter36_reg;
reg   [0:0] cmp52_reg_2282_pp0_iter37_reg;
wire   [0:0] cmp55_fu_1140_p2;
reg   [0:0] cmp55_reg_2287;
reg   [0:0] cmp55_reg_2287_pp0_iter1_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter2_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter3_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter4_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter5_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter6_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter7_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter8_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter9_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter10_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter11_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter12_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter13_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter14_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter15_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter16_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter17_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter18_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter19_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter20_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter21_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter22_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter23_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter24_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter25_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter26_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter27_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter28_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter29_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter30_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter31_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter32_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter33_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter34_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter35_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter36_reg;
reg   [0:0] cmp55_reg_2287_pp0_iter37_reg;
wire   [0:0] cmp134_fu_1145_p2;
reg   [0:0] cmp134_reg_2292;
reg   [0:0] cmp134_reg_2292_pp0_iter1_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter2_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter3_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter4_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter5_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter6_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter7_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter8_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter9_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter10_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter11_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter12_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter13_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter14_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter15_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter16_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter17_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter18_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter19_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter20_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter21_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter22_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter23_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter24_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter25_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter26_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter27_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter28_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter29_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter30_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter31_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter32_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter33_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter34_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter35_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter36_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter37_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter38_reg;
reg   [0:0] cmp134_reg_2292_pp0_iter39_reg;
wire   [0:0] cmp101_fu_1151_p2;
reg   [0:0] cmp101_reg_2296;
reg   [0:0] cmp101_reg_2296_pp0_iter1_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter2_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter3_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter4_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter5_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter6_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter7_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter8_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter9_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter10_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter11_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter12_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter13_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter14_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter15_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter16_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter17_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter18_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter19_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter20_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter21_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter22_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter23_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter24_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter25_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter26_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter27_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter28_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter29_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter30_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter31_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter32_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter33_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter34_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter35_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter36_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter37_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter38_reg;
reg   [0:0] cmp101_reg_2296_pp0_iter39_reg;
wire   [7:0] win_item_cnt_2_fu_1177_p3;
wire   [7:0] win_item_y_2_fu_1215_p3;
wire   [7:0] win_item_x_3_fu_1229_p3;
wire   [7:0] win_item_s_4_fu_1243_p3;
wire   [3:0] add_ln240_3_fu_1302_p2;
reg   [3:0] add_ln240_3_reg_2320;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter1_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter2_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter3_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter4_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter5_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter6_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter7_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter8_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter9_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter10_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter11_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter12_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter13_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter14_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter15_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter16_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter17_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter18_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter19_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter20_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter21_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter22_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter23_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter24_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter25_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter26_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter27_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter28_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter29_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter30_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter31_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter32_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter33_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter34_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter35_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter36_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter37_reg;
reg   [3:0] add_ln240_3_reg_2320_pp0_iter38_reg;
wire   [15:0] pool_win_cnt_2_fu_1341_p3;
reg   [15:0] pool_win_cnt_2_reg_2330;
wire   [15:0] item_loop_cnt_2_fu_1355_p3;
reg   [15:0] item_loop_cnt_2_reg_2335;
wire   [2:0] empty_fu_1373_p1;
reg   [2:0] empty_reg_2340;
reg   [2:0] empty_reg_2340_pp0_iter2_reg;
reg   [2:0] empty_reg_2340_pp0_iter3_reg;
reg   [2:0] empty_reg_2340_pp0_iter4_reg;
reg   [2:0] empty_reg_2340_pp0_iter5_reg;
reg   [2:0] empty_reg_2340_pp0_iter6_reg;
reg   [2:0] empty_reg_2340_pp0_iter7_reg;
reg   [2:0] empty_reg_2340_pp0_iter8_reg;
reg   [2:0] empty_reg_2340_pp0_iter9_reg;
reg   [2:0] empty_reg_2340_pp0_iter10_reg;
reg   [2:0] empty_reg_2340_pp0_iter11_reg;
reg   [2:0] empty_reg_2340_pp0_iter12_reg;
reg   [2:0] empty_reg_2340_pp0_iter13_reg;
reg   [2:0] empty_reg_2340_pp0_iter14_reg;
reg   [2:0] empty_reg_2340_pp0_iter15_reg;
reg   [2:0] empty_reg_2340_pp0_iter16_reg;
reg   [2:0] empty_reg_2340_pp0_iter17_reg;
reg   [2:0] empty_reg_2340_pp0_iter18_reg;
reg   [2:0] empty_reg_2340_pp0_iter19_reg;
reg   [2:0] empty_reg_2340_pp0_iter20_reg;
reg   [2:0] empty_reg_2340_pp0_iter21_reg;
reg   [2:0] empty_reg_2340_pp0_iter22_reg;
reg   [2:0] empty_reg_2340_pp0_iter23_reg;
reg   [2:0] empty_reg_2340_pp0_iter24_reg;
reg   [2:0] empty_reg_2340_pp0_iter25_reg;
reg   [2:0] empty_reg_2340_pp0_iter26_reg;
reg   [2:0] empty_reg_2340_pp0_iter27_reg;
reg   [2:0] empty_reg_2340_pp0_iter28_reg;
reg   [2:0] empty_reg_2340_pp0_iter29_reg;
reg   [2:0] empty_reg_2340_pp0_iter30_reg;
reg   [2:0] empty_reg_2340_pp0_iter31_reg;
reg   [2:0] empty_reg_2340_pp0_iter32_reg;
reg   [2:0] empty_reg_2340_pp0_iter33_reg;
reg   [2:0] empty_reg_2340_pp0_iter34_reg;
reg   [2:0] empty_reg_2340_pp0_iter35_reg;
reg   [2:0] empty_reg_2340_pp0_iter36_reg;
reg   [2:0] empty_reg_2340_pp0_iter37_reg;
reg   [2:0] empty_reg_2340_pp0_iter38_reg;
reg   [2:0] row_reg0_addr_reg_2345;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter2_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter3_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter4_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter5_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter6_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter7_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter8_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter9_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter10_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter11_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter12_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter13_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter14_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter15_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter16_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter17_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter18_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter19_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter20_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter21_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter22_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter23_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter24_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter25_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter26_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter27_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter28_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter29_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter30_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter31_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter32_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter33_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter34_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter35_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter36_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter37_reg;
reg   [2:0] row_reg0_addr_reg_2345_pp0_iter38_reg;
reg   [2:0] row_reg1_addr_reg_2351;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter2_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter3_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter4_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter5_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter6_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter7_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter8_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter9_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter10_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter11_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter12_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter13_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter14_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter15_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter16_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter17_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter18_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter19_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter20_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter21_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter22_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter23_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter24_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter25_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter26_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter27_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter28_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter29_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter30_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter31_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter32_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter33_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter34_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter35_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter36_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter37_reg;
reg   [2:0] row_reg1_addr_reg_2351_pp0_iter38_reg;
wire   [2:0] trunc_ln185_fu_1394_p1;
reg   [2:0] trunc_ln185_reg_2356;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter2_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter3_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter4_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter5_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter6_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter7_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter8_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter9_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter10_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter11_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter12_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter13_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter14_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter15_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter16_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter17_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter18_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter19_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter20_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter21_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter22_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter23_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter24_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter25_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter26_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter27_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter28_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter29_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter30_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter31_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter32_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter33_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter34_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter35_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter36_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter37_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter38_reg;
reg   [2:0] trunc_ln185_reg_2356_pp0_iter39_reg;
reg   [3:0] pool_final_addr_reg_2361;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter2_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter3_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter4_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter5_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter6_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter7_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter8_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter9_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter10_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter11_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter12_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter13_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter14_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter15_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter16_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter17_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter18_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter19_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter20_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter21_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter22_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter23_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter24_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter25_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter26_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter27_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter28_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter29_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter30_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter31_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter32_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter33_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter34_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter35_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter36_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter37_reg;
reg   [3:0] pool_final_addr_reg_2361_pp0_iter38_reg;
wire   [0:0] cmp37_fu_1432_p2;
reg   [0:0] cmp37_reg_2371_pp0_iter3_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter4_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter5_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter6_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter7_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter8_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter9_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter10_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter11_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter12_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter13_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter14_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter15_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter16_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter17_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter18_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter19_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter20_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter21_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter22_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter23_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter24_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter25_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter26_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter27_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter28_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter29_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter30_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter31_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter32_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter33_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter34_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter35_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter36_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter38_reg;
reg   [0:0] cmp37_reg_2371_pp0_iter39_reg;
wire   [31:0] add43_fu_1449_p2;
reg   [31:0] add43_reg_2375;
wire   [7:0] select_ln238_fu_1478_p3;
reg   [7:0] select_ln238_reg_2380;
(* use_dsp48 = "no" *) wire   [29:0] tmp47_fu_1485_p2;
reg   [29:0] tmp47_reg_2385;
reg   [63:0] gmem0_addr_reg_2390;
reg   [63:0] gmem0_addr_1_reg_2396;
reg   [63:0] gmem1_addr_reg_2402;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter3_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter4_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter5_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter6_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter7_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter8_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter9_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter10_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter11_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter12_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter13_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter14_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter15_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter16_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter17_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter18_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter19_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter20_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter21_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter22_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter23_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter24_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter25_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter26_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter27_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter28_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter29_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter30_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter31_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter32_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter33_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter34_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter35_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter36_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter37_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter38_reg;
reg   [63:0] gmem1_addr_reg_2402_pp0_iter39_reg;
wire   [7:0] shift_reg_5_fu_1583_p1;
reg   [7:0] shift_reg_5_reg_2408;
wire   [0:0] or_ln163_fu_1593_p2;
reg   [0:0] or_ln163_reg_2414;
wire   [7:0] max_value_15_fu_1632_p3;
reg   [7:0] max_value_15_reg_2421;
wire   [7:0] max_value_14_fu_1673_p3;
reg   [7:0] max_value_14_reg_2427;
reg   [15:0] gmem0_addr_1_read_reg_2436;
reg   [2:0] row_reg0_addr_1_reg_2441;
reg   [2:0] row_reg1_addr_1_reg_2447;
wire   [7:0] temp_reg2_2_fu_1779_p3;
reg   [7:0] temp_reg2_2_reg_2452;
wire   [7:0] max_value_16_fu_1798_p3;
reg   [7:0] max_value_16_reg_2458;
wire   [7:0] max_value_17_fu_1818_p3;
reg   [7:0] max_value_17_reg_2465;
reg   [3:0] pool_final_addr_1_reg_2471;
wire   [7:0] row_reg0_q1;
reg   [7:0] row_reg0_load_1_reg_2476;
reg    ap_enable_reg_pp0_iter39;
wire   [7:0] max_value_18_fu_1873_p3;
reg   [7:0] max_value_18_reg_2482;
wire   [7:0] pool_final_q1;
reg   [7:0] pool_final_load_reg_2495;
wire   [15:0] pool_group_cnt_2_fu_1948_p3;
wire    ap_CS_fsm_state156;
wire   [7:0] pool_y_cnt_2_fu_1962_p3;
reg    ap_block_pp0_stage1_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_condition_pp0_exit_iter39_state84;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_enable_reg_pp0_iter50;
reg    ap_enable_reg_pp0_iter51;
reg    ap_enable_reg_pp0_iter52;
reg    ap_enable_reg_pp0_iter53;
reg    ap_enable_reg_pp0_iter54;
reg    ap_enable_reg_pp0_iter55;
reg    ap_enable_reg_pp0_iter56;
reg    ap_enable_reg_pp0_iter57;
reg    ap_enable_reg_pp0_iter58;
reg    ap_enable_reg_pp0_iter59;
reg    ap_enable_reg_pp0_iter60;
reg    ap_enable_reg_pp0_iter61;
reg    ap_enable_reg_pp0_iter62;
reg    ap_enable_reg_pp0_iter63;
reg    ap_enable_reg_pp0_iter64;
reg    ap_enable_reg_pp0_iter65;
reg    ap_enable_reg_pp0_iter66;
reg    ap_enable_reg_pp0_iter67;
reg    ap_enable_reg_pp0_iter68;
reg    ap_enable_reg_pp0_iter69;
reg    ap_enable_reg_pp0_iter70;
reg    ap_enable_reg_pp0_iter71;
reg    ap_enable_reg_pp0_iter72;
reg    ap_enable_reg_pp0_iter73;
reg   [2:0] row_reg0_address0;
reg    row_reg0_ce0;
reg    row_reg0_we0;
reg   [7:0] row_reg0_d0;
reg   [2:0] row_reg0_address1;
reg    row_reg0_ce1;
reg    row_reg0_we1;
wire   [7:0] row_reg0_d1;
reg    row_reg1_ce0;
reg    row_reg1_we0;
wire   [7:0] row_reg1_d0;
wire   [7:0] row_reg1_q0;
reg    row_reg1_ce1;
reg    row_reg1_we1;
wire   [7:0] row_reg1_d1;
wire   [7:0] row_reg1_q1;
reg   [3:0] pool_final_address0;
reg    pool_final_ce0;
reg    pool_final_we0;
reg   [7:0] pool_final_d0;
reg   [3:0] pool_final_address1;
reg    pool_final_ce1;
reg    pool_final_we1;
reg   [7:0] pool_final_d1;
reg   [15:0] i_reg_454;
reg    ap_block_state1;
reg   [7:0] pool_y_cnt_reg_465;
reg   [15:0] pool_group_cnt_reg_477;
reg   [15:0] ap_phi_mux_k_phi_fu_493_p4;
reg   [7:0] ap_phi_mux_lane_cnt_phi_fu_505_p4;
reg   [7:0] ap_phi_mux_gp_final_cnt_phi_fu_517_p4;
reg   [15:0] ap_phi_mux_pool_win_cnt_phi_fu_529_p4;
reg   [15:0] ap_phi_mux_item_loop_cnt_phi_fu_541_p4;
reg   [7:0] ap_phi_mux_win_item_cnt_phi_fu_553_p4;
reg   [7:0] ap_phi_mux_win_item_s_phi_fu_565_p4;
reg   [7:0] ap_phi_mux_win_item_y_phi_fu_577_p4;
reg   [7:0] ap_phi_mux_win_item_x_phi_fu_589_p4;
reg   [7:0] ap_phi_reg_pp0_iter0_gp_final_cnt_3_reg_597;
reg   [7:0] ap_phi_reg_pp0_iter0_lane_cnt_2_reg_609;
wire   [7:0] ap_phi_reg_pp0_iter0_win_item_x_2_reg_621;
reg   [7:0] ap_phi_reg_pp0_iter1_win_item_x_2_reg_621;
wire   [7:0] ap_phi_reg_pp0_iter0_win_item_y_3_reg_633;
reg   [7:0] ap_phi_reg_pp0_iter1_win_item_y_3_reg_633;
wire   [7:0] ap_phi_reg_pp0_iter0_win_item_s_3_reg_645;
reg   [7:0] ap_phi_reg_pp0_iter1_win_item_s_3_reg_645;
wire   [7:0] ap_phi_reg_pp0_iter0_win_item_cnt_3_reg_657;
reg   [7:0] ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657;
wire   [63:0] idxprom139_fu_1363_p1;
wire   [63:0] zext_ln185_1_fu_1406_p1;
wire   [63:0] zext_ln179_fu_1690_p1;
wire   [63:0] zext_ln195_fu_1839_p1;
wire   [63:0] zext_ln240_1_fu_1880_p1;
wire  signed [63:0] sext_ln160_fu_1516_p1;
wire  signed [63:0] sext_ln160_1_fu_1542_p1;
wire   [63:0] add_ln240_1_fu_1572_p2;
reg    ap_block_pp0_stage1_01001;
reg   [7:0] shift_reg_fu_206;
reg   [7:0] shift_reg_1_fu_210;
reg   [7:0] shift_reg_2_fu_214;
reg   [7:0] shift_reg_3_fu_218;
wire   [7:0] shift_reg_8_fu_1760_p1;
wire   [7:0] max_value_fu_1707_p3;
wire   [7:0] max_value_5_fu_1726_p3;
wire   [7:0] max_value_10_fu_1855_p3;
wire   [7:0] max_value_12_fu_1895_p3;
wire   [8:0] pool_size_cast_fu_709_p1;
wire   [16:0] item_loop_bound_cast_fu_731_p1;
wire   [8:0] win_size_x_cast_fu_763_p1;
wire   [16:0] pool_group_cast_fu_773_p1;
wire   [8:0] pool_dim1_cast_fu_727_p1;
wire   [0:0] trunc_ln160_fu_793_p1;
wire   [0:0] xor_ln160_fu_797_p2;
wire   [3:0] shl_ln160_1_fu_803_p3;
wire   [7:0] mul13_fu_842_p0;
wire   [15:0] pool_y_cnt_cast_fu_838_p1;
wire   [7:0] mul13_fu_842_p1;
wire   [7:0] mul244_fu_853_p0;
wire   [7:0] mul244_fu_853_p1;
wire   [15:0] mul244_fu_853_p2;
wire   [17:0] shl_ln1_fu_867_p3;
wire   [0:0] icmp_ln234_fu_883_p2;
wire   [0:0] icmp_ln234_1_fu_889_p2;
wire   [8:0] zext_ln235_fu_900_p1;
wire   [8:0] add_ln235_fu_904_p2;
wire  signed [19:0] sext_ln235_fu_910_p1;
wire   [19:0] zext_ln146_fu_875_p1;
wire   [15:0] zext_ln236_fu_925_p1;
wire   [15:0] global_z_fu_929_p2;
wire   [16:0] zext_ln237_fu_934_p1;
wire   [16:0] sub_ln237_fu_938_p2;
wire   [16:0] sub_ln237_1_fu_951_p2;
wire   [0:0] icmp_ln239_1_fu_990_p2;
wire   [0:0] icmp_ln239_fu_985_p2;
wire   [0:0] xor_ln239_fu_995_p2;
wire   [0:0] icmp_ln244_fu_1011_p2;
wire   [0:0] icmp_ln244_1_fu_1017_p2;
wire   [7:0] add_ln247_fu_1029_p2;
wire   [0:0] and_ln244_fu_1023_p2;
wire   [7:0] gp_final_cnt_1_fu_1035_p3;
wire   [7:0] lane_cnt_1_fu_1051_p2;
wire   [0:0] icmp_ln149_fu_1075_p2;
wire   [0:0] icmp_ln149_1_fu_1084_p2;
wire   [8:0] zext_ln151_2_fu_1095_p1;
wire   [0:0] icmp_ln151_fu_1099_p2;
wire   [7:0] add_ln152_fu_1104_p2;
wire   [15:0] win_item_y_cast_fu_1122_p1;
wire   [15:0] tmp_fu_1126_p2;
wire   [7:0] win_item_cnt_1_fu_1110_p3;
wire   [0:0] or_ln210_fu_1157_p2;
wire   [7:0] win_item_s_1_fu_1163_p2;
wire   [8:0] win_item_y_cast15_fu_1118_p1;
wire   [0:0] icmp_ln218_fu_1185_p2;
wire   [0:0] icmp_ln218_1_fu_1190_p2;
wire   [7:0] add_ln221_fu_1201_p2;
wire   [0:0] and_ln218_fu_1195_p2;
wire   [7:0] win_item_y_1_fu_1207_p3;
wire   [7:0] win_item_x_1_fu_1223_p2;
wire   [0:0] icmp_ln227_fu_1237_p2;
wire   [7:0] win_item_s_2_fu_1169_p3;
wire  signed [15:0] sext_ln237_fu_1251_p1;
wire   [15:0] sub_ln237_2_fu_1257_p2;
wire  signed [15:0] sext_ln237_1_fu_1254_p1;
wire   [0:0] xor_ln240_fu_1270_p2;
wire   [2:0] tmp_s_fu_1276_p3;
wire   [2:0] trunc_ln240_fu_1284_p1;
wire   [2:0] add_ln240_2_fu_1288_p2;
wire   [3:0] tmp_12_cast_fu_1294_p3;
wire   [15:0] global_index_z_group_fu_1263_p3;
wire   [16:0] zext_ln149_1_fu_1080_p1;
wire   [0:0] icmp_ln254_fu_1311_p2;
wire   [0:0] icmp_ln254_1_fu_1316_p2;
wire   [15:0] add_ln257_fu_1327_p2;
wire   [0:0] and_ln254_fu_1321_p2;
wire   [15:0] pool_win_cnt_1_fu_1333_p3;
wire   [15:0] item_loop_cnt_1_fu_1349_p2;
wire   [2:0] tmp_3_fu_1377_p3;
wire   [8:0] zext_ln185_fu_1384_p1;
wire   [8:0] win_item_s_cast2_fu_1369_p1;
wire   [8:0] add_ln185_fu_1388_p2;
wire   [9:0] tmp_1_fu_1398_p3;
wire   [23:0] grp_fu_1975_p2;
wire   [25:0] shl_ln146_1_fu_1411_p3;
wire   [25:0] zext_ln151_1_fu_1422_p1;
wire   [25:0] add35_fu_1426_p2;
wire   [26:0] grp_fu_1981_p3;
wire   [31:0] zext_ln151_fu_1437_p1;
(* use_dsp48 = "no" *) wire   [31:0] tmp6_fu_1444_p2;
wire   [31:0] tmp1_cast_fu_1441_p1;
wire   [7:0] p_and_t_cast_fu_1458_p3;
wire   [7:0] sub_ln238_fu_1465_p2;
wire   [7:0] tmp_9_fu_1471_p3;
wire   [29:0] grp_fu_1989_p3;
wire  signed [29:0] sext_ln235_1_fu_1455_p1;
wire   [32:0] shl_ln2_fu_1490_p3;
wire   [63:0] zext_ln160_1_fu_1497_p1;
wire   [63:0] add_ln160_fu_1501_p2;
wire   [62:0] trunc_ln160_1_fu_1506_p4;
wire   [63:0] add_ln160_1_fu_1526_p2;
wire   [62:0] trunc_ln160_3_fu_1532_p4;
wire   [31:0] tmp5_fu_1555_p3;
wire   [31:0] zext_ln240_3_fu_1552_p1;
wire   [31:0] add_ln240_fu_1562_p2;
wire  signed [63:0] sext_ln240_fu_1568_p1;
wire   [7:0] temp_reg1_fu_1604_p3;
wire   [7:0] temp_reg0_1_fu_1597_p3;
wire   [0:0] icmp_ln52_2_fu_1620_p2;
wire   [0:0] xor_ln52_2_fu_1626_p2;
wire   [0:0] icmp_ln52_fu_1641_p2;
wire   [0:0] xor_ln52_fu_1647_p2;
wire   [7:0] temp_reg2_fu_1612_p3;
wire   [7:0] max_value_13_fu_1653_p3;
wire   [0:0] icmp_ln52_1_fu_1661_p2;
wire   [0:0] xor_ln52_1_fu_1667_p2;
wire   [2:0] xor_ln179_fu_1685_p2;
wire   [0:0] icmp_ln52_3_fu_1696_p2;
wire   [0:0] xor_ln52_3_fu_1701_p2;
wire   [0:0] icmp_ln52_5_fu_1715_p2;
wire   [0:0] xor_ln52_5_fu_1720_p2;
wire   [0:0] icmp_ln52_4_fu_1734_p2;
wire   [0:0] xor_ln52_4_fu_1739_p2;
wire   [15:0] lshr_ln160_fu_1756_p2;
wire   [7:0] temp_reg1_2_fu_1772_p3;
wire   [7:0] temp_reg0_fu_1765_p3;
wire   [0:0] icmp_ln52_8_fu_1786_p2;
wire   [0:0] xor_ln52_8_fu_1792_p2;
wire   [0:0] icmp_ln52_6_fu_1806_p2;
wire   [0:0] xor_ln52_6_fu_1812_p2;
wire   [3:0] tmp_5_cast_fu_1826_p3;
wire   [3:0] or_ln195_fu_1833_p2;
wire   [0:0] icmp_ln52_9_fu_1844_p2;
wire   [0:0] xor_ln52_9_fu_1849_p2;
wire   [0:0] icmp_ln52_7_fu_1863_p2;
wire   [0:0] xor_ln52_7_fu_1867_p2;
wire   [0:0] icmp_ln52_11_fu_1884_p2;
wire   [0:0] xor_ln52_11_fu_1889_p2;
wire   [0:0] icmp_ln52_10_fu_1903_p2;
wire   [0:0] xor_ln52_10_fu_1907_p2;
wire   [0:0] icmp_ln266_fu_1920_p2;
wire   [0:0] icmp_ln266_1_fu_1924_p2;
wire   [15:0] add_ln269_fu_1934_p2;
wire   [0:0] and_ln266_fu_1928_p2;
wire   [15:0] pool_group_cnt_1_fu_1940_p3;
wire   [7:0] pool_y_cnt_1_fu_1956_p2;
wire   [15:0] grp_fu_1970_p0;
wire   [15:0] grp_fu_1970_p1;
wire   [15:0] grp_fu_1975_p0;
wire   [7:0] grp_fu_1975_p1;
wire   [15:0] grp_fu_1981_p0;
wire   [7:0] grp_fu_1981_p1;
wire   [25:0] grp_fu_1981_p2;
wire   [15:0] grp_fu_1989_p0;
wire   [15:0] grp_fu_1989_p1;
wire   [15:0] grp_fu_1989_p2;
reg    grp_fu_1975_ce;
reg    grp_fu_1981_ce;
reg    grp_fu_1989_ce;
reg   [7:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
wire    ap_ext_blocking_cur_n;
wire    ap_ext_blocking_n;
wire    ap_str_blocking_n;
wire    ap_int_blocking_n;
reg    ap_ext_blocking_n_reg;
reg    ap_str_blocking_n_reg;
reg    ap_int_blocking_n_reg;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [31:0] grp_fu_1970_p00;
wire   [23:0] grp_fu_1975_p00;
wire   [23:0] grp_fu_1981_p00;
wire   [26:0] grp_fu_1981_p20;
wire   [29:0] grp_fu_1989_p00;
reg    ap_condition_3024;
reg    ap_condition_1096;
reg    ap_condition_3436;
reg    ap_condition_3440;
reg    ap_condition_3448;
reg    ap_condition_3457;
reg    ap_condition_3465;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter74 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 ap_enable_reg_pp0_iter50 = 1'b0;
#0 ap_enable_reg_pp0_iter51 = 1'b0;
#0 ap_enable_reg_pp0_iter52 = 1'b0;
#0 ap_enable_reg_pp0_iter53 = 1'b0;
#0 ap_enable_reg_pp0_iter54 = 1'b0;
#0 ap_enable_reg_pp0_iter55 = 1'b0;
#0 ap_enable_reg_pp0_iter56 = 1'b0;
#0 ap_enable_reg_pp0_iter57 = 1'b0;
#0 ap_enable_reg_pp0_iter58 = 1'b0;
#0 ap_enable_reg_pp0_iter59 = 1'b0;
#0 ap_enable_reg_pp0_iter60 = 1'b0;
#0 ap_enable_reg_pp0_iter61 = 1'b0;
#0 ap_enable_reg_pp0_iter62 = 1'b0;
#0 ap_enable_reg_pp0_iter63 = 1'b0;
#0 ap_enable_reg_pp0_iter64 = 1'b0;
#0 ap_enable_reg_pp0_iter65 = 1'b0;
#0 ap_enable_reg_pp0_iter66 = 1'b0;
#0 ap_enable_reg_pp0_iter67 = 1'b0;
#0 ap_enable_reg_pp0_iter68 = 1'b0;
#0 ap_enable_reg_pp0_iter69 = 1'b0;
#0 ap_enable_reg_pp0_iter70 = 1'b0;
#0 ap_enable_reg_pp0_iter71 = 1'b0;
#0 ap_enable_reg_pp0_iter72 = 1'b0;
#0 ap_enable_reg_pp0_iter73 = 1'b0;
end

maxPool_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .conv_x(conv_x),
    .conv_xy(conv_xy),
    .pool_dim1(pool_dim1),
    .pool_dim3(pool_dim3),
    .pool_dim1x2(pool_dim1x2),
    .pool_size(pool_size),
    .pool_stride(pool_stride),
    .padd_offset(padd_offset),
    .pool_times(pool_times),
    .pool_group(pool_group),
    .pool_y_bound(pool_y_bound),
    .item_loop_bound(item_loop_bound),
    .load_data_bound(load_data_bound),
    .write_back_bound(write_back_bound),
    .pool_win_num_x(pool_win_num_x),
    .win_size_x(win_size_x),
    .bottom(bottom),
    .top(top),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .event_start(event_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_continue(ap_continue),
    .ap_idle(ap_idle)
);

maxPool_gmem0_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 16 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM0_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM0_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM0_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM0_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM0_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM0_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM0_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM0_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM0_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM0_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM0_CACHE_VALUE ))
gmem0_m_axi_U(
    .AWVALID(m_axi_gmem0_AWVALID),
    .AWREADY(m_axi_gmem0_AWREADY),
    .AWADDR(m_axi_gmem0_AWADDR),
    .AWID(m_axi_gmem0_AWID),
    .AWLEN(m_axi_gmem0_AWLEN),
    .AWSIZE(m_axi_gmem0_AWSIZE),
    .AWBURST(m_axi_gmem0_AWBURST),
    .AWLOCK(m_axi_gmem0_AWLOCK),
    .AWCACHE(m_axi_gmem0_AWCACHE),
    .AWPROT(m_axi_gmem0_AWPROT),
    .AWQOS(m_axi_gmem0_AWQOS),
    .AWREGION(m_axi_gmem0_AWREGION),
    .AWUSER(m_axi_gmem0_AWUSER),
    .WVALID(m_axi_gmem0_WVALID),
    .WREADY(m_axi_gmem0_WREADY),
    .WDATA(m_axi_gmem0_WDATA),
    .WSTRB(m_axi_gmem0_WSTRB),
    .WLAST(m_axi_gmem0_WLAST),
    .WID(m_axi_gmem0_WID),
    .WUSER(m_axi_gmem0_WUSER),
    .ARVALID(m_axi_gmem0_ARVALID),
    .ARREADY(m_axi_gmem0_ARREADY),
    .ARADDR(m_axi_gmem0_ARADDR),
    .ARID(m_axi_gmem0_ARID),
    .ARLEN(m_axi_gmem0_ARLEN),
    .ARSIZE(m_axi_gmem0_ARSIZE),
    .ARBURST(m_axi_gmem0_ARBURST),
    .ARLOCK(m_axi_gmem0_ARLOCK),
    .ARCACHE(m_axi_gmem0_ARCACHE),
    .ARPROT(m_axi_gmem0_ARPROT),
    .ARQOS(m_axi_gmem0_ARQOS),
    .ARREGION(m_axi_gmem0_ARREGION),
    .ARUSER(m_axi_gmem0_ARUSER),
    .RVALID(m_axi_gmem0_RVALID),
    .RREADY(m_axi_gmem0_RREADY),
    .RDATA(m_axi_gmem0_RDATA),
    .RLAST(m_axi_gmem0_RLAST),
    .RID(m_axi_gmem0_RID),
    .RUSER(m_axi_gmem0_RUSER),
    .RRESP(m_axi_gmem0_RRESP),
    .BVALID(m_axi_gmem0_BVALID),
    .BREADY(m_axi_gmem0_BREADY),
    .BRESP(m_axi_gmem0_BRESP),
    .BID(m_axi_gmem0_BID),
    .BUSER(m_axi_gmem0_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem0_ARVALID),
    .I_ARREADY(gmem0_ARREADY),
    .I_ARADDR(gmem0_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(32'd1),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem0_RVALID),
    .I_RREADY(gmem0_RREADY),
    .I_RDATA(gmem0_RDATA),
    .I_RID(gmem0_RID),
    .I_RUSER(gmem0_RUSER),
    .I_RRESP(gmem0_RRESP),
    .I_RLAST(gmem0_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(gmem0_AWREADY),
    .I_AWADDR(64'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(gmem0_WREADY),
    .I_WDATA(16'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(2'd0),
    .I_BVALID(gmem0_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(gmem0_BRESP),
    .I_BID(gmem0_BID),
    .I_BUSER(gmem0_BUSER)
);

maxPool_gmem1_m_axi #(
    .CONSERVATIVE( 1 ),
    .USER_DW( 8 ),
    .USER_AW( 64 ),
    .USER_MAXREQS( 69 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM1_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM1_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM1_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM1_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM1_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM1_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM1_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM1_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM1_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM1_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM1_CACHE_VALUE ))
gmem1_m_axi_U(
    .AWVALID(m_axi_gmem1_AWVALID),
    .AWREADY(m_axi_gmem1_AWREADY),
    .AWADDR(m_axi_gmem1_AWADDR),
    .AWID(m_axi_gmem1_AWID),
    .AWLEN(m_axi_gmem1_AWLEN),
    .AWSIZE(m_axi_gmem1_AWSIZE),
    .AWBURST(m_axi_gmem1_AWBURST),
    .AWLOCK(m_axi_gmem1_AWLOCK),
    .AWCACHE(m_axi_gmem1_AWCACHE),
    .AWPROT(m_axi_gmem1_AWPROT),
    .AWQOS(m_axi_gmem1_AWQOS),
    .AWREGION(m_axi_gmem1_AWREGION),
    .AWUSER(m_axi_gmem1_AWUSER),
    .WVALID(m_axi_gmem1_WVALID),
    .WREADY(m_axi_gmem1_WREADY),
    .WDATA(m_axi_gmem1_WDATA),
    .WSTRB(m_axi_gmem1_WSTRB),
    .WLAST(m_axi_gmem1_WLAST),
    .WID(m_axi_gmem1_WID),
    .WUSER(m_axi_gmem1_WUSER),
    .ARVALID(m_axi_gmem1_ARVALID),
    .ARREADY(m_axi_gmem1_ARREADY),
    .ARADDR(m_axi_gmem1_ARADDR),
    .ARID(m_axi_gmem1_ARID),
    .ARLEN(m_axi_gmem1_ARLEN),
    .ARSIZE(m_axi_gmem1_ARSIZE),
    .ARBURST(m_axi_gmem1_ARBURST),
    .ARLOCK(m_axi_gmem1_ARLOCK),
    .ARCACHE(m_axi_gmem1_ARCACHE),
    .ARPROT(m_axi_gmem1_ARPROT),
    .ARQOS(m_axi_gmem1_ARQOS),
    .ARREGION(m_axi_gmem1_ARREGION),
    .ARUSER(m_axi_gmem1_ARUSER),
    .RVALID(m_axi_gmem1_RVALID),
    .RREADY(m_axi_gmem1_RREADY),
    .RDATA(m_axi_gmem1_RDATA),
    .RLAST(m_axi_gmem1_RLAST),
    .RID(m_axi_gmem1_RID),
    .RUSER(m_axi_gmem1_RUSER),
    .RRESP(m_axi_gmem1_RRESP),
    .BVALID(m_axi_gmem1_BVALID),
    .BREADY(m_axi_gmem1_BREADY),
    .BRESP(m_axi_gmem1_BRESP),
    .BID(m_axi_gmem1_BID),
    .BUSER(m_axi_gmem1_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(gmem1_ARREADY),
    .I_ARADDR(64'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(gmem1_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(gmem1_RDATA),
    .I_RID(gmem1_RID),
    .I_RUSER(gmem1_RUSER),
    .I_RRESP(gmem1_RRESP),
    .I_RLAST(gmem1_RLAST),
    .I_AWVALID(gmem1_AWVALID),
    .I_AWREADY(gmem1_AWREADY),
    .I_AWADDR(gmem1_addr_reg_2402_pp0_iter39_reg),
    .I_AWID(1'd0),
    .I_AWLEN(32'd1),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(gmem1_WVALID),
    .I_WREADY(gmem1_WREADY),
    .I_WDATA(pool_final_load_reg_2495),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(1'd1),
    .I_BVALID(gmem1_BVALID),
    .I_BREADY(gmem1_BREADY),
    .I_BRESP(gmem1_BRESP),
    .I_BID(gmem1_BID),
    .I_BUSER(gmem1_BUSER)
);

maxPool_row_reg0 #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
row_reg0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(row_reg0_address0),
    .ce0(row_reg0_ce0),
    .we0(row_reg0_we0),
    .d0(row_reg0_d0),
    .address1(row_reg0_address1),
    .ce1(row_reg0_ce1),
    .we1(row_reg0_we1),
    .d1(row_reg0_d1),
    .q1(row_reg0_q1)
);

maxPool_row_reg1 #(
    .DataWidth( 8 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
row_reg1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(row_reg1_addr_1_reg_2447),
    .ce0(row_reg1_ce0),
    .we0(row_reg1_we0),
    .d0(row_reg1_d0),
    .q0(row_reg1_q0),
    .address1(row_reg1_addr_reg_2351_pp0_iter38_reg),
    .ce1(row_reg1_ce1),
    .we1(row_reg1_we1),
    .d1(row_reg1_d1),
    .q1(row_reg1_q1)
);

maxPool_pool_final #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
pool_final_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(pool_final_address0),
    .ce0(pool_final_ce0),
    .we0(pool_final_we0),
    .d0(pool_final_d0),
    .address1(pool_final_address1),
    .ce1(pool_final_ce1),
    .we1(pool_final_we1),
    .d1(pool_final_d1),
    .q1(pool_final_q1)
);

maxPool_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U1(
    .din0(mul13_fu_842_p0),
    .din1(mul13_fu_842_p1),
    .dout(mul13_fu_842_p2)
);

maxPool_mul_8ns_8ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8ns_8ns_16_1_1_U2(
    .din0(mul244_fu_853_p0),
    .din1(mul244_fu_853_p1),
    .dout(mul244_fu_853_p2)
);

maxPool_mul_mul_16ns_16ns_32_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
mul_mul_16ns_16ns_32_4_1_U3(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1970_p0),
    .din1(grp_fu_1970_p1),
    .ce(1'b1),
    .dout(grp_fu_1970_p2)
);

maxPool_mul_mul_16ns_8ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 24 ))
mul_mul_16ns_8ns_24_4_1_U4(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1975_p0),
    .din1(grp_fu_1975_p1),
    .ce(grp_fu_1975_ce),
    .dout(grp_fu_1975_p2)
);

maxPool_mac_muladd_16ns_8ns_26ns_27_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 26 ),
    .dout_WIDTH( 27 ))
mac_muladd_16ns_8ns_26ns_27_4_1_U5(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1981_p0),
    .din1(grp_fu_1981_p1),
    .din2(grp_fu_1981_p2),
    .ce(grp_fu_1981_ce),
    .dout(grp_fu_1981_p3)
);

maxPool_mac_muladd_16ns_16ns_16ns_30_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
mac_muladd_16ns_16ns_16ns_30_4_1_U6(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1989_p0),
    .din1(grp_fu_1989_p1),
    .din2(grp_fu_1989_p2),
    .ce(grp_fu_1989_ce),
    .dout(grp_fu_1989_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((icmp_ln125_fu_821_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            if ((1'b1 == ap_condition_pp0_exit_iter39_state84)) begin
                ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter38;
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter50 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter51 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter52 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter53 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter54 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter55 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter56 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter57 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter58 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter59 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter60 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter61 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter62 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter63 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter64 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter65 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter66 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter67 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter68 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter69 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter70 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter71 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter72 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter73 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter74 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp0_iter74 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_ext_blocking_n_reg <= ap_ext_blocking_n;
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_3024)) begin
        if ((1'd0 == and_ln234_fu_894_p2)) begin
            ap_phi_reg_pp0_iter0_gp_final_cnt_3_reg_597 <= ap_phi_mux_gp_final_cnt_phi_fu_517_p4;
        end else if ((1'd1 == and_ln234_fu_894_p2)) begin
            ap_phi_reg_pp0_iter0_gp_final_cnt_3_reg_597 <= gp_final_cnt_2_fu_1043_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_3024)) begin
        if ((1'd0 == and_ln234_fu_894_p2)) begin
            ap_phi_reg_pp0_iter0_lane_cnt_2_reg_609 <= ap_phi_mux_lane_cnt_phi_fu_505_p4;
        end else if ((1'd1 == and_ln234_fu_894_p2)) begin
            ap_phi_reg_pp0_iter0_lane_cnt_2_reg_609 <= select_ln248_fu_1057_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1096)) begin
        if (((1'd0 == and_ln149_fu_1089_p2) & (icmp_ln144_reg_2196 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657 <= ap_phi_mux_win_item_cnt_phi_fu_553_p4;
        end else if (((1'd1 == and_ln149_fu_1089_p2) & (icmp_ln144_reg_2196 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657 <= win_item_cnt_2_fu_1177_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657 <= ap_phi_reg_pp0_iter0_win_item_cnt_3_reg_657;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1096)) begin
        if (((1'd0 == and_ln149_fu_1089_p2) & (icmp_ln144_reg_2196 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_win_item_s_3_reg_645 <= ap_phi_mux_win_item_s_phi_fu_565_p4;
        end else if (((1'd1 == and_ln149_fu_1089_p2) & (icmp_ln144_reg_2196 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_win_item_s_3_reg_645 <= win_item_s_4_fu_1243_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_win_item_s_3_reg_645 <= ap_phi_reg_pp0_iter0_win_item_s_3_reg_645;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1096)) begin
        if (((1'd0 == and_ln149_fu_1089_p2) & (icmp_ln144_reg_2196 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_win_item_x_2_reg_621 <= ap_phi_mux_win_item_x_phi_fu_589_p4;
        end else if (((1'd1 == and_ln149_fu_1089_p2) & (icmp_ln144_reg_2196 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_win_item_x_2_reg_621 <= win_item_x_3_fu_1229_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_win_item_x_2_reg_621 <= ap_phi_reg_pp0_iter0_win_item_x_2_reg_621;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1096)) begin
        if (((1'd0 == and_ln149_fu_1089_p2) & (icmp_ln144_reg_2196 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_win_item_y_3_reg_633 <= ap_phi_mux_win_item_y_phi_fu_577_p4;
        end else if (((1'd1 == and_ln149_fu_1089_p2) & (icmp_ln144_reg_2196 == 1'd0))) begin
            ap_phi_reg_pp0_iter1_win_item_y_3_reg_633 <= win_item_y_2_fu_1215_p3;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter1_win_item_y_3_reg_633 <= ap_phi_reg_pp0_iter0_win_item_y_3_reg_633;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gp_final_cnt_reg_513 <= gp_final_cnt_3_reg_597;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        gp_final_cnt_reg_513 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        i_reg_454 <= i_1_reg_2153;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_454 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        item_loop_cnt_reg_537 <= item_loop_cnt_2_reg_2335;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        item_loop_cnt_reg_537 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        k_reg_489 <= k_1_reg_2263;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        k_reg_489 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        lane_cnt_reg_501 <= lane_cnt_2_reg_609;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        lane_cnt_reg_501 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        pool_group_cnt_reg_477 <= pool_group_cnt_2_fu_1948_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        pool_group_cnt_reg_477 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pool_win_cnt_reg_525 <= pool_win_cnt_2_reg_2330;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        pool_win_cnt_reg_525 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state156)) begin
        pool_y_cnt_reg_465 <= pool_y_cnt_2_fu_1962_p3;
    end else if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
        pool_y_cnt_reg_465 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        win_item_cnt_reg_549 <= win_item_cnt_3_reg_657;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        win_item_cnt_reg_549 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        win_item_s_reg_561 <= win_item_s_3_reg_645;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        win_item_s_reg_561 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        win_item_x_reg_585 <= win_item_x_2_reg_621;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        win_item_x_reg_585 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        win_item_y_reg_573 <= win_item_y_3_reg_633;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        win_item_y_reg_573 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln149_reg_2273_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add43_reg_2375 <= add43_fu_1449_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_fu_862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln234_fu_894_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln235_1_reg_2209 <= add_ln235_1_fu_914_p2;
        icmp_ln235_reg_2214 <= icmp_ln235_fu_920_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln235_1_reg_2209_pp0_iter1_reg <= add_ln235_1_reg_2209;
        and_ln234_reg_2205_pp0_iter10_reg <= and_ln234_reg_2205_pp0_iter9_reg;
        and_ln234_reg_2205_pp0_iter11_reg <= and_ln234_reg_2205_pp0_iter10_reg;
        and_ln234_reg_2205_pp0_iter12_reg <= and_ln234_reg_2205_pp0_iter11_reg;
        and_ln234_reg_2205_pp0_iter13_reg <= and_ln234_reg_2205_pp0_iter12_reg;
        and_ln234_reg_2205_pp0_iter14_reg <= and_ln234_reg_2205_pp0_iter13_reg;
        and_ln234_reg_2205_pp0_iter15_reg <= and_ln234_reg_2205_pp0_iter14_reg;
        and_ln234_reg_2205_pp0_iter16_reg <= and_ln234_reg_2205_pp0_iter15_reg;
        and_ln234_reg_2205_pp0_iter17_reg <= and_ln234_reg_2205_pp0_iter16_reg;
        and_ln234_reg_2205_pp0_iter18_reg <= and_ln234_reg_2205_pp0_iter17_reg;
        and_ln234_reg_2205_pp0_iter19_reg <= and_ln234_reg_2205_pp0_iter18_reg;
        and_ln234_reg_2205_pp0_iter1_reg <= and_ln234_reg_2205;
        and_ln234_reg_2205_pp0_iter20_reg <= and_ln234_reg_2205_pp0_iter19_reg;
        and_ln234_reg_2205_pp0_iter21_reg <= and_ln234_reg_2205_pp0_iter20_reg;
        and_ln234_reg_2205_pp0_iter22_reg <= and_ln234_reg_2205_pp0_iter21_reg;
        and_ln234_reg_2205_pp0_iter23_reg <= and_ln234_reg_2205_pp0_iter22_reg;
        and_ln234_reg_2205_pp0_iter24_reg <= and_ln234_reg_2205_pp0_iter23_reg;
        and_ln234_reg_2205_pp0_iter25_reg <= and_ln234_reg_2205_pp0_iter24_reg;
        and_ln234_reg_2205_pp0_iter26_reg <= and_ln234_reg_2205_pp0_iter25_reg;
        and_ln234_reg_2205_pp0_iter27_reg <= and_ln234_reg_2205_pp0_iter26_reg;
        and_ln234_reg_2205_pp0_iter28_reg <= and_ln234_reg_2205_pp0_iter27_reg;
        and_ln234_reg_2205_pp0_iter29_reg <= and_ln234_reg_2205_pp0_iter28_reg;
        and_ln234_reg_2205_pp0_iter2_reg <= and_ln234_reg_2205_pp0_iter1_reg;
        and_ln234_reg_2205_pp0_iter30_reg <= and_ln234_reg_2205_pp0_iter29_reg;
        and_ln234_reg_2205_pp0_iter31_reg <= and_ln234_reg_2205_pp0_iter30_reg;
        and_ln234_reg_2205_pp0_iter32_reg <= and_ln234_reg_2205_pp0_iter31_reg;
        and_ln234_reg_2205_pp0_iter33_reg <= and_ln234_reg_2205_pp0_iter32_reg;
        and_ln234_reg_2205_pp0_iter34_reg <= and_ln234_reg_2205_pp0_iter33_reg;
        and_ln234_reg_2205_pp0_iter35_reg <= and_ln234_reg_2205_pp0_iter34_reg;
        and_ln234_reg_2205_pp0_iter36_reg <= and_ln234_reg_2205_pp0_iter35_reg;
        and_ln234_reg_2205_pp0_iter37_reg <= and_ln234_reg_2205_pp0_iter36_reg;
        and_ln234_reg_2205_pp0_iter38_reg <= and_ln234_reg_2205_pp0_iter37_reg;
        and_ln234_reg_2205_pp0_iter39_reg <= and_ln234_reg_2205_pp0_iter38_reg;
        and_ln234_reg_2205_pp0_iter3_reg <= and_ln234_reg_2205_pp0_iter2_reg;
        and_ln234_reg_2205_pp0_iter40_reg <= and_ln234_reg_2205_pp0_iter39_reg;
        and_ln234_reg_2205_pp0_iter41_reg <= and_ln234_reg_2205_pp0_iter40_reg;
        and_ln234_reg_2205_pp0_iter42_reg <= and_ln234_reg_2205_pp0_iter41_reg;
        and_ln234_reg_2205_pp0_iter43_reg <= and_ln234_reg_2205_pp0_iter42_reg;
        and_ln234_reg_2205_pp0_iter44_reg <= and_ln234_reg_2205_pp0_iter43_reg;
        and_ln234_reg_2205_pp0_iter45_reg <= and_ln234_reg_2205_pp0_iter44_reg;
        and_ln234_reg_2205_pp0_iter46_reg <= and_ln234_reg_2205_pp0_iter45_reg;
        and_ln234_reg_2205_pp0_iter47_reg <= and_ln234_reg_2205_pp0_iter46_reg;
        and_ln234_reg_2205_pp0_iter48_reg <= and_ln234_reg_2205_pp0_iter47_reg;
        and_ln234_reg_2205_pp0_iter49_reg <= and_ln234_reg_2205_pp0_iter48_reg;
        and_ln234_reg_2205_pp0_iter4_reg <= and_ln234_reg_2205_pp0_iter3_reg;
        and_ln234_reg_2205_pp0_iter50_reg <= and_ln234_reg_2205_pp0_iter49_reg;
        and_ln234_reg_2205_pp0_iter51_reg <= and_ln234_reg_2205_pp0_iter50_reg;
        and_ln234_reg_2205_pp0_iter52_reg <= and_ln234_reg_2205_pp0_iter51_reg;
        and_ln234_reg_2205_pp0_iter53_reg <= and_ln234_reg_2205_pp0_iter52_reg;
        and_ln234_reg_2205_pp0_iter54_reg <= and_ln234_reg_2205_pp0_iter53_reg;
        and_ln234_reg_2205_pp0_iter55_reg <= and_ln234_reg_2205_pp0_iter54_reg;
        and_ln234_reg_2205_pp0_iter56_reg <= and_ln234_reg_2205_pp0_iter55_reg;
        and_ln234_reg_2205_pp0_iter57_reg <= and_ln234_reg_2205_pp0_iter56_reg;
        and_ln234_reg_2205_pp0_iter58_reg <= and_ln234_reg_2205_pp0_iter57_reg;
        and_ln234_reg_2205_pp0_iter59_reg <= and_ln234_reg_2205_pp0_iter58_reg;
        and_ln234_reg_2205_pp0_iter5_reg <= and_ln234_reg_2205_pp0_iter4_reg;
        and_ln234_reg_2205_pp0_iter60_reg <= and_ln234_reg_2205_pp0_iter59_reg;
        and_ln234_reg_2205_pp0_iter61_reg <= and_ln234_reg_2205_pp0_iter60_reg;
        and_ln234_reg_2205_pp0_iter62_reg <= and_ln234_reg_2205_pp0_iter61_reg;
        and_ln234_reg_2205_pp0_iter63_reg <= and_ln234_reg_2205_pp0_iter62_reg;
        and_ln234_reg_2205_pp0_iter64_reg <= and_ln234_reg_2205_pp0_iter63_reg;
        and_ln234_reg_2205_pp0_iter65_reg <= and_ln234_reg_2205_pp0_iter64_reg;
        and_ln234_reg_2205_pp0_iter66_reg <= and_ln234_reg_2205_pp0_iter65_reg;
        and_ln234_reg_2205_pp0_iter67_reg <= and_ln234_reg_2205_pp0_iter66_reg;
        and_ln234_reg_2205_pp0_iter68_reg <= and_ln234_reg_2205_pp0_iter67_reg;
        and_ln234_reg_2205_pp0_iter69_reg <= and_ln234_reg_2205_pp0_iter68_reg;
        and_ln234_reg_2205_pp0_iter6_reg <= and_ln234_reg_2205_pp0_iter5_reg;
        and_ln234_reg_2205_pp0_iter70_reg <= and_ln234_reg_2205_pp0_iter69_reg;
        and_ln234_reg_2205_pp0_iter71_reg <= and_ln234_reg_2205_pp0_iter70_reg;
        and_ln234_reg_2205_pp0_iter72_reg <= and_ln234_reg_2205_pp0_iter71_reg;
        and_ln234_reg_2205_pp0_iter73_reg <= and_ln234_reg_2205_pp0_iter72_reg;
        and_ln234_reg_2205_pp0_iter74_reg <= and_ln234_reg_2205_pp0_iter73_reg;
        and_ln234_reg_2205_pp0_iter7_reg <= and_ln234_reg_2205_pp0_iter6_reg;
        and_ln234_reg_2205_pp0_iter8_reg <= and_ln234_reg_2205_pp0_iter7_reg;
        and_ln234_reg_2205_pp0_iter9_reg <= and_ln234_reg_2205_pp0_iter8_reg;
        and_ln239_reg_2244_pp0_iter10_reg <= and_ln239_reg_2244_pp0_iter9_reg;
        and_ln239_reg_2244_pp0_iter11_reg <= and_ln239_reg_2244_pp0_iter10_reg;
        and_ln239_reg_2244_pp0_iter12_reg <= and_ln239_reg_2244_pp0_iter11_reg;
        and_ln239_reg_2244_pp0_iter13_reg <= and_ln239_reg_2244_pp0_iter12_reg;
        and_ln239_reg_2244_pp0_iter14_reg <= and_ln239_reg_2244_pp0_iter13_reg;
        and_ln239_reg_2244_pp0_iter15_reg <= and_ln239_reg_2244_pp0_iter14_reg;
        and_ln239_reg_2244_pp0_iter16_reg <= and_ln239_reg_2244_pp0_iter15_reg;
        and_ln239_reg_2244_pp0_iter17_reg <= and_ln239_reg_2244_pp0_iter16_reg;
        and_ln239_reg_2244_pp0_iter18_reg <= and_ln239_reg_2244_pp0_iter17_reg;
        and_ln239_reg_2244_pp0_iter19_reg <= and_ln239_reg_2244_pp0_iter18_reg;
        and_ln239_reg_2244_pp0_iter1_reg <= and_ln239_reg_2244;
        and_ln239_reg_2244_pp0_iter20_reg <= and_ln239_reg_2244_pp0_iter19_reg;
        and_ln239_reg_2244_pp0_iter21_reg <= and_ln239_reg_2244_pp0_iter20_reg;
        and_ln239_reg_2244_pp0_iter22_reg <= and_ln239_reg_2244_pp0_iter21_reg;
        and_ln239_reg_2244_pp0_iter23_reg <= and_ln239_reg_2244_pp0_iter22_reg;
        and_ln239_reg_2244_pp0_iter24_reg <= and_ln239_reg_2244_pp0_iter23_reg;
        and_ln239_reg_2244_pp0_iter25_reg <= and_ln239_reg_2244_pp0_iter24_reg;
        and_ln239_reg_2244_pp0_iter26_reg <= and_ln239_reg_2244_pp0_iter25_reg;
        and_ln239_reg_2244_pp0_iter27_reg <= and_ln239_reg_2244_pp0_iter26_reg;
        and_ln239_reg_2244_pp0_iter28_reg <= and_ln239_reg_2244_pp0_iter27_reg;
        and_ln239_reg_2244_pp0_iter29_reg <= and_ln239_reg_2244_pp0_iter28_reg;
        and_ln239_reg_2244_pp0_iter2_reg <= and_ln239_reg_2244_pp0_iter1_reg;
        and_ln239_reg_2244_pp0_iter30_reg <= and_ln239_reg_2244_pp0_iter29_reg;
        and_ln239_reg_2244_pp0_iter31_reg <= and_ln239_reg_2244_pp0_iter30_reg;
        and_ln239_reg_2244_pp0_iter32_reg <= and_ln239_reg_2244_pp0_iter31_reg;
        and_ln239_reg_2244_pp0_iter33_reg <= and_ln239_reg_2244_pp0_iter32_reg;
        and_ln239_reg_2244_pp0_iter34_reg <= and_ln239_reg_2244_pp0_iter33_reg;
        and_ln239_reg_2244_pp0_iter35_reg <= and_ln239_reg_2244_pp0_iter34_reg;
        and_ln239_reg_2244_pp0_iter36_reg <= and_ln239_reg_2244_pp0_iter35_reg;
        and_ln239_reg_2244_pp0_iter37_reg <= and_ln239_reg_2244_pp0_iter36_reg;
        and_ln239_reg_2244_pp0_iter38_reg <= and_ln239_reg_2244_pp0_iter37_reg;
        and_ln239_reg_2244_pp0_iter39_reg <= and_ln239_reg_2244_pp0_iter38_reg;
        and_ln239_reg_2244_pp0_iter3_reg <= and_ln239_reg_2244_pp0_iter2_reg;
        and_ln239_reg_2244_pp0_iter40_reg <= and_ln239_reg_2244_pp0_iter39_reg;
        and_ln239_reg_2244_pp0_iter41_reg <= and_ln239_reg_2244_pp0_iter40_reg;
        and_ln239_reg_2244_pp0_iter42_reg <= and_ln239_reg_2244_pp0_iter41_reg;
        and_ln239_reg_2244_pp0_iter43_reg <= and_ln239_reg_2244_pp0_iter42_reg;
        and_ln239_reg_2244_pp0_iter44_reg <= and_ln239_reg_2244_pp0_iter43_reg;
        and_ln239_reg_2244_pp0_iter45_reg <= and_ln239_reg_2244_pp0_iter44_reg;
        and_ln239_reg_2244_pp0_iter46_reg <= and_ln239_reg_2244_pp0_iter45_reg;
        and_ln239_reg_2244_pp0_iter47_reg <= and_ln239_reg_2244_pp0_iter46_reg;
        and_ln239_reg_2244_pp0_iter48_reg <= and_ln239_reg_2244_pp0_iter47_reg;
        and_ln239_reg_2244_pp0_iter49_reg <= and_ln239_reg_2244_pp0_iter48_reg;
        and_ln239_reg_2244_pp0_iter4_reg <= and_ln239_reg_2244_pp0_iter3_reg;
        and_ln239_reg_2244_pp0_iter50_reg <= and_ln239_reg_2244_pp0_iter49_reg;
        and_ln239_reg_2244_pp0_iter51_reg <= and_ln239_reg_2244_pp0_iter50_reg;
        and_ln239_reg_2244_pp0_iter52_reg <= and_ln239_reg_2244_pp0_iter51_reg;
        and_ln239_reg_2244_pp0_iter53_reg <= and_ln239_reg_2244_pp0_iter52_reg;
        and_ln239_reg_2244_pp0_iter54_reg <= and_ln239_reg_2244_pp0_iter53_reg;
        and_ln239_reg_2244_pp0_iter55_reg <= and_ln239_reg_2244_pp0_iter54_reg;
        and_ln239_reg_2244_pp0_iter56_reg <= and_ln239_reg_2244_pp0_iter55_reg;
        and_ln239_reg_2244_pp0_iter57_reg <= and_ln239_reg_2244_pp0_iter56_reg;
        and_ln239_reg_2244_pp0_iter58_reg <= and_ln239_reg_2244_pp0_iter57_reg;
        and_ln239_reg_2244_pp0_iter59_reg <= and_ln239_reg_2244_pp0_iter58_reg;
        and_ln239_reg_2244_pp0_iter5_reg <= and_ln239_reg_2244_pp0_iter4_reg;
        and_ln239_reg_2244_pp0_iter60_reg <= and_ln239_reg_2244_pp0_iter59_reg;
        and_ln239_reg_2244_pp0_iter61_reg <= and_ln239_reg_2244_pp0_iter60_reg;
        and_ln239_reg_2244_pp0_iter62_reg <= and_ln239_reg_2244_pp0_iter61_reg;
        and_ln239_reg_2244_pp0_iter63_reg <= and_ln239_reg_2244_pp0_iter62_reg;
        and_ln239_reg_2244_pp0_iter64_reg <= and_ln239_reg_2244_pp0_iter63_reg;
        and_ln239_reg_2244_pp0_iter65_reg <= and_ln239_reg_2244_pp0_iter64_reg;
        and_ln239_reg_2244_pp0_iter66_reg <= and_ln239_reg_2244_pp0_iter65_reg;
        and_ln239_reg_2244_pp0_iter67_reg <= and_ln239_reg_2244_pp0_iter66_reg;
        and_ln239_reg_2244_pp0_iter68_reg <= and_ln239_reg_2244_pp0_iter67_reg;
        and_ln239_reg_2244_pp0_iter69_reg <= and_ln239_reg_2244_pp0_iter68_reg;
        and_ln239_reg_2244_pp0_iter6_reg <= and_ln239_reg_2244_pp0_iter5_reg;
        and_ln239_reg_2244_pp0_iter70_reg <= and_ln239_reg_2244_pp0_iter69_reg;
        and_ln239_reg_2244_pp0_iter71_reg <= and_ln239_reg_2244_pp0_iter70_reg;
        and_ln239_reg_2244_pp0_iter72_reg <= and_ln239_reg_2244_pp0_iter71_reg;
        and_ln239_reg_2244_pp0_iter73_reg <= and_ln239_reg_2244_pp0_iter72_reg;
        and_ln239_reg_2244_pp0_iter74_reg <= and_ln239_reg_2244_pp0_iter73_reg;
        and_ln239_reg_2244_pp0_iter7_reg <= and_ln239_reg_2244_pp0_iter6_reg;
        and_ln239_reg_2244_pp0_iter8_reg <= and_ln239_reg_2244_pp0_iter7_reg;
        and_ln239_reg_2244_pp0_iter9_reg <= and_ln239_reg_2244_pp0_iter8_reg;
        empty_reg_2340_pp0_iter10_reg <= empty_reg_2340_pp0_iter9_reg;
        empty_reg_2340_pp0_iter11_reg <= empty_reg_2340_pp0_iter10_reg;
        empty_reg_2340_pp0_iter12_reg <= empty_reg_2340_pp0_iter11_reg;
        empty_reg_2340_pp0_iter13_reg <= empty_reg_2340_pp0_iter12_reg;
        empty_reg_2340_pp0_iter14_reg <= empty_reg_2340_pp0_iter13_reg;
        empty_reg_2340_pp0_iter15_reg <= empty_reg_2340_pp0_iter14_reg;
        empty_reg_2340_pp0_iter16_reg <= empty_reg_2340_pp0_iter15_reg;
        empty_reg_2340_pp0_iter17_reg <= empty_reg_2340_pp0_iter16_reg;
        empty_reg_2340_pp0_iter18_reg <= empty_reg_2340_pp0_iter17_reg;
        empty_reg_2340_pp0_iter19_reg <= empty_reg_2340_pp0_iter18_reg;
        empty_reg_2340_pp0_iter20_reg <= empty_reg_2340_pp0_iter19_reg;
        empty_reg_2340_pp0_iter21_reg <= empty_reg_2340_pp0_iter20_reg;
        empty_reg_2340_pp0_iter22_reg <= empty_reg_2340_pp0_iter21_reg;
        empty_reg_2340_pp0_iter23_reg <= empty_reg_2340_pp0_iter22_reg;
        empty_reg_2340_pp0_iter24_reg <= empty_reg_2340_pp0_iter23_reg;
        empty_reg_2340_pp0_iter25_reg <= empty_reg_2340_pp0_iter24_reg;
        empty_reg_2340_pp0_iter26_reg <= empty_reg_2340_pp0_iter25_reg;
        empty_reg_2340_pp0_iter27_reg <= empty_reg_2340_pp0_iter26_reg;
        empty_reg_2340_pp0_iter28_reg <= empty_reg_2340_pp0_iter27_reg;
        empty_reg_2340_pp0_iter29_reg <= empty_reg_2340_pp0_iter28_reg;
        empty_reg_2340_pp0_iter2_reg <= empty_reg_2340;
        empty_reg_2340_pp0_iter30_reg <= empty_reg_2340_pp0_iter29_reg;
        empty_reg_2340_pp0_iter31_reg <= empty_reg_2340_pp0_iter30_reg;
        empty_reg_2340_pp0_iter32_reg <= empty_reg_2340_pp0_iter31_reg;
        empty_reg_2340_pp0_iter33_reg <= empty_reg_2340_pp0_iter32_reg;
        empty_reg_2340_pp0_iter34_reg <= empty_reg_2340_pp0_iter33_reg;
        empty_reg_2340_pp0_iter35_reg <= empty_reg_2340_pp0_iter34_reg;
        empty_reg_2340_pp0_iter36_reg <= empty_reg_2340_pp0_iter35_reg;
        empty_reg_2340_pp0_iter37_reg <= empty_reg_2340_pp0_iter36_reg;
        empty_reg_2340_pp0_iter38_reg <= empty_reg_2340_pp0_iter37_reg;
        empty_reg_2340_pp0_iter3_reg <= empty_reg_2340_pp0_iter2_reg;
        empty_reg_2340_pp0_iter4_reg <= empty_reg_2340_pp0_iter3_reg;
        empty_reg_2340_pp0_iter5_reg <= empty_reg_2340_pp0_iter4_reg;
        empty_reg_2340_pp0_iter6_reg <= empty_reg_2340_pp0_iter5_reg;
        empty_reg_2340_pp0_iter7_reg <= empty_reg_2340_pp0_iter6_reg;
        empty_reg_2340_pp0_iter8_reg <= empty_reg_2340_pp0_iter7_reg;
        empty_reg_2340_pp0_iter9_reg <= empty_reg_2340_pp0_iter8_reg;
        icmp_ln144_reg_2196 <= icmp_ln144_fu_862_p2;
        icmp_ln144_reg_2196_pp0_iter10_reg <= icmp_ln144_reg_2196_pp0_iter9_reg;
        icmp_ln144_reg_2196_pp0_iter11_reg <= icmp_ln144_reg_2196_pp0_iter10_reg;
        icmp_ln144_reg_2196_pp0_iter12_reg <= icmp_ln144_reg_2196_pp0_iter11_reg;
        icmp_ln144_reg_2196_pp0_iter13_reg <= icmp_ln144_reg_2196_pp0_iter12_reg;
        icmp_ln144_reg_2196_pp0_iter14_reg <= icmp_ln144_reg_2196_pp0_iter13_reg;
        icmp_ln144_reg_2196_pp0_iter15_reg <= icmp_ln144_reg_2196_pp0_iter14_reg;
        icmp_ln144_reg_2196_pp0_iter16_reg <= icmp_ln144_reg_2196_pp0_iter15_reg;
        icmp_ln144_reg_2196_pp0_iter17_reg <= icmp_ln144_reg_2196_pp0_iter16_reg;
        icmp_ln144_reg_2196_pp0_iter18_reg <= icmp_ln144_reg_2196_pp0_iter17_reg;
        icmp_ln144_reg_2196_pp0_iter19_reg <= icmp_ln144_reg_2196_pp0_iter18_reg;
        icmp_ln144_reg_2196_pp0_iter1_reg <= icmp_ln144_reg_2196;
        icmp_ln144_reg_2196_pp0_iter20_reg <= icmp_ln144_reg_2196_pp0_iter19_reg;
        icmp_ln144_reg_2196_pp0_iter21_reg <= icmp_ln144_reg_2196_pp0_iter20_reg;
        icmp_ln144_reg_2196_pp0_iter22_reg <= icmp_ln144_reg_2196_pp0_iter21_reg;
        icmp_ln144_reg_2196_pp0_iter23_reg <= icmp_ln144_reg_2196_pp0_iter22_reg;
        icmp_ln144_reg_2196_pp0_iter24_reg <= icmp_ln144_reg_2196_pp0_iter23_reg;
        icmp_ln144_reg_2196_pp0_iter25_reg <= icmp_ln144_reg_2196_pp0_iter24_reg;
        icmp_ln144_reg_2196_pp0_iter26_reg <= icmp_ln144_reg_2196_pp0_iter25_reg;
        icmp_ln144_reg_2196_pp0_iter27_reg <= icmp_ln144_reg_2196_pp0_iter26_reg;
        icmp_ln144_reg_2196_pp0_iter28_reg <= icmp_ln144_reg_2196_pp0_iter27_reg;
        icmp_ln144_reg_2196_pp0_iter29_reg <= icmp_ln144_reg_2196_pp0_iter28_reg;
        icmp_ln144_reg_2196_pp0_iter2_reg <= icmp_ln144_reg_2196_pp0_iter1_reg;
        icmp_ln144_reg_2196_pp0_iter30_reg <= icmp_ln144_reg_2196_pp0_iter29_reg;
        icmp_ln144_reg_2196_pp0_iter31_reg <= icmp_ln144_reg_2196_pp0_iter30_reg;
        icmp_ln144_reg_2196_pp0_iter32_reg <= icmp_ln144_reg_2196_pp0_iter31_reg;
        icmp_ln144_reg_2196_pp0_iter33_reg <= icmp_ln144_reg_2196_pp0_iter32_reg;
        icmp_ln144_reg_2196_pp0_iter34_reg <= icmp_ln144_reg_2196_pp0_iter33_reg;
        icmp_ln144_reg_2196_pp0_iter35_reg <= icmp_ln144_reg_2196_pp0_iter34_reg;
        icmp_ln144_reg_2196_pp0_iter36_reg <= icmp_ln144_reg_2196_pp0_iter35_reg;
        icmp_ln144_reg_2196_pp0_iter37_reg <= icmp_ln144_reg_2196_pp0_iter36_reg;
        icmp_ln144_reg_2196_pp0_iter38_reg <= icmp_ln144_reg_2196_pp0_iter37_reg;
        icmp_ln144_reg_2196_pp0_iter39_reg <= icmp_ln144_reg_2196_pp0_iter38_reg;
        icmp_ln144_reg_2196_pp0_iter3_reg <= icmp_ln144_reg_2196_pp0_iter2_reg;
        icmp_ln144_reg_2196_pp0_iter4_reg <= icmp_ln144_reg_2196_pp0_iter3_reg;
        icmp_ln144_reg_2196_pp0_iter5_reg <= icmp_ln144_reg_2196_pp0_iter4_reg;
        icmp_ln144_reg_2196_pp0_iter6_reg <= icmp_ln144_reg_2196_pp0_iter5_reg;
        icmp_ln144_reg_2196_pp0_iter7_reg <= icmp_ln144_reg_2196_pp0_iter6_reg;
        icmp_ln144_reg_2196_pp0_iter8_reg <= icmp_ln144_reg_2196_pp0_iter7_reg;
        icmp_ln144_reg_2196_pp0_iter9_reg <= icmp_ln144_reg_2196_pp0_iter8_reg;
        icmp_ln235_reg_2214_pp0_iter10_reg <= icmp_ln235_reg_2214_pp0_iter9_reg;
        icmp_ln235_reg_2214_pp0_iter11_reg <= icmp_ln235_reg_2214_pp0_iter10_reg;
        icmp_ln235_reg_2214_pp0_iter12_reg <= icmp_ln235_reg_2214_pp0_iter11_reg;
        icmp_ln235_reg_2214_pp0_iter13_reg <= icmp_ln235_reg_2214_pp0_iter12_reg;
        icmp_ln235_reg_2214_pp0_iter14_reg <= icmp_ln235_reg_2214_pp0_iter13_reg;
        icmp_ln235_reg_2214_pp0_iter15_reg <= icmp_ln235_reg_2214_pp0_iter14_reg;
        icmp_ln235_reg_2214_pp0_iter16_reg <= icmp_ln235_reg_2214_pp0_iter15_reg;
        icmp_ln235_reg_2214_pp0_iter17_reg <= icmp_ln235_reg_2214_pp0_iter16_reg;
        icmp_ln235_reg_2214_pp0_iter18_reg <= icmp_ln235_reg_2214_pp0_iter17_reg;
        icmp_ln235_reg_2214_pp0_iter19_reg <= icmp_ln235_reg_2214_pp0_iter18_reg;
        icmp_ln235_reg_2214_pp0_iter1_reg <= icmp_ln235_reg_2214;
        icmp_ln235_reg_2214_pp0_iter20_reg <= icmp_ln235_reg_2214_pp0_iter19_reg;
        icmp_ln235_reg_2214_pp0_iter21_reg <= icmp_ln235_reg_2214_pp0_iter20_reg;
        icmp_ln235_reg_2214_pp0_iter22_reg <= icmp_ln235_reg_2214_pp0_iter21_reg;
        icmp_ln235_reg_2214_pp0_iter23_reg <= icmp_ln235_reg_2214_pp0_iter22_reg;
        icmp_ln235_reg_2214_pp0_iter24_reg <= icmp_ln235_reg_2214_pp0_iter23_reg;
        icmp_ln235_reg_2214_pp0_iter25_reg <= icmp_ln235_reg_2214_pp0_iter24_reg;
        icmp_ln235_reg_2214_pp0_iter26_reg <= icmp_ln235_reg_2214_pp0_iter25_reg;
        icmp_ln235_reg_2214_pp0_iter27_reg <= icmp_ln235_reg_2214_pp0_iter26_reg;
        icmp_ln235_reg_2214_pp0_iter28_reg <= icmp_ln235_reg_2214_pp0_iter27_reg;
        icmp_ln235_reg_2214_pp0_iter29_reg <= icmp_ln235_reg_2214_pp0_iter28_reg;
        icmp_ln235_reg_2214_pp0_iter2_reg <= icmp_ln235_reg_2214_pp0_iter1_reg;
        icmp_ln235_reg_2214_pp0_iter30_reg <= icmp_ln235_reg_2214_pp0_iter29_reg;
        icmp_ln235_reg_2214_pp0_iter31_reg <= icmp_ln235_reg_2214_pp0_iter30_reg;
        icmp_ln235_reg_2214_pp0_iter32_reg <= icmp_ln235_reg_2214_pp0_iter31_reg;
        icmp_ln235_reg_2214_pp0_iter33_reg <= icmp_ln235_reg_2214_pp0_iter32_reg;
        icmp_ln235_reg_2214_pp0_iter34_reg <= icmp_ln235_reg_2214_pp0_iter33_reg;
        icmp_ln235_reg_2214_pp0_iter35_reg <= icmp_ln235_reg_2214_pp0_iter34_reg;
        icmp_ln235_reg_2214_pp0_iter36_reg <= icmp_ln235_reg_2214_pp0_iter35_reg;
        icmp_ln235_reg_2214_pp0_iter37_reg <= icmp_ln235_reg_2214_pp0_iter36_reg;
        icmp_ln235_reg_2214_pp0_iter38_reg <= icmp_ln235_reg_2214_pp0_iter37_reg;
        icmp_ln235_reg_2214_pp0_iter39_reg <= icmp_ln235_reg_2214_pp0_iter38_reg;
        icmp_ln235_reg_2214_pp0_iter3_reg <= icmp_ln235_reg_2214_pp0_iter2_reg;
        icmp_ln235_reg_2214_pp0_iter40_reg <= icmp_ln235_reg_2214_pp0_iter39_reg;
        icmp_ln235_reg_2214_pp0_iter41_reg <= icmp_ln235_reg_2214_pp0_iter40_reg;
        icmp_ln235_reg_2214_pp0_iter42_reg <= icmp_ln235_reg_2214_pp0_iter41_reg;
        icmp_ln235_reg_2214_pp0_iter43_reg <= icmp_ln235_reg_2214_pp0_iter42_reg;
        icmp_ln235_reg_2214_pp0_iter44_reg <= icmp_ln235_reg_2214_pp0_iter43_reg;
        icmp_ln235_reg_2214_pp0_iter45_reg <= icmp_ln235_reg_2214_pp0_iter44_reg;
        icmp_ln235_reg_2214_pp0_iter46_reg <= icmp_ln235_reg_2214_pp0_iter45_reg;
        icmp_ln235_reg_2214_pp0_iter47_reg <= icmp_ln235_reg_2214_pp0_iter46_reg;
        icmp_ln235_reg_2214_pp0_iter48_reg <= icmp_ln235_reg_2214_pp0_iter47_reg;
        icmp_ln235_reg_2214_pp0_iter49_reg <= icmp_ln235_reg_2214_pp0_iter48_reg;
        icmp_ln235_reg_2214_pp0_iter4_reg <= icmp_ln235_reg_2214_pp0_iter3_reg;
        icmp_ln235_reg_2214_pp0_iter50_reg <= icmp_ln235_reg_2214_pp0_iter49_reg;
        icmp_ln235_reg_2214_pp0_iter51_reg <= icmp_ln235_reg_2214_pp0_iter50_reg;
        icmp_ln235_reg_2214_pp0_iter52_reg <= icmp_ln235_reg_2214_pp0_iter51_reg;
        icmp_ln235_reg_2214_pp0_iter53_reg <= icmp_ln235_reg_2214_pp0_iter52_reg;
        icmp_ln235_reg_2214_pp0_iter54_reg <= icmp_ln235_reg_2214_pp0_iter53_reg;
        icmp_ln235_reg_2214_pp0_iter55_reg <= icmp_ln235_reg_2214_pp0_iter54_reg;
        icmp_ln235_reg_2214_pp0_iter56_reg <= icmp_ln235_reg_2214_pp0_iter55_reg;
        icmp_ln235_reg_2214_pp0_iter57_reg <= icmp_ln235_reg_2214_pp0_iter56_reg;
        icmp_ln235_reg_2214_pp0_iter58_reg <= icmp_ln235_reg_2214_pp0_iter57_reg;
        icmp_ln235_reg_2214_pp0_iter59_reg <= icmp_ln235_reg_2214_pp0_iter58_reg;
        icmp_ln235_reg_2214_pp0_iter5_reg <= icmp_ln235_reg_2214_pp0_iter4_reg;
        icmp_ln235_reg_2214_pp0_iter60_reg <= icmp_ln235_reg_2214_pp0_iter59_reg;
        icmp_ln235_reg_2214_pp0_iter61_reg <= icmp_ln235_reg_2214_pp0_iter60_reg;
        icmp_ln235_reg_2214_pp0_iter62_reg <= icmp_ln235_reg_2214_pp0_iter61_reg;
        icmp_ln235_reg_2214_pp0_iter63_reg <= icmp_ln235_reg_2214_pp0_iter62_reg;
        icmp_ln235_reg_2214_pp0_iter64_reg <= icmp_ln235_reg_2214_pp0_iter63_reg;
        icmp_ln235_reg_2214_pp0_iter65_reg <= icmp_ln235_reg_2214_pp0_iter64_reg;
        icmp_ln235_reg_2214_pp0_iter66_reg <= icmp_ln235_reg_2214_pp0_iter65_reg;
        icmp_ln235_reg_2214_pp0_iter67_reg <= icmp_ln235_reg_2214_pp0_iter66_reg;
        icmp_ln235_reg_2214_pp0_iter68_reg <= icmp_ln235_reg_2214_pp0_iter67_reg;
        icmp_ln235_reg_2214_pp0_iter69_reg <= icmp_ln235_reg_2214_pp0_iter68_reg;
        icmp_ln235_reg_2214_pp0_iter6_reg <= icmp_ln235_reg_2214_pp0_iter5_reg;
        icmp_ln235_reg_2214_pp0_iter70_reg <= icmp_ln235_reg_2214_pp0_iter69_reg;
        icmp_ln235_reg_2214_pp0_iter71_reg <= icmp_ln235_reg_2214_pp0_iter70_reg;
        icmp_ln235_reg_2214_pp0_iter72_reg <= icmp_ln235_reg_2214_pp0_iter71_reg;
        icmp_ln235_reg_2214_pp0_iter73_reg <= icmp_ln235_reg_2214_pp0_iter72_reg;
        icmp_ln235_reg_2214_pp0_iter74_reg <= icmp_ln235_reg_2214_pp0_iter73_reg;
        icmp_ln235_reg_2214_pp0_iter7_reg <= icmp_ln235_reg_2214_pp0_iter6_reg;
        icmp_ln235_reg_2214_pp0_iter8_reg <= icmp_ln235_reg_2214_pp0_iter7_reg;
        icmp_ln235_reg_2214_pp0_iter9_reg <= icmp_ln235_reg_2214_pp0_iter8_reg;
        pool_final_addr_reg_2361_pp0_iter10_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter9_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter11_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter10_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter12_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter11_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter13_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter12_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter14_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter13_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter15_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter14_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter16_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter15_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter17_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter16_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter18_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter17_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter19_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter18_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter20_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter19_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter21_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter20_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter22_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter21_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter23_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter22_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter24_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter23_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter25_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter24_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter26_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter25_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter27_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter26_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter28_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter27_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter29_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter28_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter2_reg[3 : 1] <= pool_final_addr_reg_2361[3 : 1];
        pool_final_addr_reg_2361_pp0_iter30_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter29_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter31_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter30_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter32_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter31_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter33_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter32_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter34_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter33_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter35_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter34_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter36_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter35_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter37_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter36_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter38_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter37_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter3_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter2_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter4_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter3_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter5_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter4_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter6_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter5_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter7_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter6_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter8_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter7_reg[3 : 1];
        pool_final_addr_reg_2361_pp0_iter9_reg[3 : 1] <= pool_final_addr_reg_2361_pp0_iter8_reg[3 : 1];
        row_reg0_addr_reg_2345_pp0_iter10_reg <= row_reg0_addr_reg_2345_pp0_iter9_reg;
        row_reg0_addr_reg_2345_pp0_iter11_reg <= row_reg0_addr_reg_2345_pp0_iter10_reg;
        row_reg0_addr_reg_2345_pp0_iter12_reg <= row_reg0_addr_reg_2345_pp0_iter11_reg;
        row_reg0_addr_reg_2345_pp0_iter13_reg <= row_reg0_addr_reg_2345_pp0_iter12_reg;
        row_reg0_addr_reg_2345_pp0_iter14_reg <= row_reg0_addr_reg_2345_pp0_iter13_reg;
        row_reg0_addr_reg_2345_pp0_iter15_reg <= row_reg0_addr_reg_2345_pp0_iter14_reg;
        row_reg0_addr_reg_2345_pp0_iter16_reg <= row_reg0_addr_reg_2345_pp0_iter15_reg;
        row_reg0_addr_reg_2345_pp0_iter17_reg <= row_reg0_addr_reg_2345_pp0_iter16_reg;
        row_reg0_addr_reg_2345_pp0_iter18_reg <= row_reg0_addr_reg_2345_pp0_iter17_reg;
        row_reg0_addr_reg_2345_pp0_iter19_reg <= row_reg0_addr_reg_2345_pp0_iter18_reg;
        row_reg0_addr_reg_2345_pp0_iter20_reg <= row_reg0_addr_reg_2345_pp0_iter19_reg;
        row_reg0_addr_reg_2345_pp0_iter21_reg <= row_reg0_addr_reg_2345_pp0_iter20_reg;
        row_reg0_addr_reg_2345_pp0_iter22_reg <= row_reg0_addr_reg_2345_pp0_iter21_reg;
        row_reg0_addr_reg_2345_pp0_iter23_reg <= row_reg0_addr_reg_2345_pp0_iter22_reg;
        row_reg0_addr_reg_2345_pp0_iter24_reg <= row_reg0_addr_reg_2345_pp0_iter23_reg;
        row_reg0_addr_reg_2345_pp0_iter25_reg <= row_reg0_addr_reg_2345_pp0_iter24_reg;
        row_reg0_addr_reg_2345_pp0_iter26_reg <= row_reg0_addr_reg_2345_pp0_iter25_reg;
        row_reg0_addr_reg_2345_pp0_iter27_reg <= row_reg0_addr_reg_2345_pp0_iter26_reg;
        row_reg0_addr_reg_2345_pp0_iter28_reg <= row_reg0_addr_reg_2345_pp0_iter27_reg;
        row_reg0_addr_reg_2345_pp0_iter29_reg <= row_reg0_addr_reg_2345_pp0_iter28_reg;
        row_reg0_addr_reg_2345_pp0_iter2_reg <= row_reg0_addr_reg_2345;
        row_reg0_addr_reg_2345_pp0_iter30_reg <= row_reg0_addr_reg_2345_pp0_iter29_reg;
        row_reg0_addr_reg_2345_pp0_iter31_reg <= row_reg0_addr_reg_2345_pp0_iter30_reg;
        row_reg0_addr_reg_2345_pp0_iter32_reg <= row_reg0_addr_reg_2345_pp0_iter31_reg;
        row_reg0_addr_reg_2345_pp0_iter33_reg <= row_reg0_addr_reg_2345_pp0_iter32_reg;
        row_reg0_addr_reg_2345_pp0_iter34_reg <= row_reg0_addr_reg_2345_pp0_iter33_reg;
        row_reg0_addr_reg_2345_pp0_iter35_reg <= row_reg0_addr_reg_2345_pp0_iter34_reg;
        row_reg0_addr_reg_2345_pp0_iter36_reg <= row_reg0_addr_reg_2345_pp0_iter35_reg;
        row_reg0_addr_reg_2345_pp0_iter37_reg <= row_reg0_addr_reg_2345_pp0_iter36_reg;
        row_reg0_addr_reg_2345_pp0_iter38_reg <= row_reg0_addr_reg_2345_pp0_iter37_reg;
        row_reg0_addr_reg_2345_pp0_iter3_reg <= row_reg0_addr_reg_2345_pp0_iter2_reg;
        row_reg0_addr_reg_2345_pp0_iter4_reg <= row_reg0_addr_reg_2345_pp0_iter3_reg;
        row_reg0_addr_reg_2345_pp0_iter5_reg <= row_reg0_addr_reg_2345_pp0_iter4_reg;
        row_reg0_addr_reg_2345_pp0_iter6_reg <= row_reg0_addr_reg_2345_pp0_iter5_reg;
        row_reg0_addr_reg_2345_pp0_iter7_reg <= row_reg0_addr_reg_2345_pp0_iter6_reg;
        row_reg0_addr_reg_2345_pp0_iter8_reg <= row_reg0_addr_reg_2345_pp0_iter7_reg;
        row_reg0_addr_reg_2345_pp0_iter9_reg <= row_reg0_addr_reg_2345_pp0_iter8_reg;
        row_reg1_addr_reg_2351_pp0_iter10_reg <= row_reg1_addr_reg_2351_pp0_iter9_reg;
        row_reg1_addr_reg_2351_pp0_iter11_reg <= row_reg1_addr_reg_2351_pp0_iter10_reg;
        row_reg1_addr_reg_2351_pp0_iter12_reg <= row_reg1_addr_reg_2351_pp0_iter11_reg;
        row_reg1_addr_reg_2351_pp0_iter13_reg <= row_reg1_addr_reg_2351_pp0_iter12_reg;
        row_reg1_addr_reg_2351_pp0_iter14_reg <= row_reg1_addr_reg_2351_pp0_iter13_reg;
        row_reg1_addr_reg_2351_pp0_iter15_reg <= row_reg1_addr_reg_2351_pp0_iter14_reg;
        row_reg1_addr_reg_2351_pp0_iter16_reg <= row_reg1_addr_reg_2351_pp0_iter15_reg;
        row_reg1_addr_reg_2351_pp0_iter17_reg <= row_reg1_addr_reg_2351_pp0_iter16_reg;
        row_reg1_addr_reg_2351_pp0_iter18_reg <= row_reg1_addr_reg_2351_pp0_iter17_reg;
        row_reg1_addr_reg_2351_pp0_iter19_reg <= row_reg1_addr_reg_2351_pp0_iter18_reg;
        row_reg1_addr_reg_2351_pp0_iter20_reg <= row_reg1_addr_reg_2351_pp0_iter19_reg;
        row_reg1_addr_reg_2351_pp0_iter21_reg <= row_reg1_addr_reg_2351_pp0_iter20_reg;
        row_reg1_addr_reg_2351_pp0_iter22_reg <= row_reg1_addr_reg_2351_pp0_iter21_reg;
        row_reg1_addr_reg_2351_pp0_iter23_reg <= row_reg1_addr_reg_2351_pp0_iter22_reg;
        row_reg1_addr_reg_2351_pp0_iter24_reg <= row_reg1_addr_reg_2351_pp0_iter23_reg;
        row_reg1_addr_reg_2351_pp0_iter25_reg <= row_reg1_addr_reg_2351_pp0_iter24_reg;
        row_reg1_addr_reg_2351_pp0_iter26_reg <= row_reg1_addr_reg_2351_pp0_iter25_reg;
        row_reg1_addr_reg_2351_pp0_iter27_reg <= row_reg1_addr_reg_2351_pp0_iter26_reg;
        row_reg1_addr_reg_2351_pp0_iter28_reg <= row_reg1_addr_reg_2351_pp0_iter27_reg;
        row_reg1_addr_reg_2351_pp0_iter29_reg <= row_reg1_addr_reg_2351_pp0_iter28_reg;
        row_reg1_addr_reg_2351_pp0_iter2_reg <= row_reg1_addr_reg_2351;
        row_reg1_addr_reg_2351_pp0_iter30_reg <= row_reg1_addr_reg_2351_pp0_iter29_reg;
        row_reg1_addr_reg_2351_pp0_iter31_reg <= row_reg1_addr_reg_2351_pp0_iter30_reg;
        row_reg1_addr_reg_2351_pp0_iter32_reg <= row_reg1_addr_reg_2351_pp0_iter31_reg;
        row_reg1_addr_reg_2351_pp0_iter33_reg <= row_reg1_addr_reg_2351_pp0_iter32_reg;
        row_reg1_addr_reg_2351_pp0_iter34_reg <= row_reg1_addr_reg_2351_pp0_iter33_reg;
        row_reg1_addr_reg_2351_pp0_iter35_reg <= row_reg1_addr_reg_2351_pp0_iter34_reg;
        row_reg1_addr_reg_2351_pp0_iter36_reg <= row_reg1_addr_reg_2351_pp0_iter35_reg;
        row_reg1_addr_reg_2351_pp0_iter37_reg <= row_reg1_addr_reg_2351_pp0_iter36_reg;
        row_reg1_addr_reg_2351_pp0_iter38_reg <= row_reg1_addr_reg_2351_pp0_iter37_reg;
        row_reg1_addr_reg_2351_pp0_iter3_reg <= row_reg1_addr_reg_2351_pp0_iter2_reg;
        row_reg1_addr_reg_2351_pp0_iter4_reg <= row_reg1_addr_reg_2351_pp0_iter3_reg;
        row_reg1_addr_reg_2351_pp0_iter5_reg <= row_reg1_addr_reg_2351_pp0_iter4_reg;
        row_reg1_addr_reg_2351_pp0_iter6_reg <= row_reg1_addr_reg_2351_pp0_iter5_reg;
        row_reg1_addr_reg_2351_pp0_iter7_reg <= row_reg1_addr_reg_2351_pp0_iter6_reg;
        row_reg1_addr_reg_2351_pp0_iter8_reg <= row_reg1_addr_reg_2351_pp0_iter7_reg;
        row_reg1_addr_reg_2351_pp0_iter9_reg <= row_reg1_addr_reg_2351_pp0_iter8_reg;
        tmp_2_reg_2218_pp0_iter1_reg <= tmp_2_reg_2218;
        trunc_ln185_reg_2356_pp0_iter10_reg <= trunc_ln185_reg_2356_pp0_iter9_reg;
        trunc_ln185_reg_2356_pp0_iter11_reg <= trunc_ln185_reg_2356_pp0_iter10_reg;
        trunc_ln185_reg_2356_pp0_iter12_reg <= trunc_ln185_reg_2356_pp0_iter11_reg;
        trunc_ln185_reg_2356_pp0_iter13_reg <= trunc_ln185_reg_2356_pp0_iter12_reg;
        trunc_ln185_reg_2356_pp0_iter14_reg <= trunc_ln185_reg_2356_pp0_iter13_reg;
        trunc_ln185_reg_2356_pp0_iter15_reg <= trunc_ln185_reg_2356_pp0_iter14_reg;
        trunc_ln185_reg_2356_pp0_iter16_reg <= trunc_ln185_reg_2356_pp0_iter15_reg;
        trunc_ln185_reg_2356_pp0_iter17_reg <= trunc_ln185_reg_2356_pp0_iter16_reg;
        trunc_ln185_reg_2356_pp0_iter18_reg <= trunc_ln185_reg_2356_pp0_iter17_reg;
        trunc_ln185_reg_2356_pp0_iter19_reg <= trunc_ln185_reg_2356_pp0_iter18_reg;
        trunc_ln185_reg_2356_pp0_iter20_reg <= trunc_ln185_reg_2356_pp0_iter19_reg;
        trunc_ln185_reg_2356_pp0_iter21_reg <= trunc_ln185_reg_2356_pp0_iter20_reg;
        trunc_ln185_reg_2356_pp0_iter22_reg <= trunc_ln185_reg_2356_pp0_iter21_reg;
        trunc_ln185_reg_2356_pp0_iter23_reg <= trunc_ln185_reg_2356_pp0_iter22_reg;
        trunc_ln185_reg_2356_pp0_iter24_reg <= trunc_ln185_reg_2356_pp0_iter23_reg;
        trunc_ln185_reg_2356_pp0_iter25_reg <= trunc_ln185_reg_2356_pp0_iter24_reg;
        trunc_ln185_reg_2356_pp0_iter26_reg <= trunc_ln185_reg_2356_pp0_iter25_reg;
        trunc_ln185_reg_2356_pp0_iter27_reg <= trunc_ln185_reg_2356_pp0_iter26_reg;
        trunc_ln185_reg_2356_pp0_iter28_reg <= trunc_ln185_reg_2356_pp0_iter27_reg;
        trunc_ln185_reg_2356_pp0_iter29_reg <= trunc_ln185_reg_2356_pp0_iter28_reg;
        trunc_ln185_reg_2356_pp0_iter2_reg <= trunc_ln185_reg_2356;
        trunc_ln185_reg_2356_pp0_iter30_reg <= trunc_ln185_reg_2356_pp0_iter29_reg;
        trunc_ln185_reg_2356_pp0_iter31_reg <= trunc_ln185_reg_2356_pp0_iter30_reg;
        trunc_ln185_reg_2356_pp0_iter32_reg <= trunc_ln185_reg_2356_pp0_iter31_reg;
        trunc_ln185_reg_2356_pp0_iter33_reg <= trunc_ln185_reg_2356_pp0_iter32_reg;
        trunc_ln185_reg_2356_pp0_iter34_reg <= trunc_ln185_reg_2356_pp0_iter33_reg;
        trunc_ln185_reg_2356_pp0_iter35_reg <= trunc_ln185_reg_2356_pp0_iter34_reg;
        trunc_ln185_reg_2356_pp0_iter36_reg <= trunc_ln185_reg_2356_pp0_iter35_reg;
        trunc_ln185_reg_2356_pp0_iter37_reg <= trunc_ln185_reg_2356_pp0_iter36_reg;
        trunc_ln185_reg_2356_pp0_iter38_reg <= trunc_ln185_reg_2356_pp0_iter37_reg;
        trunc_ln185_reg_2356_pp0_iter39_reg <= trunc_ln185_reg_2356_pp0_iter38_reg;
        trunc_ln185_reg_2356_pp0_iter3_reg <= trunc_ln185_reg_2356_pp0_iter2_reg;
        trunc_ln185_reg_2356_pp0_iter4_reg <= trunc_ln185_reg_2356_pp0_iter3_reg;
        trunc_ln185_reg_2356_pp0_iter5_reg <= trunc_ln185_reg_2356_pp0_iter4_reg;
        trunc_ln185_reg_2356_pp0_iter6_reg <= trunc_ln185_reg_2356_pp0_iter5_reg;
        trunc_ln185_reg_2356_pp0_iter7_reg <= trunc_ln185_reg_2356_pp0_iter6_reg;
        trunc_ln185_reg_2356_pp0_iter8_reg <= trunc_ln185_reg_2356_pp0_iter7_reg;
        trunc_ln185_reg_2356_pp0_iter9_reg <= trunc_ln185_reg_2356_pp0_iter8_reg;
        trunc_ln238_1_reg_2239_pp0_iter1_reg <= trunc_ln238_1_reg_2239;
        trunc_ln238_reg_2234_pp0_iter1_reg <= trunc_ln238_reg_2234;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_reg_2214 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln239_reg_2244) & (1'd1 == and_ln234_reg_2205) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln240_3_reg_2320 <= add_ln240_3_fu_1302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln240_3_reg_2320_pp0_iter10_reg <= add_ln240_3_reg_2320_pp0_iter9_reg;
        add_ln240_3_reg_2320_pp0_iter11_reg <= add_ln240_3_reg_2320_pp0_iter10_reg;
        add_ln240_3_reg_2320_pp0_iter12_reg <= add_ln240_3_reg_2320_pp0_iter11_reg;
        add_ln240_3_reg_2320_pp0_iter13_reg <= add_ln240_3_reg_2320_pp0_iter12_reg;
        add_ln240_3_reg_2320_pp0_iter14_reg <= add_ln240_3_reg_2320_pp0_iter13_reg;
        add_ln240_3_reg_2320_pp0_iter15_reg <= add_ln240_3_reg_2320_pp0_iter14_reg;
        add_ln240_3_reg_2320_pp0_iter16_reg <= add_ln240_3_reg_2320_pp0_iter15_reg;
        add_ln240_3_reg_2320_pp0_iter17_reg <= add_ln240_3_reg_2320_pp0_iter16_reg;
        add_ln240_3_reg_2320_pp0_iter18_reg <= add_ln240_3_reg_2320_pp0_iter17_reg;
        add_ln240_3_reg_2320_pp0_iter19_reg <= add_ln240_3_reg_2320_pp0_iter18_reg;
        add_ln240_3_reg_2320_pp0_iter1_reg <= add_ln240_3_reg_2320;
        add_ln240_3_reg_2320_pp0_iter20_reg <= add_ln240_3_reg_2320_pp0_iter19_reg;
        add_ln240_3_reg_2320_pp0_iter21_reg <= add_ln240_3_reg_2320_pp0_iter20_reg;
        add_ln240_3_reg_2320_pp0_iter22_reg <= add_ln240_3_reg_2320_pp0_iter21_reg;
        add_ln240_3_reg_2320_pp0_iter23_reg <= add_ln240_3_reg_2320_pp0_iter22_reg;
        add_ln240_3_reg_2320_pp0_iter24_reg <= add_ln240_3_reg_2320_pp0_iter23_reg;
        add_ln240_3_reg_2320_pp0_iter25_reg <= add_ln240_3_reg_2320_pp0_iter24_reg;
        add_ln240_3_reg_2320_pp0_iter26_reg <= add_ln240_3_reg_2320_pp0_iter25_reg;
        add_ln240_3_reg_2320_pp0_iter27_reg <= add_ln240_3_reg_2320_pp0_iter26_reg;
        add_ln240_3_reg_2320_pp0_iter28_reg <= add_ln240_3_reg_2320_pp0_iter27_reg;
        add_ln240_3_reg_2320_pp0_iter29_reg <= add_ln240_3_reg_2320_pp0_iter28_reg;
        add_ln240_3_reg_2320_pp0_iter2_reg <= add_ln240_3_reg_2320_pp0_iter1_reg;
        add_ln240_3_reg_2320_pp0_iter30_reg <= add_ln240_3_reg_2320_pp0_iter29_reg;
        add_ln240_3_reg_2320_pp0_iter31_reg <= add_ln240_3_reg_2320_pp0_iter30_reg;
        add_ln240_3_reg_2320_pp0_iter32_reg <= add_ln240_3_reg_2320_pp0_iter31_reg;
        add_ln240_3_reg_2320_pp0_iter33_reg <= add_ln240_3_reg_2320_pp0_iter32_reg;
        add_ln240_3_reg_2320_pp0_iter34_reg <= add_ln240_3_reg_2320_pp0_iter33_reg;
        add_ln240_3_reg_2320_pp0_iter35_reg <= add_ln240_3_reg_2320_pp0_iter34_reg;
        add_ln240_3_reg_2320_pp0_iter36_reg <= add_ln240_3_reg_2320_pp0_iter35_reg;
        add_ln240_3_reg_2320_pp0_iter37_reg <= add_ln240_3_reg_2320_pp0_iter36_reg;
        add_ln240_3_reg_2320_pp0_iter38_reg <= add_ln240_3_reg_2320_pp0_iter37_reg;
        add_ln240_3_reg_2320_pp0_iter3_reg <= add_ln240_3_reg_2320_pp0_iter2_reg;
        add_ln240_3_reg_2320_pp0_iter4_reg <= add_ln240_3_reg_2320_pp0_iter3_reg;
        add_ln240_3_reg_2320_pp0_iter5_reg <= add_ln240_3_reg_2320_pp0_iter4_reg;
        add_ln240_3_reg_2320_pp0_iter6_reg <= add_ln240_3_reg_2320_pp0_iter5_reg;
        add_ln240_3_reg_2320_pp0_iter7_reg <= add_ln240_3_reg_2320_pp0_iter6_reg;
        add_ln240_3_reg_2320_pp0_iter8_reg <= add_ln240_3_reg_2320_pp0_iter7_reg;
        add_ln240_3_reg_2320_pp0_iter9_reg <= add_ln240_3_reg_2320_pp0_iter8_reg;
        and_ln149_reg_2273_pp0_iter10_reg <= and_ln149_reg_2273_pp0_iter9_reg;
        and_ln149_reg_2273_pp0_iter11_reg <= and_ln149_reg_2273_pp0_iter10_reg;
        and_ln149_reg_2273_pp0_iter12_reg <= and_ln149_reg_2273_pp0_iter11_reg;
        and_ln149_reg_2273_pp0_iter13_reg <= and_ln149_reg_2273_pp0_iter12_reg;
        and_ln149_reg_2273_pp0_iter14_reg <= and_ln149_reg_2273_pp0_iter13_reg;
        and_ln149_reg_2273_pp0_iter15_reg <= and_ln149_reg_2273_pp0_iter14_reg;
        and_ln149_reg_2273_pp0_iter16_reg <= and_ln149_reg_2273_pp0_iter15_reg;
        and_ln149_reg_2273_pp0_iter17_reg <= and_ln149_reg_2273_pp0_iter16_reg;
        and_ln149_reg_2273_pp0_iter18_reg <= and_ln149_reg_2273_pp0_iter17_reg;
        and_ln149_reg_2273_pp0_iter19_reg <= and_ln149_reg_2273_pp0_iter18_reg;
        and_ln149_reg_2273_pp0_iter1_reg <= and_ln149_reg_2273;
        and_ln149_reg_2273_pp0_iter20_reg <= and_ln149_reg_2273_pp0_iter19_reg;
        and_ln149_reg_2273_pp0_iter21_reg <= and_ln149_reg_2273_pp0_iter20_reg;
        and_ln149_reg_2273_pp0_iter22_reg <= and_ln149_reg_2273_pp0_iter21_reg;
        and_ln149_reg_2273_pp0_iter23_reg <= and_ln149_reg_2273_pp0_iter22_reg;
        and_ln149_reg_2273_pp0_iter24_reg <= and_ln149_reg_2273_pp0_iter23_reg;
        and_ln149_reg_2273_pp0_iter25_reg <= and_ln149_reg_2273_pp0_iter24_reg;
        and_ln149_reg_2273_pp0_iter26_reg <= and_ln149_reg_2273_pp0_iter25_reg;
        and_ln149_reg_2273_pp0_iter27_reg <= and_ln149_reg_2273_pp0_iter26_reg;
        and_ln149_reg_2273_pp0_iter28_reg <= and_ln149_reg_2273_pp0_iter27_reg;
        and_ln149_reg_2273_pp0_iter29_reg <= and_ln149_reg_2273_pp0_iter28_reg;
        and_ln149_reg_2273_pp0_iter2_reg <= and_ln149_reg_2273_pp0_iter1_reg;
        and_ln149_reg_2273_pp0_iter30_reg <= and_ln149_reg_2273_pp0_iter29_reg;
        and_ln149_reg_2273_pp0_iter31_reg <= and_ln149_reg_2273_pp0_iter30_reg;
        and_ln149_reg_2273_pp0_iter32_reg <= and_ln149_reg_2273_pp0_iter31_reg;
        and_ln149_reg_2273_pp0_iter33_reg <= and_ln149_reg_2273_pp0_iter32_reg;
        and_ln149_reg_2273_pp0_iter34_reg <= and_ln149_reg_2273_pp0_iter33_reg;
        and_ln149_reg_2273_pp0_iter35_reg <= and_ln149_reg_2273_pp0_iter34_reg;
        and_ln149_reg_2273_pp0_iter36_reg <= and_ln149_reg_2273_pp0_iter35_reg;
        and_ln149_reg_2273_pp0_iter37_reg <= and_ln149_reg_2273_pp0_iter36_reg;
        and_ln149_reg_2273_pp0_iter38_reg <= and_ln149_reg_2273_pp0_iter37_reg;
        and_ln149_reg_2273_pp0_iter39_reg <= and_ln149_reg_2273_pp0_iter38_reg;
        and_ln149_reg_2273_pp0_iter3_reg <= and_ln149_reg_2273_pp0_iter2_reg;
        and_ln149_reg_2273_pp0_iter4_reg <= and_ln149_reg_2273_pp0_iter3_reg;
        and_ln149_reg_2273_pp0_iter5_reg <= and_ln149_reg_2273_pp0_iter4_reg;
        and_ln149_reg_2273_pp0_iter6_reg <= and_ln149_reg_2273_pp0_iter5_reg;
        and_ln149_reg_2273_pp0_iter7_reg <= and_ln149_reg_2273_pp0_iter6_reg;
        and_ln149_reg_2273_pp0_iter8_reg <= and_ln149_reg_2273_pp0_iter7_reg;
        and_ln149_reg_2273_pp0_iter9_reg <= and_ln149_reg_2273_pp0_iter8_reg;
        cmp101_reg_2296_pp0_iter10_reg <= cmp101_reg_2296_pp0_iter9_reg;
        cmp101_reg_2296_pp0_iter11_reg <= cmp101_reg_2296_pp0_iter10_reg;
        cmp101_reg_2296_pp0_iter12_reg <= cmp101_reg_2296_pp0_iter11_reg;
        cmp101_reg_2296_pp0_iter13_reg <= cmp101_reg_2296_pp0_iter12_reg;
        cmp101_reg_2296_pp0_iter14_reg <= cmp101_reg_2296_pp0_iter13_reg;
        cmp101_reg_2296_pp0_iter15_reg <= cmp101_reg_2296_pp0_iter14_reg;
        cmp101_reg_2296_pp0_iter16_reg <= cmp101_reg_2296_pp0_iter15_reg;
        cmp101_reg_2296_pp0_iter17_reg <= cmp101_reg_2296_pp0_iter16_reg;
        cmp101_reg_2296_pp0_iter18_reg <= cmp101_reg_2296_pp0_iter17_reg;
        cmp101_reg_2296_pp0_iter19_reg <= cmp101_reg_2296_pp0_iter18_reg;
        cmp101_reg_2296_pp0_iter1_reg <= cmp101_reg_2296;
        cmp101_reg_2296_pp0_iter20_reg <= cmp101_reg_2296_pp0_iter19_reg;
        cmp101_reg_2296_pp0_iter21_reg <= cmp101_reg_2296_pp0_iter20_reg;
        cmp101_reg_2296_pp0_iter22_reg <= cmp101_reg_2296_pp0_iter21_reg;
        cmp101_reg_2296_pp0_iter23_reg <= cmp101_reg_2296_pp0_iter22_reg;
        cmp101_reg_2296_pp0_iter24_reg <= cmp101_reg_2296_pp0_iter23_reg;
        cmp101_reg_2296_pp0_iter25_reg <= cmp101_reg_2296_pp0_iter24_reg;
        cmp101_reg_2296_pp0_iter26_reg <= cmp101_reg_2296_pp0_iter25_reg;
        cmp101_reg_2296_pp0_iter27_reg <= cmp101_reg_2296_pp0_iter26_reg;
        cmp101_reg_2296_pp0_iter28_reg <= cmp101_reg_2296_pp0_iter27_reg;
        cmp101_reg_2296_pp0_iter29_reg <= cmp101_reg_2296_pp0_iter28_reg;
        cmp101_reg_2296_pp0_iter2_reg <= cmp101_reg_2296_pp0_iter1_reg;
        cmp101_reg_2296_pp0_iter30_reg <= cmp101_reg_2296_pp0_iter29_reg;
        cmp101_reg_2296_pp0_iter31_reg <= cmp101_reg_2296_pp0_iter30_reg;
        cmp101_reg_2296_pp0_iter32_reg <= cmp101_reg_2296_pp0_iter31_reg;
        cmp101_reg_2296_pp0_iter33_reg <= cmp101_reg_2296_pp0_iter32_reg;
        cmp101_reg_2296_pp0_iter34_reg <= cmp101_reg_2296_pp0_iter33_reg;
        cmp101_reg_2296_pp0_iter35_reg <= cmp101_reg_2296_pp0_iter34_reg;
        cmp101_reg_2296_pp0_iter36_reg <= cmp101_reg_2296_pp0_iter35_reg;
        cmp101_reg_2296_pp0_iter37_reg <= cmp101_reg_2296_pp0_iter36_reg;
        cmp101_reg_2296_pp0_iter38_reg <= cmp101_reg_2296_pp0_iter37_reg;
        cmp101_reg_2296_pp0_iter39_reg <= cmp101_reg_2296_pp0_iter38_reg;
        cmp101_reg_2296_pp0_iter3_reg <= cmp101_reg_2296_pp0_iter2_reg;
        cmp101_reg_2296_pp0_iter4_reg <= cmp101_reg_2296_pp0_iter3_reg;
        cmp101_reg_2296_pp0_iter5_reg <= cmp101_reg_2296_pp0_iter4_reg;
        cmp101_reg_2296_pp0_iter6_reg <= cmp101_reg_2296_pp0_iter5_reg;
        cmp101_reg_2296_pp0_iter7_reg <= cmp101_reg_2296_pp0_iter6_reg;
        cmp101_reg_2296_pp0_iter8_reg <= cmp101_reg_2296_pp0_iter7_reg;
        cmp101_reg_2296_pp0_iter9_reg <= cmp101_reg_2296_pp0_iter8_reg;
        cmp134_reg_2292_pp0_iter10_reg <= cmp134_reg_2292_pp0_iter9_reg;
        cmp134_reg_2292_pp0_iter11_reg <= cmp134_reg_2292_pp0_iter10_reg;
        cmp134_reg_2292_pp0_iter12_reg <= cmp134_reg_2292_pp0_iter11_reg;
        cmp134_reg_2292_pp0_iter13_reg <= cmp134_reg_2292_pp0_iter12_reg;
        cmp134_reg_2292_pp0_iter14_reg <= cmp134_reg_2292_pp0_iter13_reg;
        cmp134_reg_2292_pp0_iter15_reg <= cmp134_reg_2292_pp0_iter14_reg;
        cmp134_reg_2292_pp0_iter16_reg <= cmp134_reg_2292_pp0_iter15_reg;
        cmp134_reg_2292_pp0_iter17_reg <= cmp134_reg_2292_pp0_iter16_reg;
        cmp134_reg_2292_pp0_iter18_reg <= cmp134_reg_2292_pp0_iter17_reg;
        cmp134_reg_2292_pp0_iter19_reg <= cmp134_reg_2292_pp0_iter18_reg;
        cmp134_reg_2292_pp0_iter1_reg <= cmp134_reg_2292;
        cmp134_reg_2292_pp0_iter20_reg <= cmp134_reg_2292_pp0_iter19_reg;
        cmp134_reg_2292_pp0_iter21_reg <= cmp134_reg_2292_pp0_iter20_reg;
        cmp134_reg_2292_pp0_iter22_reg <= cmp134_reg_2292_pp0_iter21_reg;
        cmp134_reg_2292_pp0_iter23_reg <= cmp134_reg_2292_pp0_iter22_reg;
        cmp134_reg_2292_pp0_iter24_reg <= cmp134_reg_2292_pp0_iter23_reg;
        cmp134_reg_2292_pp0_iter25_reg <= cmp134_reg_2292_pp0_iter24_reg;
        cmp134_reg_2292_pp0_iter26_reg <= cmp134_reg_2292_pp0_iter25_reg;
        cmp134_reg_2292_pp0_iter27_reg <= cmp134_reg_2292_pp0_iter26_reg;
        cmp134_reg_2292_pp0_iter28_reg <= cmp134_reg_2292_pp0_iter27_reg;
        cmp134_reg_2292_pp0_iter29_reg <= cmp134_reg_2292_pp0_iter28_reg;
        cmp134_reg_2292_pp0_iter2_reg <= cmp134_reg_2292_pp0_iter1_reg;
        cmp134_reg_2292_pp0_iter30_reg <= cmp134_reg_2292_pp0_iter29_reg;
        cmp134_reg_2292_pp0_iter31_reg <= cmp134_reg_2292_pp0_iter30_reg;
        cmp134_reg_2292_pp0_iter32_reg <= cmp134_reg_2292_pp0_iter31_reg;
        cmp134_reg_2292_pp0_iter33_reg <= cmp134_reg_2292_pp0_iter32_reg;
        cmp134_reg_2292_pp0_iter34_reg <= cmp134_reg_2292_pp0_iter33_reg;
        cmp134_reg_2292_pp0_iter35_reg <= cmp134_reg_2292_pp0_iter34_reg;
        cmp134_reg_2292_pp0_iter36_reg <= cmp134_reg_2292_pp0_iter35_reg;
        cmp134_reg_2292_pp0_iter37_reg <= cmp134_reg_2292_pp0_iter36_reg;
        cmp134_reg_2292_pp0_iter38_reg <= cmp134_reg_2292_pp0_iter37_reg;
        cmp134_reg_2292_pp0_iter39_reg <= cmp134_reg_2292_pp0_iter38_reg;
        cmp134_reg_2292_pp0_iter3_reg <= cmp134_reg_2292_pp0_iter2_reg;
        cmp134_reg_2292_pp0_iter4_reg <= cmp134_reg_2292_pp0_iter3_reg;
        cmp134_reg_2292_pp0_iter5_reg <= cmp134_reg_2292_pp0_iter4_reg;
        cmp134_reg_2292_pp0_iter6_reg <= cmp134_reg_2292_pp0_iter5_reg;
        cmp134_reg_2292_pp0_iter7_reg <= cmp134_reg_2292_pp0_iter6_reg;
        cmp134_reg_2292_pp0_iter8_reg <= cmp134_reg_2292_pp0_iter7_reg;
        cmp134_reg_2292_pp0_iter9_reg <= cmp134_reg_2292_pp0_iter8_reg;
        cmp37_reg_2371_pp0_iter10_reg <= cmp37_reg_2371_pp0_iter9_reg;
        cmp37_reg_2371_pp0_iter11_reg <= cmp37_reg_2371_pp0_iter10_reg;
        cmp37_reg_2371_pp0_iter12_reg <= cmp37_reg_2371_pp0_iter11_reg;
        cmp37_reg_2371_pp0_iter13_reg <= cmp37_reg_2371_pp0_iter12_reg;
        cmp37_reg_2371_pp0_iter14_reg <= cmp37_reg_2371_pp0_iter13_reg;
        cmp37_reg_2371_pp0_iter15_reg <= cmp37_reg_2371_pp0_iter14_reg;
        cmp37_reg_2371_pp0_iter16_reg <= cmp37_reg_2371_pp0_iter15_reg;
        cmp37_reg_2371_pp0_iter17_reg <= cmp37_reg_2371_pp0_iter16_reg;
        cmp37_reg_2371_pp0_iter18_reg <= cmp37_reg_2371_pp0_iter17_reg;
        cmp37_reg_2371_pp0_iter19_reg <= cmp37_reg_2371_pp0_iter18_reg;
        cmp37_reg_2371_pp0_iter20_reg <= cmp37_reg_2371_pp0_iter19_reg;
        cmp37_reg_2371_pp0_iter21_reg <= cmp37_reg_2371_pp0_iter20_reg;
        cmp37_reg_2371_pp0_iter22_reg <= cmp37_reg_2371_pp0_iter21_reg;
        cmp37_reg_2371_pp0_iter23_reg <= cmp37_reg_2371_pp0_iter22_reg;
        cmp37_reg_2371_pp0_iter24_reg <= cmp37_reg_2371_pp0_iter23_reg;
        cmp37_reg_2371_pp0_iter25_reg <= cmp37_reg_2371_pp0_iter24_reg;
        cmp37_reg_2371_pp0_iter26_reg <= cmp37_reg_2371_pp0_iter25_reg;
        cmp37_reg_2371_pp0_iter27_reg <= cmp37_reg_2371_pp0_iter26_reg;
        cmp37_reg_2371_pp0_iter28_reg <= cmp37_reg_2371_pp0_iter27_reg;
        cmp37_reg_2371_pp0_iter29_reg <= cmp37_reg_2371_pp0_iter28_reg;
        cmp37_reg_2371_pp0_iter2_reg <= cmp37_reg_2371;
        cmp37_reg_2371_pp0_iter30_reg <= cmp37_reg_2371_pp0_iter29_reg;
        cmp37_reg_2371_pp0_iter31_reg <= cmp37_reg_2371_pp0_iter30_reg;
        cmp37_reg_2371_pp0_iter32_reg <= cmp37_reg_2371_pp0_iter31_reg;
        cmp37_reg_2371_pp0_iter33_reg <= cmp37_reg_2371_pp0_iter32_reg;
        cmp37_reg_2371_pp0_iter34_reg <= cmp37_reg_2371_pp0_iter33_reg;
        cmp37_reg_2371_pp0_iter35_reg <= cmp37_reg_2371_pp0_iter34_reg;
        cmp37_reg_2371_pp0_iter36_reg <= cmp37_reg_2371_pp0_iter35_reg;
        cmp37_reg_2371_pp0_iter37_reg <= cmp37_reg_2371_pp0_iter36_reg;
        cmp37_reg_2371_pp0_iter38_reg <= cmp37_reg_2371_pp0_iter37_reg;
        cmp37_reg_2371_pp0_iter39_reg <= cmp37_reg_2371_pp0_iter38_reg;
        cmp37_reg_2371_pp0_iter3_reg <= cmp37_reg_2371_pp0_iter2_reg;
        cmp37_reg_2371_pp0_iter4_reg <= cmp37_reg_2371_pp0_iter3_reg;
        cmp37_reg_2371_pp0_iter5_reg <= cmp37_reg_2371_pp0_iter4_reg;
        cmp37_reg_2371_pp0_iter6_reg <= cmp37_reg_2371_pp0_iter5_reg;
        cmp37_reg_2371_pp0_iter7_reg <= cmp37_reg_2371_pp0_iter6_reg;
        cmp37_reg_2371_pp0_iter8_reg <= cmp37_reg_2371_pp0_iter7_reg;
        cmp37_reg_2371_pp0_iter9_reg <= cmp37_reg_2371_pp0_iter8_reg;
        cmp52_reg_2282_pp0_iter10_reg <= cmp52_reg_2282_pp0_iter9_reg;
        cmp52_reg_2282_pp0_iter11_reg <= cmp52_reg_2282_pp0_iter10_reg;
        cmp52_reg_2282_pp0_iter12_reg <= cmp52_reg_2282_pp0_iter11_reg;
        cmp52_reg_2282_pp0_iter13_reg <= cmp52_reg_2282_pp0_iter12_reg;
        cmp52_reg_2282_pp0_iter14_reg <= cmp52_reg_2282_pp0_iter13_reg;
        cmp52_reg_2282_pp0_iter15_reg <= cmp52_reg_2282_pp0_iter14_reg;
        cmp52_reg_2282_pp0_iter16_reg <= cmp52_reg_2282_pp0_iter15_reg;
        cmp52_reg_2282_pp0_iter17_reg <= cmp52_reg_2282_pp0_iter16_reg;
        cmp52_reg_2282_pp0_iter18_reg <= cmp52_reg_2282_pp0_iter17_reg;
        cmp52_reg_2282_pp0_iter19_reg <= cmp52_reg_2282_pp0_iter18_reg;
        cmp52_reg_2282_pp0_iter1_reg <= cmp52_reg_2282;
        cmp52_reg_2282_pp0_iter20_reg <= cmp52_reg_2282_pp0_iter19_reg;
        cmp52_reg_2282_pp0_iter21_reg <= cmp52_reg_2282_pp0_iter20_reg;
        cmp52_reg_2282_pp0_iter22_reg <= cmp52_reg_2282_pp0_iter21_reg;
        cmp52_reg_2282_pp0_iter23_reg <= cmp52_reg_2282_pp0_iter22_reg;
        cmp52_reg_2282_pp0_iter24_reg <= cmp52_reg_2282_pp0_iter23_reg;
        cmp52_reg_2282_pp0_iter25_reg <= cmp52_reg_2282_pp0_iter24_reg;
        cmp52_reg_2282_pp0_iter26_reg <= cmp52_reg_2282_pp0_iter25_reg;
        cmp52_reg_2282_pp0_iter27_reg <= cmp52_reg_2282_pp0_iter26_reg;
        cmp52_reg_2282_pp0_iter28_reg <= cmp52_reg_2282_pp0_iter27_reg;
        cmp52_reg_2282_pp0_iter29_reg <= cmp52_reg_2282_pp0_iter28_reg;
        cmp52_reg_2282_pp0_iter2_reg <= cmp52_reg_2282_pp0_iter1_reg;
        cmp52_reg_2282_pp0_iter30_reg <= cmp52_reg_2282_pp0_iter29_reg;
        cmp52_reg_2282_pp0_iter31_reg <= cmp52_reg_2282_pp0_iter30_reg;
        cmp52_reg_2282_pp0_iter32_reg <= cmp52_reg_2282_pp0_iter31_reg;
        cmp52_reg_2282_pp0_iter33_reg <= cmp52_reg_2282_pp0_iter32_reg;
        cmp52_reg_2282_pp0_iter34_reg <= cmp52_reg_2282_pp0_iter33_reg;
        cmp52_reg_2282_pp0_iter35_reg <= cmp52_reg_2282_pp0_iter34_reg;
        cmp52_reg_2282_pp0_iter36_reg <= cmp52_reg_2282_pp0_iter35_reg;
        cmp52_reg_2282_pp0_iter37_reg <= cmp52_reg_2282_pp0_iter36_reg;
        cmp52_reg_2282_pp0_iter3_reg <= cmp52_reg_2282_pp0_iter2_reg;
        cmp52_reg_2282_pp0_iter4_reg <= cmp52_reg_2282_pp0_iter3_reg;
        cmp52_reg_2282_pp0_iter5_reg <= cmp52_reg_2282_pp0_iter4_reg;
        cmp52_reg_2282_pp0_iter6_reg <= cmp52_reg_2282_pp0_iter5_reg;
        cmp52_reg_2282_pp0_iter7_reg <= cmp52_reg_2282_pp0_iter6_reg;
        cmp52_reg_2282_pp0_iter8_reg <= cmp52_reg_2282_pp0_iter7_reg;
        cmp52_reg_2282_pp0_iter9_reg <= cmp52_reg_2282_pp0_iter8_reg;
        cmp55_reg_2287_pp0_iter10_reg <= cmp55_reg_2287_pp0_iter9_reg;
        cmp55_reg_2287_pp0_iter11_reg <= cmp55_reg_2287_pp0_iter10_reg;
        cmp55_reg_2287_pp0_iter12_reg <= cmp55_reg_2287_pp0_iter11_reg;
        cmp55_reg_2287_pp0_iter13_reg <= cmp55_reg_2287_pp0_iter12_reg;
        cmp55_reg_2287_pp0_iter14_reg <= cmp55_reg_2287_pp0_iter13_reg;
        cmp55_reg_2287_pp0_iter15_reg <= cmp55_reg_2287_pp0_iter14_reg;
        cmp55_reg_2287_pp0_iter16_reg <= cmp55_reg_2287_pp0_iter15_reg;
        cmp55_reg_2287_pp0_iter17_reg <= cmp55_reg_2287_pp0_iter16_reg;
        cmp55_reg_2287_pp0_iter18_reg <= cmp55_reg_2287_pp0_iter17_reg;
        cmp55_reg_2287_pp0_iter19_reg <= cmp55_reg_2287_pp0_iter18_reg;
        cmp55_reg_2287_pp0_iter1_reg <= cmp55_reg_2287;
        cmp55_reg_2287_pp0_iter20_reg <= cmp55_reg_2287_pp0_iter19_reg;
        cmp55_reg_2287_pp0_iter21_reg <= cmp55_reg_2287_pp0_iter20_reg;
        cmp55_reg_2287_pp0_iter22_reg <= cmp55_reg_2287_pp0_iter21_reg;
        cmp55_reg_2287_pp0_iter23_reg <= cmp55_reg_2287_pp0_iter22_reg;
        cmp55_reg_2287_pp0_iter24_reg <= cmp55_reg_2287_pp0_iter23_reg;
        cmp55_reg_2287_pp0_iter25_reg <= cmp55_reg_2287_pp0_iter24_reg;
        cmp55_reg_2287_pp0_iter26_reg <= cmp55_reg_2287_pp0_iter25_reg;
        cmp55_reg_2287_pp0_iter27_reg <= cmp55_reg_2287_pp0_iter26_reg;
        cmp55_reg_2287_pp0_iter28_reg <= cmp55_reg_2287_pp0_iter27_reg;
        cmp55_reg_2287_pp0_iter29_reg <= cmp55_reg_2287_pp0_iter28_reg;
        cmp55_reg_2287_pp0_iter2_reg <= cmp55_reg_2287_pp0_iter1_reg;
        cmp55_reg_2287_pp0_iter30_reg <= cmp55_reg_2287_pp0_iter29_reg;
        cmp55_reg_2287_pp0_iter31_reg <= cmp55_reg_2287_pp0_iter30_reg;
        cmp55_reg_2287_pp0_iter32_reg <= cmp55_reg_2287_pp0_iter31_reg;
        cmp55_reg_2287_pp0_iter33_reg <= cmp55_reg_2287_pp0_iter32_reg;
        cmp55_reg_2287_pp0_iter34_reg <= cmp55_reg_2287_pp0_iter33_reg;
        cmp55_reg_2287_pp0_iter35_reg <= cmp55_reg_2287_pp0_iter34_reg;
        cmp55_reg_2287_pp0_iter36_reg <= cmp55_reg_2287_pp0_iter35_reg;
        cmp55_reg_2287_pp0_iter37_reg <= cmp55_reg_2287_pp0_iter36_reg;
        cmp55_reg_2287_pp0_iter3_reg <= cmp55_reg_2287_pp0_iter2_reg;
        cmp55_reg_2287_pp0_iter4_reg <= cmp55_reg_2287_pp0_iter3_reg;
        cmp55_reg_2287_pp0_iter5_reg <= cmp55_reg_2287_pp0_iter4_reg;
        cmp55_reg_2287_pp0_iter6_reg <= cmp55_reg_2287_pp0_iter5_reg;
        cmp55_reg_2287_pp0_iter7_reg <= cmp55_reg_2287_pp0_iter6_reg;
        cmp55_reg_2287_pp0_iter8_reg <= cmp55_reg_2287_pp0_iter7_reg;
        cmp55_reg_2287_pp0_iter9_reg <= cmp55_reg_2287_pp0_iter8_reg;
        gmem1_addr_reg_2402_pp0_iter10_reg <= gmem1_addr_reg_2402_pp0_iter9_reg;
        gmem1_addr_reg_2402_pp0_iter11_reg <= gmem1_addr_reg_2402_pp0_iter10_reg;
        gmem1_addr_reg_2402_pp0_iter12_reg <= gmem1_addr_reg_2402_pp0_iter11_reg;
        gmem1_addr_reg_2402_pp0_iter13_reg <= gmem1_addr_reg_2402_pp0_iter12_reg;
        gmem1_addr_reg_2402_pp0_iter14_reg <= gmem1_addr_reg_2402_pp0_iter13_reg;
        gmem1_addr_reg_2402_pp0_iter15_reg <= gmem1_addr_reg_2402_pp0_iter14_reg;
        gmem1_addr_reg_2402_pp0_iter16_reg <= gmem1_addr_reg_2402_pp0_iter15_reg;
        gmem1_addr_reg_2402_pp0_iter17_reg <= gmem1_addr_reg_2402_pp0_iter16_reg;
        gmem1_addr_reg_2402_pp0_iter18_reg <= gmem1_addr_reg_2402_pp0_iter17_reg;
        gmem1_addr_reg_2402_pp0_iter19_reg <= gmem1_addr_reg_2402_pp0_iter18_reg;
        gmem1_addr_reg_2402_pp0_iter20_reg <= gmem1_addr_reg_2402_pp0_iter19_reg;
        gmem1_addr_reg_2402_pp0_iter21_reg <= gmem1_addr_reg_2402_pp0_iter20_reg;
        gmem1_addr_reg_2402_pp0_iter22_reg <= gmem1_addr_reg_2402_pp0_iter21_reg;
        gmem1_addr_reg_2402_pp0_iter23_reg <= gmem1_addr_reg_2402_pp0_iter22_reg;
        gmem1_addr_reg_2402_pp0_iter24_reg <= gmem1_addr_reg_2402_pp0_iter23_reg;
        gmem1_addr_reg_2402_pp0_iter25_reg <= gmem1_addr_reg_2402_pp0_iter24_reg;
        gmem1_addr_reg_2402_pp0_iter26_reg <= gmem1_addr_reg_2402_pp0_iter25_reg;
        gmem1_addr_reg_2402_pp0_iter27_reg <= gmem1_addr_reg_2402_pp0_iter26_reg;
        gmem1_addr_reg_2402_pp0_iter28_reg <= gmem1_addr_reg_2402_pp0_iter27_reg;
        gmem1_addr_reg_2402_pp0_iter29_reg <= gmem1_addr_reg_2402_pp0_iter28_reg;
        gmem1_addr_reg_2402_pp0_iter30_reg <= gmem1_addr_reg_2402_pp0_iter29_reg;
        gmem1_addr_reg_2402_pp0_iter31_reg <= gmem1_addr_reg_2402_pp0_iter30_reg;
        gmem1_addr_reg_2402_pp0_iter32_reg <= gmem1_addr_reg_2402_pp0_iter31_reg;
        gmem1_addr_reg_2402_pp0_iter33_reg <= gmem1_addr_reg_2402_pp0_iter32_reg;
        gmem1_addr_reg_2402_pp0_iter34_reg <= gmem1_addr_reg_2402_pp0_iter33_reg;
        gmem1_addr_reg_2402_pp0_iter35_reg <= gmem1_addr_reg_2402_pp0_iter34_reg;
        gmem1_addr_reg_2402_pp0_iter36_reg <= gmem1_addr_reg_2402_pp0_iter35_reg;
        gmem1_addr_reg_2402_pp0_iter37_reg <= gmem1_addr_reg_2402_pp0_iter36_reg;
        gmem1_addr_reg_2402_pp0_iter38_reg <= gmem1_addr_reg_2402_pp0_iter37_reg;
        gmem1_addr_reg_2402_pp0_iter39_reg <= gmem1_addr_reg_2402_pp0_iter38_reg;
        gmem1_addr_reg_2402_pp0_iter3_reg <= gmem1_addr_reg_2402;
        gmem1_addr_reg_2402_pp0_iter4_reg <= gmem1_addr_reg_2402_pp0_iter3_reg;
        gmem1_addr_reg_2402_pp0_iter5_reg <= gmem1_addr_reg_2402_pp0_iter4_reg;
        gmem1_addr_reg_2402_pp0_iter6_reg <= gmem1_addr_reg_2402_pp0_iter5_reg;
        gmem1_addr_reg_2402_pp0_iter7_reg <= gmem1_addr_reg_2402_pp0_iter6_reg;
        gmem1_addr_reg_2402_pp0_iter8_reg <= gmem1_addr_reg_2402_pp0_iter7_reg;
        gmem1_addr_reg_2402_pp0_iter9_reg <= gmem1_addr_reg_2402_pp0_iter8_reg;
        win_item_x_reg_585_pp0_iter1_reg <= win_item_x_reg_585;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        and_ln149_reg_2273 <= and_ln149_fu_1089_p2;
        flag_reg_2268 <= flag_fu_1071_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_fu_862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln234_reg_2205 <= and_ln234_fu_894_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_fu_920_p2 == 1'd1) & (icmp_ln144_fu_862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln234_fu_894_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln239_reg_2244 <= and_ln239_fu_1001_p2;
        tmp_2_reg_2218 <= sub_ln237_fu_938_p2[32'd16];
        trunc_ln237_1_reg_2224 <= {{sub_ln237_1_fu_951_p2[16:2]}};
        trunc_ln237_2_reg_2229 <= {{sub_ln237_fu_938_p2[16:2]}};
        trunc_ln238_1_reg_2239 <= trunc_ln238_1_fu_981_p1;
        trunc_ln238_reg_2234 <= trunc_ln238_fu_977_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        bottom_read_reg_2026 <= bottom;
        cmp78_reg_2104 <= cmp78_fu_741_p2;
        conv8_reg_2056[15 : 0] <= conv8_fu_689_p1[15 : 0];
        conv_x_cast14_reg_2066[7 : 0] <= conv_x_cast14_fu_697_p1[7 : 0];
        conv_x_cast1_reg_2071[7 : 0] <= conv_x_cast1_fu_701_p1[7 : 0];
        padd_offset_cast17_reg_2108[7 : 0] <= padd_offset_cast17_fu_747_p1[7 : 0];
        padd_offset_cast_reg_2113[7 : 0] <= padd_offset_cast_fu_751_p1[7 : 0];
        pool_dim1_cast16_reg_2089[7 : 0] <= pool_dim1_cast16_fu_719_p1[7 : 0];
        pool_dim1_cast9_reg_2094[7 : 0] <= pool_dim1_cast9_fu_723_p1[7 : 0];
        pool_dim3_cast_reg_2118[15 : 0] <= pool_dim3_cast_fu_755_p1[15 : 0];
        pool_stride_cast_reg_2061[7 : 0] <= pool_stride_cast_fu_693_p1[7 : 0];
        pool_win_num_x_cast_reg_2076[7 : 0] <= pool_win_num_x_cast_fu_705_p1[7 : 0];
        sub184_reg_2128 <= sub184_fu_767_p2;
        sub272_reg_2099 <= sub272_fu_735_p2;
        sub287_reg_2133 <= sub287_fu_777_p2;
        sub291_reg_2138 <= sub291_fu_783_p2;
        sub_reg_2082 <= sub_fu_713_p2;
        top_read_reg_2021 <= top;
        zext_ln125_reg_2148[3] <= zext_ln125_fu_811_p1[3];
        zext_ln160_reg_2143[7 : 0] <= zext_ln160_fu_789_p1[7 : 0];
        zext_ln240_reg_2123[15 : 0] <= zext_ln240_fu_759_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln149_fu_1089_p2) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        cmp101_reg_2296 <= cmp101_fu_1151_p2;
        cmp134_reg_2292 <= cmp134_fu_1145_p2;
        cmp52_reg_2282 <= cmp52_fu_1135_p2;
        cmp55_reg_2287 <= cmp55_fu_1140_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln149_reg_2273) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        cmp37_reg_2371 <= cmp37_fu_1432_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln149_reg_2273) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_reg_2340 <= empty_fu_1373_p1;
        pool_final_addr_reg_2361[3 : 1] <= zext_ln185_1_fu_1406_p1[3 : 1];
        row_reg0_addr_reg_2345 <= idxprom139_fu_1363_p1;
        row_reg1_addr_reg_2351 <= idxprom139_fu_1363_p1;
        trunc_ln185_reg_2356 <= trunc_ln185_fu_1394_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_predicate_op628_read_state83 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem0_addr_1_read_reg_2436 <= gmem0_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371 == 1'd1) & (1'd1 == and_ln149_reg_2273_pp0_iter1_reg) & (icmp_ln144_reg_2196_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem0_addr_1_reg_2396 <= sext_ln160_1_fu_1542_p1;
        gmem0_addr_reg_2390 <= sext_ln160_fu_1516_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_reg_2214_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln234_reg_2205_pp0_iter2_reg) & (1'd1 == and_ln239_reg_2244_pp0_iter2_reg) & (icmp_ln144_reg_2196_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem1_addr_reg_2402 <= add_ln240_1_fu_1572_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        gp_final_cnt_3_reg_597 <= ap_phi_reg_pp0_iter0_gp_final_cnt_3_reg_597;
        k_1_reg_2263 <= k_1_fu_1065_p2;
        lane_cnt_2_reg_609 <= ap_phi_reg_pp0_iter0_lane_cnt_2_reg_609;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_1_reg_2153 <= i_1_fu_815_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        item_loop_cnt_2_reg_2335 <= item_loop_cnt_2_fu_1355_p3;
        pool_win_cnt_2_reg_2330 <= pool_win_cnt_2_fu_1341_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        max_value_14_reg_2427 <= max_value_14_fu_1673_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        max_value_15_reg_2421 <= max_value_15_fu_1632_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1))) begin
        max_value_16_reg_2458 <= max_value_16_fu_1798_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1))) begin
        max_value_17_reg_2465 <= max_value_17_fu_1818_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1))) begin
        max_value_18_reg_2482 <= max_value_18_fu_1873_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul13_reg_2181 <= mul13_fu_842_p2;
        mul_reg_2171 <= grp_fu_1970_p2;
        pool_group_cnt_cast_reg_2166[15 : 0] <= pool_group_cnt_cast_fu_830_p1[15 : 0];
        pool_y_cnt_cast10_reg_2176[7 : 0] <= pool_y_cnt_cast10_fu_834_p1[7 : 0];
        shl_ln236_reg_2186[15 : 1] <= shl_ln236_fu_847_p2[15 : 1];
        zext_ln144_reg_2191[15 : 0] <= zext_ln144_fu_858_p1[15 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        or_ln163_reg_2414 <= or_ln163_fu_1593_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        pool_final_addr_1_reg_2471[3 : 1] <= zext_ln195_fu_1839_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_reg_2214_pp0_iter39_reg == 1'd1) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln239_reg_2244_pp0_iter39_reg) & (1'd1 == and_ln234_reg_2205_pp0_iter39_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        pool_final_load_reg_2495 <= pool_final_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        row_reg0_addr_1_reg_2441 <= zext_ln179_fu_1690_p1;
        row_reg1_addr_1_reg_2447 <= zext_ln179_fu_1690_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1))) begin
        row_reg0_load_1_reg_2476 <= row_reg0_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_reg_2214_pp0_iter1_reg == 1'd1) & (icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln234_reg_2205_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln238_reg_2380 <= select_ln238_fu_1478_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp101_reg_2296_pp0_iter37_reg == 1'd1) & (cmp134_reg_2292_pp0_iter37_reg == 1'd0)) | ((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp101_reg_2296_pp0_iter37_reg == 1'd0) & (cmp134_reg_2292_pp0_iter37_reg == 1'd0)) | ((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp134_reg_2292_pp0_iter37_reg == 1'd1)) | ((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp134_reg_2292_pp0_iter37_reg == 1'd1)) | ((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp134_reg_2292_pp0_iter37_reg == 1'd0)))) begin
        shift_reg_1_fu_210 <= shift_reg_5_reg_2408;
        shift_reg_2_fu_214 <= shift_reg_1_fu_210;
    end
end

always @ (posedge ap_clk) begin
    if ((((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp101_reg_2296_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)) | ((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp101_reg_2296_pp0_iter38_reg == 1'd0) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)) | ((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1)) | ((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1)) | ((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)))) begin
        shift_reg_3_fu_218 <= shift_reg_8_fu_1760_p1;
        shift_reg_fu_206 <= shift_reg_3_fu_218;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (icmp_ln144_reg_2196_pp0_iter37_reg == 1'd0) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        shift_reg_5_reg_2408 <= shift_reg_5_fu_1583_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1))) begin
        temp_reg2_2_reg_2452 <= temp_reg2_2_fu_1779_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_reg_2214_pp0_iter1_reg == 1'd1) & (icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln234_reg_2205_pp0_iter1_reg) & (1'd1 == and_ln239_reg_2244_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp47_reg_2385 <= tmp47_fu_1485_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln235_fu_920_p2 == 1'd1) & (icmp_ln144_fu_862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln234_fu_894_p2) & (1'd1 == and_ln239_fu_1001_p2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln240_1_reg_2248 <= trunc_ln240_1_fu_1007_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        win_item_cnt_3_reg_657 <= ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657;
        win_item_s_3_reg_645 <= ap_phi_reg_pp0_iter1_win_item_s_3_reg_645;
        win_item_x_2_reg_621 <= ap_phi_reg_pp0_iter1_win_item_x_2_reg_621;
        win_item_y_3_reg_633 <= ap_phi_reg_pp0_iter1_win_item_y_3_reg_633;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter39 == 1'b1) & (ap_enable_reg_pp0_iter38 == 1'b0))) begin
        ap_condition_pp0_exit_iter39_state84 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter39_state84 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln144_reg_2196 == 1'd1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln125_fu_821_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter74 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter73 == 1'b0) & (ap_enable_reg_pp0_iter72 == 1'b0) & (ap_enable_reg_pp0_iter71 == 1'b0) & (ap_enable_reg_pp0_iter70 == 1'b0) & (ap_enable_reg_pp0_iter69 == 1'b0) & (ap_enable_reg_pp0_iter68 == 1'b0) & (ap_enable_reg_pp0_iter67 == 1'b0) & (ap_enable_reg_pp0_iter66 == 1'b0) & (ap_enable_reg_pp0_iter65 == 1'b0) & (ap_enable_reg_pp0_iter64 == 1'b0) & (ap_enable_reg_pp0_iter63 == 1'b0) & (ap_enable_reg_pp0_iter62 == 1'b0) & (ap_enable_reg_pp0_iter61 == 1'b0) & (ap_enable_reg_pp0_iter60 == 1'b0) & (ap_enable_reg_pp0_iter59 == 1'b0) & (ap_enable_reg_pp0_iter58 == 1'b0) & (ap_enable_reg_pp0_iter57 == 1'b0) & (ap_enable_reg_pp0_iter56 == 1'b0) & (ap_enable_reg_pp0_iter55 == 1'b0) & (ap_enable_reg_pp0_iter54 == 1'b0) & (ap_enable_reg_pp0_iter53 == 1'b0) & (ap_enable_reg_pp0_iter52 == 1'b0) & (ap_enable_reg_pp0_iter51 == 1'b0) & (ap_enable_reg_pp0_iter50 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_gp_final_cnt_phi_fu_517_p4 = gp_final_cnt_3_reg_597;
    end else begin
        ap_phi_mux_gp_final_cnt_phi_fu_517_p4 = gp_final_cnt_reg_513;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_item_loop_cnt_phi_fu_541_p4 = item_loop_cnt_2_reg_2335;
    end else begin
        ap_phi_mux_item_loop_cnt_phi_fu_541_p4 = item_loop_cnt_reg_537;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_k_phi_fu_493_p4 = k_1_reg_2263;
    end else begin
        ap_phi_mux_k_phi_fu_493_p4 = k_reg_489;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_lane_cnt_phi_fu_505_p4 = lane_cnt_2_reg_609;
    end else begin
        ap_phi_mux_lane_cnt_phi_fu_505_p4 = lane_cnt_reg_501;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln144_reg_2196 == 1'd0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_pool_win_cnt_phi_fu_529_p4 = pool_win_cnt_2_reg_2330;
    end else begin
        ap_phi_mux_pool_win_cnt_phi_fu_529_p4 = pool_win_cnt_reg_525;
    end
end

always @ (*) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_win_item_cnt_phi_fu_553_p4 = win_item_cnt_3_reg_657;
    end else begin
        ap_phi_mux_win_item_cnt_phi_fu_553_p4 = win_item_cnt_reg_549;
    end
end

always @ (*) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_win_item_s_phi_fu_565_p4 = win_item_s_3_reg_645;
    end else begin
        ap_phi_mux_win_item_s_phi_fu_565_p4 = win_item_s_reg_561;
    end
end

always @ (*) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_win_item_x_phi_fu_589_p4 = win_item_x_2_reg_621;
    end else begin
        ap_phi_mux_win_item_x_phi_fu_589_p4 = win_item_x_reg_585;
    end
end

always @ (*) begin
    if (((icmp_ln144_reg_2196_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        ap_phi_mux_win_item_y_phi_fu_577_p4 = win_item_y_3_reg_633;
    end else begin
        ap_phi_mux_win_item_y_phi_fu_577_p4 = win_item_y_reg_573;
    end
end

always @ (*) begin
    if (((icmp_ln125_fu_821_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter3 == 1'b1)) begin
        if ((1'b1 == ap_condition_3440)) begin
            gmem0_ARADDR = gmem0_addr_1_reg_2396;
        end else if ((1'b1 == ap_condition_3436)) begin
            gmem0_ARADDR = gmem0_addr_reg_2390;
        end else begin
            gmem0_ARADDR = 'bx;
        end
    end else begin
        gmem0_ARADDR = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op467_readreq_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_predicate_op469_readreq_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        gmem0_ARVALID = 1'b1;
    end else begin
        gmem0_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_predicate_op606_read_state82 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_predicate_op628_read_state83 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        gmem0_RREADY = 1'b1;
    end else begin
        gmem0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln144_reg_2196_pp0_iter3_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln149_reg_2273_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (cmp37_reg_2371_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln149_reg_2273_pp0_iter2_reg) & (icmp_ln144_reg_2196_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1)))) begin
        gmem0_blk_n_AR = m_axi_gmem0_ARREADY;
    end else begin
        gmem0_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (icmp_ln144_reg_2196_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage0)))) begin
        gmem0_blk_n_R = m_axi_gmem0_RVALID;
    end else begin
        gmem0_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op722_writereq_state86 == 1'b1) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        gmem1_AWVALID = 1'b1;
    end else begin
        gmem1_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op791_writeresp_state155 == 1'b1) & (ap_enable_reg_pp0_iter74 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem1_BREADY = 1'b1;
    end else begin
        gmem1_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op723_write_state87 == 1'b1) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        gmem1_WVALID = 1'b1;
    end else begin
        gmem1_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln235_reg_2214_pp0_iter39_reg == 1'd1) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln239_reg_2244_pp0_iter39_reg) & (1'd1 == and_ln234_reg_2205_pp0_iter39_reg) & (1'b0 == ap_block_pp0_stage0))) begin
        gmem1_blk_n_AW = m_axi_gmem1_AWREADY;
    end else begin
        gmem1_blk_n_AW = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln235_reg_2214_pp0_iter74_reg == 1'd1) & (ap_enable_reg_pp0_iter74 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln239_reg_2244_pp0_iter74_reg) & (1'd1 == and_ln234_reg_2205_pp0_iter74_reg) & (1'b0 == ap_block_pp0_stage1))) begin
        gmem1_blk_n_B = m_axi_gmem1_BVALID;
    end else begin
        gmem1_blk_n_B = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln235_reg_2214_pp0_iter40_reg == 1'd1) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln239_reg_2244_pp0_iter40_reg) & (1'd1 == and_ln234_reg_2205_pp0_iter40_reg) & (1'b0 == ap_block_pp0_stage1))) begin
        gmem1_blk_n_W = m_axi_gmem1_WREADY;
    end else begin
        gmem1_blk_n_W = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_1975_ce = 1'b1;
    end else begin
        grp_fu_1975_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_1981_ce = 1'b1;
    end else begin
        grp_fu_1981_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        grp_fu_1989_ce = 1'b1;
    end else begin
        grp_fu_1989_ce = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        pool_final_address0 = pool_final_addr_1_reg_2471;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        pool_final_address0 = zext_ln195_fu_1839_p1;
    end else begin
        pool_final_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        pool_final_address1 = zext_ln240_1_fu_1880_p1;
    end else if ((((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp101_reg_2296_pp0_iter38_reg == 1'd0) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)) | ((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)))) begin
        pool_final_address1 = pool_final_addr_reg_2361_pp0_iter38_reg;
    end else begin
        pool_final_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        pool_final_ce0 = 1'b1;
    end else begin
        pool_final_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp101_reg_2296_pp0_iter38_reg == 1'd0) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)) | ((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)))) begin
        pool_final_ce1 = 1'b1;
    end else begin
        pool_final_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        pool_final_d0 = max_value_12_fu_1895_p3;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage1))) begin
        pool_final_d0 = max_value_10_fu_1855_p3;
    end else begin
        pool_final_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_3448)) begin
        if (((cmp78_reg_2104 == 1'd1) & (cmp101_reg_2296_pp0_iter38_reg == 1'd0))) begin
            pool_final_d1 = max_value_5_fu_1726_p3;
        end else if ((cmp78_reg_2104 == 1'd0)) begin
            pool_final_d1 = max_value_fu_1707_p3;
        end else begin
            pool_final_d1 = 'bx;
        end
    end else begin
        pool_final_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)) | ((cmp78_reg_2104 == 1'd1) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln149_reg_2273_pp0_iter39_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter39_reg == 1'd1) & (cmp101_reg_2296_pp0_iter39_reg == 1'd0) & (cmp134_reg_2292_pp0_iter39_reg == 1'd0)))) begin
        pool_final_we0 = 1'b1;
    end else begin
        pool_final_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp101_reg_2296_pp0_iter38_reg == 1'd0) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)) | ((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0)))) begin
        pool_final_we1 = 1'b1;
    end else begin
        pool_final_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1)) | ((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1)))) begin
        row_reg0_address0 = row_reg0_addr_1_reg_2441;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        row_reg0_address0 = row_reg0_addr_reg_2345_pp0_iter38_reg;
    end else begin
        row_reg0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        row_reg0_address1 = zext_ln179_fu_1690_p1;
    end else if (((icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1))) begin
        row_reg0_address1 = row_reg0_addr_reg_2345_pp0_iter38_reg;
    end else begin
        row_reg0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1)) | ((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        row_reg0_ce0 = 1'b1;
    end else begin
        row_reg0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001)) | ((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp134_reg_2292_pp0_iter37_reg == 1'd1)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        row_reg0_ce1 = 1'b1;
    end else begin
        row_reg0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter39 == 1'b1)) begin
        if ((1'b1 == ap_condition_3465)) begin
            row_reg0_d0 = max_value_18_fu_1873_p3;
        end else if ((1'b1 == ap_condition_3457)) begin
            row_reg0_d0 = max_value_16_reg_2458;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
            row_reg0_d0 = max_value_14_reg_2427;
        end else begin
            row_reg0_d0 = 'bx;
        end
    end else begin
        row_reg0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1)) | ((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1)) | ((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1)))) begin
        row_reg0_we0 = 1'b1;
    end else begin
        row_reg0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp78_reg_2104 == 1'd0) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg) & (1'b0 == ap_block_pp0_stage1_11001) & (cmp134_reg_2292_pp0_iter37_reg == 1'd1))) begin
        row_reg0_we1 = 1'b1;
    end else begin
        row_reg0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        row_reg1_ce0 = 1'b1;
    end else begin
        row_reg1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        row_reg1_ce1 = 1'b1;
    end else begin
        row_reg1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp78_reg_2104 == 1'd1) & (ap_enable_reg_pp0_iter40 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'd1 == and_ln149_reg_2273_pp0_iter39_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter39_reg == 1'd1) & (cmp101_reg_2296_pp0_iter39_reg == 1'd1) & (cmp134_reg_2292_pp0_iter39_reg == 1'd0))) begin
        row_reg1_we0 = 1'b1;
    end else begin
        row_reg1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((cmp78_reg_2104 == 1'd1) & (icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp101_reg_2296_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0))) begin
        row_reg1_we1 = 1'b1;
    end else begin
        row_reg1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b0) & (ap_ext_blocking_n == 1'b1))) begin
        stall_done_ext = 1'b1;
    end else begin
        stall_done_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b0) & (ap_int_blocking_n == 1'b1))) begin
        stall_done_int = 1'b1;
    end else begin
        stall_done_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b0) & (ap_str_blocking_n == 1'b1))) begin
        stall_done_str = 1'b1;
    end else begin
        stall_done_str = 1'b0;
    end
end

always @ (*) begin
    if (((ap_ext_blocking_n_reg == 1'b1) & (ap_ext_blocking_n == 1'b0))) begin
        stall_start_ext = 1'b1;
    end else begin
        stall_start_ext = 1'b0;
    end
end

always @ (*) begin
    if (((ap_int_blocking_n_reg == 1'b1) & (ap_int_blocking_n == 1'b0))) begin
        stall_start_int = 1'b1;
    end else begin
        stall_start_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_str_blocking_n_reg == 1'b1) & (ap_str_blocking_n == 1'b0))) begin
        stall_start_str = 1'b1;
    end else begin
        stall_start_str = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln125_fu_821_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter40 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (ap_enable_reg_pp0_iter38 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_enable_reg_pp0_iter40 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (ap_enable_reg_pp0_iter38 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter74 == 1'b1) & (ap_enable_reg_pp0_iter73 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter74 == 1'b1) & (ap_enable_reg_pp0_iter73 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state156;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state156 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add35_fu_1426_p2 = (shl_ln146_1_fu_1411_p3 + zext_ln151_1_fu_1422_p1);

assign add43_fu_1449_p2 = (tmp6_fu_1444_p2 + tmp1_cast_fu_1441_p1);

assign add_ln152_fu_1104_p2 = (ap_phi_mux_win_item_cnt_phi_fu_553_p4 + 8'd1);

assign add_ln160_1_fu_1526_p2 = (add_ln160_fu_1501_p2 + 64'd1);

assign add_ln160_fu_1501_p2 = (zext_ln160_1_fu_1497_p1 + bottom_read_reg_2026);

assign add_ln185_fu_1388_p2 = (zext_ln185_fu_1384_p1 + win_item_s_cast2_fu_1369_p1);

assign add_ln221_fu_1201_p2 = (ap_phi_mux_win_item_y_phi_fu_577_p4 + 8'd1);

assign add_ln235_1_fu_914_p2 = ($signed(sext_ln235_fu_910_p1) + $signed(zext_ln146_fu_875_p1));

assign add_ln235_fu_904_p2 = ($signed(zext_ln235_fu_900_p1) + $signed(9'd508));

assign add_ln240_1_fu_1572_p2 = ($signed(sext_ln240_fu_1568_p1) + $signed(top_read_reg_2021));

assign add_ln240_2_fu_1288_p2 = (tmp_s_fu_1276_p3 + trunc_ln240_fu_1284_p1);

assign add_ln240_3_fu_1302_p2 = (tmp_12_cast_fu_1294_p3 + trunc_ln240_1_reg_2248);

assign add_ln240_fu_1562_p2 = (tmp5_fu_1555_p3 + zext_ln240_3_fu_1552_p1);

assign add_ln247_fu_1029_p2 = (ap_phi_mux_gp_final_cnt_phi_fu_517_p4 + 8'd1);

assign add_ln257_fu_1327_p2 = (pool_win_cnt_reg_525 + 16'd1);

assign add_ln269_fu_1934_p2 = (pool_group_cnt_reg_477 + 16'd1);

assign and_ln149_fu_1089_p2 = (icmp_ln149_fu_1075_p2 & icmp_ln149_1_fu_1084_p2);

assign and_ln218_fu_1195_p2 = (icmp_ln218_fu_1185_p2 & icmp_ln218_1_fu_1190_p2);

assign and_ln234_fu_894_p2 = (icmp_ln234_fu_883_p2 & icmp_ln234_1_fu_889_p2);

assign and_ln239_fu_1001_p2 = (xor_ln239_fu_995_p2 & icmp_ln239_fu_985_p2);

assign and_ln244_fu_1023_p2 = (icmp_ln244_fu_1011_p2 & icmp_ln244_1_fu_1017_p2);

assign and_ln254_fu_1321_p2 = (icmp_ln254_fu_1311_p2 & icmp_ln254_1_fu_1316_p2);

assign and_ln266_fu_1928_p2 = (icmp_ln266_fu_1920_p2 & icmp_ln266_1_fu_1924_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state156 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((1'b1 == ap_block_state86_io) & (ap_enable_reg_pp0_iter40 == 1'b1)) | ((ap_predicate_op606_read_state82 == 1'b1) & (gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((1'b1 == ap_block_state86_io) & (ap_enable_reg_pp0_iter40 == 1'b1)) | ((ap_predicate_op606_read_state82 == 1'b1) & (gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((1'b1 == ap_block_state12_io) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_01001 = (((ap_predicate_op791_writeresp_state155 == 1'b1) & (gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b1)) | ((ap_predicate_op628_read_state83 == 1'b1) & (gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = (((ap_predicate_op791_writeresp_state155 == 1'b1) & (gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b1)) | ((1'b1 == ap_block_state87_io) & (ap_enable_reg_pp0_iter40 == 1'b1)) | ((ap_predicate_op628_read_state83 == 1'b1) & (gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((ap_predicate_op791_writeresp_state155 == 1'b1) & (gmem1_BVALID == 1'b0) & (ap_enable_reg_pp0_iter74 == 1'b1)) | ((1'b1 == ap_block_state87_io) & (ap_enable_reg_pp0_iter40 == 1'b1)) | ((ap_predicate_op628_read_state83 == 1'b1) & (gmem0_RVALID == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b1)) | ((1'b1 == ap_block_state13_io) & (ap_enable_reg_pp0_iter3 == 1'b1)));
end

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

assign ap_block_state100_pp0_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp0_stage1_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp0_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp0_stage1_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp0_stage0_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp0_stage1_iter49 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp0_stage0_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp0_stage1_iter50 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp0_stage0_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp0_stage1_iter51 = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp0_stage0_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp0_stage1_iter52 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp0_stage0_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp0_stage1_iter53 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp0_stage0_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp0_stage1_iter54 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp0_stage0_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp0_stage1_iter55 = ~(1'b1 == 1'b1);

assign ap_block_state118_pp0_stage0_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state119_pp0_stage1_iter56 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state120_pp0_stage0_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state121_pp0_stage1_iter57 = ~(1'b1 == 1'b1);

assign ap_block_state122_pp0_stage0_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state123_pp0_stage1_iter58 = ~(1'b1 == 1'b1);

assign ap_block_state124_pp0_stage0_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state125_pp0_stage1_iter59 = ~(1'b1 == 1'b1);

assign ap_block_state126_pp0_stage0_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state127_pp0_stage1_iter60 = ~(1'b1 == 1'b1);

assign ap_block_state128_pp0_stage0_iter61 = ~(1'b1 == 1'b1);

assign ap_block_state129_pp0_stage1_iter61 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((ap_predicate_op467_readreq_state12 == 1'b1) & (gmem0_ARREADY == 1'b0));
end

assign ap_block_state12_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state130_pp0_stage0_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state131_pp0_stage1_iter62 = ~(1'b1 == 1'b1);

assign ap_block_state132_pp0_stage0_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state133_pp0_stage1_iter63 = ~(1'b1 == 1'b1);

assign ap_block_state134_pp0_stage0_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state135_pp0_stage1_iter64 = ~(1'b1 == 1'b1);

assign ap_block_state136_pp0_stage0_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state137_pp0_stage1_iter65 = ~(1'b1 == 1'b1);

assign ap_block_state138_pp0_stage0_iter66 = ~(1'b1 == 1'b1);

assign ap_block_state139_pp0_stage1_iter66 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_io = ((ap_predicate_op469_readreq_state13 == 1'b1) & (gmem0_ARREADY == 1'b0));
end

assign ap_block_state13_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state140_pp0_stage0_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state141_pp0_stage1_iter67 = ~(1'b1 == 1'b1);

assign ap_block_state142_pp0_stage0_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state143_pp0_stage1_iter68 = ~(1'b1 == 1'b1);

assign ap_block_state144_pp0_stage0_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state145_pp0_stage1_iter69 = ~(1'b1 == 1'b1);

assign ap_block_state146_pp0_stage0_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state147_pp0_stage1_iter70 = ~(1'b1 == 1'b1);

assign ap_block_state148_pp0_stage0_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state149_pp0_stage1_iter71 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state150_pp0_stage0_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state151_pp0_stage1_iter72 = ~(1'b1 == 1'b1);

assign ap_block_state152_pp0_stage0_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state153_pp0_stage1_iter73 = ~(1'b1 == 1'b1);

assign ap_block_state154_pp0_stage0_iter74 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state155_pp0_stage1_iter74 = ((ap_predicate_op791_writeresp_state155 == 1'b1) & (gmem1_BVALID == 1'b0));
end

assign ap_block_state15_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage1_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage1_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage1_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage1_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage1_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage1_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage1_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage1_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage1_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage1_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage1_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage1_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage1_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage1_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage1_iter37 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state82_pp0_stage0_iter38 = ((ap_predicate_op606_read_state82 == 1'b1) & (gmem0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state83_pp0_stage1_iter38 = ((ap_predicate_op628_read_state83 == 1'b1) & (gmem0_RVALID == 1'b0));
end

assign ap_block_state84_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage1_iter39 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state86_io = ((ap_predicate_op722_writereq_state86 == 1'b1) & (gmem1_AWREADY == 1'b0));
end

assign ap_block_state86_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state87_io = ((ap_predicate_op723_write_state87 == 1'b1) & (gmem1_WREADY == 1'b0));
end

assign ap_block_state87_pp0_stage1_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage1_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage1_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp0_stage1_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp0_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp0_stage1_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp0_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp0_stage1_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp0_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp0_stage1_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1096 = ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_3024 = ((icmp_ln144_fu_862_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_3436 = ((ap_predicate_op467_readreq_state12 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001));
end

always @ (*) begin
    ap_condition_3440 = ((ap_predicate_op469_readreq_state13 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001));
end

always @ (*) begin
    ap_condition_3448 = ((icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter39 == 1'b1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage0) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd0));
end

always @ (*) begin
    ap_condition_3457 = ((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1));
end

always @ (*) begin
    ap_condition_3465 = ((icmp_ln144_reg_2196_pp0_iter39_reg == 1'd0) & (cmp78_reg_2104 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'd1 == and_ln149_reg_2273_pp0_iter38_reg) & (1'b0 == ap_block_pp0_stage1) & (cmp37_reg_2371_pp0_iter38_reg == 1'd1) & (cmp134_reg_2292_pp0_iter38_reg == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_ext_blocking_cur_n = (gmem1_blk_n_W & gmem1_blk_n_B & gmem1_blk_n_AW & gmem0_blk_n_R & gmem0_blk_n_AR);

assign ap_ext_blocking_n = (ap_ext_blocking_cur_n & 1'b1);

assign ap_int_blocking_n = (1'b1 & 1'b1);

assign ap_phi_reg_pp0_iter0_win_item_cnt_3_reg_657 = 'bx;

assign ap_phi_reg_pp0_iter0_win_item_s_3_reg_645 = 'bx;

assign ap_phi_reg_pp0_iter0_win_item_x_2_reg_621 = 'bx;

assign ap_phi_reg_pp0_iter0_win_item_y_3_reg_633 = 'bx;

always @ (*) begin
    ap_predicate_op467_readreq_state12 = ((cmp37_reg_2371_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln149_reg_2273_pp0_iter2_reg) & (icmp_ln144_reg_2196_pp0_iter2_reg == 1'd0));
end

always @ (*) begin
    ap_predicate_op469_readreq_state13 = ((icmp_ln144_reg_2196_pp0_iter3_reg == 1'd0) & (cmp37_reg_2371_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln149_reg_2273_pp0_iter2_reg));
end

always @ (*) begin
    ap_predicate_op606_read_state82 = ((cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (icmp_ln144_reg_2196_pp0_iter37_reg == 1'd0) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg));
end

always @ (*) begin
    ap_predicate_op628_read_state83 = ((icmp_ln144_reg_2196_pp0_iter38_reg == 1'd0) & (cmp37_reg_2371_pp0_iter37_reg == 1'd1) & (1'd1 == and_ln149_reg_2273_pp0_iter37_reg));
end

always @ (*) begin
    ap_predicate_op722_writereq_state86 = ((icmp_ln235_reg_2214_pp0_iter39_reg == 1'd1) & (1'd1 == and_ln239_reg_2244_pp0_iter39_reg) & (1'd1 == and_ln234_reg_2205_pp0_iter39_reg));
end

always @ (*) begin
    ap_predicate_op723_write_state87 = ((icmp_ln235_reg_2214_pp0_iter40_reg == 1'd1) & (1'd1 == and_ln239_reg_2244_pp0_iter40_reg) & (1'd1 == and_ln234_reg_2205_pp0_iter40_reg));
end

always @ (*) begin
    ap_predicate_op791_writeresp_state155 = ((icmp_ln235_reg_2214_pp0_iter74_reg == 1'd1) & (1'd1 == and_ln239_reg_2244_pp0_iter74_reg) & (1'd1 == and_ln234_reg_2205_pp0_iter74_reg));
end

assign ap_str_blocking_n = (1'b1 & 1'b1);

assign cmp101_fu_1151_p2 = ((ap_phi_mux_win_item_y_phi_fu_577_p4 == 8'd1) ? 1'b1 : 1'b0);

assign cmp134_fu_1145_p2 = ((ap_phi_mux_win_item_y_phi_fu_577_p4 == 8'd0) ? 1'b1 : 1'b0);

assign cmp37_fu_1432_p2 = ((add35_fu_1426_p2 < conv_x_cast1_reg_2071) ? 1'b1 : 1'b0);

assign cmp52_fu_1135_p2 = ((zext_ln151_2_fu_1095_p1 == sub_reg_2082) ? 1'b1 : 1'b0);

assign cmp55_fu_1140_p2 = ((win_item_cnt_1_fu_1110_p3 == pool_stride) ? 1'b1 : 1'b0);

assign cmp78_fu_741_p2 = ((pool_size == 8'd3) ? 1'b1 : 1'b0);

assign conv8_fu_689_p1 = conv_xy;

assign conv_x_cast14_fu_697_p1 = conv_x;

assign conv_x_cast1_fu_701_p1 = conv_x;

assign empty_fu_1373_p1 = win_item_s_reg_561[2:0];

assign event_done = ap_done;

assign flag_fu_1071_p1 = pool_win_cnt_reg_525[0:0];

assign global_index_z_group_fu_1263_p3 = ((tmp_2_reg_2218[0:0] == 1'b1) ? sub_ln237_2_fu_1257_p2 : sext_ln237_1_fu_1254_p1);

assign global_z_fu_929_p2 = (shl_ln236_reg_2186 + zext_ln236_fu_925_p1);

assign gp_final_cnt_1_fu_1035_p3 = ((icmp_ln244_1_fu_1017_p2[0:0] == 1'b1) ? add_ln247_fu_1029_p2 : ap_phi_mux_gp_final_cnt_phi_fu_517_p4);

assign gp_final_cnt_2_fu_1043_p3 = ((and_ln244_fu_1023_p2[0:0] == 1'b1) ? 8'd0 : gp_final_cnt_1_fu_1035_p3);

assign grp_fu_1970_p0 = grp_fu_1970_p00;

assign grp_fu_1970_p00 = pool_group_cnt_reg_477;

assign grp_fu_1970_p1 = conv8_reg_2056;

assign grp_fu_1975_p0 = grp_fu_1975_p00;

assign grp_fu_1975_p00 = ap_phi_mux_pool_win_cnt_phi_fu_529_p4;

assign grp_fu_1975_p1 = zext_ln160_reg_2143;

assign grp_fu_1981_p0 = grp_fu_1981_p00;

assign grp_fu_1981_p00 = tmp_fu_1126_p2;

assign grp_fu_1981_p1 = conv_x_cast14_reg_2066;

assign grp_fu_1981_p2 = grp_fu_1981_p20;

assign grp_fu_1981_p20 = shl_ln146_1_fu_1411_p3;

assign grp_fu_1989_p0 = grp_fu_1989_p00;

assign grp_fu_1989_p00 = global_index_z_group_fu_1263_p3;

assign grp_fu_1989_p1 = zext_ln240_reg_2123;

assign grp_fu_1989_p2 = zext_ln144_reg_2191;

assign i_1_fu_815_p2 = (i_reg_454 + 16'd1);

assign icmp_ln125_fu_821_p2 = ((i_reg_454 == pool_times) ? 1'b1 : 1'b0);

assign icmp_ln144_fu_862_p2 = ((ap_phi_mux_k_phi_fu_493_p4 == pool_y_bound) ? 1'b1 : 1'b0);

assign icmp_ln149_1_fu_1084_p2 = ((item_loop_cnt_reg_537 < load_data_bound) ? 1'b1 : 1'b0);

assign icmp_ln149_fu_1075_p2 = ((pool_win_cnt_reg_525 < pool_win_num_x_cast_reg_2076) ? 1'b1 : 1'b0);

assign icmp_ln151_fu_1099_p2 = (($signed(zext_ln151_2_fu_1095_p1) > $signed(sub_reg_2082)) ? 1'b1 : 1'b0);

assign icmp_ln218_1_fu_1190_p2 = ((zext_ln151_2_fu_1095_p1 == sub184_reg_2128) ? 1'b1 : 1'b0);

assign icmp_ln218_fu_1185_p2 = ((win_item_y_cast15_fu_1118_p1 == sub_reg_2082) ? 1'b1 : 1'b0);

assign icmp_ln227_fu_1237_p2 = ((win_item_x_3_fu_1229_p3 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln234_1_fu_889_p2 = ((ap_phi_mux_item_loop_cnt_phi_fu_541_p4 < write_back_bound) ? 1'b1 : 1'b0);

assign icmp_ln234_fu_883_p2 = ((ap_phi_mux_pool_win_cnt_phi_fu_529_p4 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_920_p2 = (($signed(add_ln235_1_fu_914_p2) < $signed(pool_dim1_cast16_reg_2089)) ? 1'b1 : 1'b0);

assign icmp_ln239_1_fu_990_p2 = ((global_z_fu_929_p2 < padd_offset_cast17_reg_2108) ? 1'b1 : 1'b0);

assign icmp_ln239_fu_985_p2 = (($signed(sub_ln237_fu_938_p2) < $signed(pool_dim3_cast_reg_2118)) ? 1'b1 : 1'b0);

assign icmp_ln244_1_fu_1017_p2 = ((ap_phi_mux_lane_cnt_phi_fu_505_p4 == 8'd1) ? 1'b1 : 1'b0);

assign icmp_ln244_fu_1011_p2 = ((ap_phi_mux_gp_final_cnt_phi_fu_517_p4 == 8'd3) ? 1'b1 : 1'b0);

assign icmp_ln254_1_fu_1316_p2 = ((zext_ln149_1_fu_1080_p1 == sub272_reg_2099) ? 1'b1 : 1'b0);

assign icmp_ln254_fu_1311_p2 = ((pool_win_cnt_reg_525 == pool_win_num_x_cast_reg_2076) ? 1'b1 : 1'b0);

assign icmp_ln266_1_fu_1924_p2 = ((pool_y_cnt_cast10_reg_2176 == sub291_reg_2138) ? 1'b1 : 1'b0);

assign icmp_ln266_fu_1920_p2 = ((pool_group_cnt_cast_reg_2166 == sub287_reg_2133) ? 1'b1 : 1'b0);

assign icmp_ln52_10_fu_1903_p2 = (($signed(max_value_18_reg_2482) < $signed(row_reg0_load_1_reg_2476)) ? 1'b1 : 1'b0);

assign icmp_ln52_11_fu_1884_p2 = (($signed(max_value_18_reg_2482) < $signed(row_reg1_q0)) ? 1'b1 : 1'b0);

assign icmp_ln52_1_fu_1661_p2 = (($signed(temp_reg2_fu_1612_p3) < $signed(max_value_13_fu_1653_p3)) ? 1'b1 : 1'b0);

assign icmp_ln52_2_fu_1620_p2 = (($signed(temp_reg1_fu_1604_p3) < $signed(temp_reg0_1_fu_1597_p3)) ? 1'b1 : 1'b0);

assign icmp_ln52_3_fu_1696_p2 = (($signed(max_value_15_reg_2421) < $signed(row_reg0_q1)) ? 1'b1 : 1'b0);

assign icmp_ln52_4_fu_1734_p2 = (($signed(max_value_14_reg_2427) < $signed(row_reg0_q1)) ? 1'b1 : 1'b0);

assign icmp_ln52_5_fu_1715_p2 = (($signed(max_value_14_reg_2427) < $signed(row_reg1_q1)) ? 1'b1 : 1'b0);

assign icmp_ln52_6_fu_1806_p2 = (($signed(temp_reg0_fu_1765_p3) < $signed(temp_reg1_2_fu_1772_p3)) ? 1'b1 : 1'b0);

assign icmp_ln52_7_fu_1863_p2 = (($signed(temp_reg2_2_reg_2452) < $signed(max_value_17_reg_2465)) ? 1'b1 : 1'b0);

assign icmp_ln52_8_fu_1786_p2 = (($signed(temp_reg1_2_fu_1772_p3) < $signed(temp_reg0_fu_1765_p3)) ? 1'b1 : 1'b0);

assign icmp_ln52_9_fu_1844_p2 = (($signed(max_value_16_reg_2458) < $signed(row_reg0_q1)) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_1641_p2 = (($signed(temp_reg0_1_fu_1597_p3) < $signed(temp_reg1_fu_1604_p3)) ? 1'b1 : 1'b0);

assign idxprom139_fu_1363_p1 = win_item_s_reg_561;

assign item_loop_bound_cast_fu_731_p1 = item_loop_bound;

assign item_loop_cnt_1_fu_1349_p2 = (item_loop_cnt_reg_537 + 16'd1);

assign item_loop_cnt_2_fu_1355_p3 = ((icmp_ln254_1_fu_1316_p2[0:0] == 1'b1) ? 16'd0 : item_loop_cnt_1_fu_1349_p2);

assign k_1_fu_1065_p2 = (k_reg_489 + 16'd1);

assign lane_cnt_1_fu_1051_p2 = (ap_phi_mux_lane_cnt_phi_fu_505_p4 + 8'd1);

assign lshr_ln160_fu_1756_p2 = gmem0_addr_1_read_reg_2436 >> zext_ln125_reg_2148;

assign max_value_10_fu_1855_p3 = ((xor_ln52_9_fu_1849_p2[0:0] == 1'b1) ? max_value_16_reg_2458 : row_reg0_q1);

assign max_value_12_fu_1895_p3 = ((xor_ln52_11_fu_1889_p2[0:0] == 1'b1) ? max_value_18_reg_2482 : row_reg1_q0);

assign max_value_13_fu_1653_p3 = ((xor_ln52_fu_1647_p2[0:0] == 1'b1) ? temp_reg0_1_fu_1597_p3 : temp_reg1_fu_1604_p3);

assign max_value_14_fu_1673_p3 = ((xor_ln52_1_fu_1667_p2[0:0] == 1'b1) ? temp_reg2_fu_1612_p3 : max_value_13_fu_1653_p3);

assign max_value_15_fu_1632_p3 = ((xor_ln52_2_fu_1626_p2[0:0] == 1'b1) ? temp_reg1_fu_1604_p3 : temp_reg0_1_fu_1597_p3);

assign max_value_16_fu_1798_p3 = ((xor_ln52_8_fu_1792_p2[0:0] == 1'b1) ? temp_reg1_2_fu_1772_p3 : temp_reg0_fu_1765_p3);

assign max_value_17_fu_1818_p3 = ((xor_ln52_6_fu_1812_p2[0:0] == 1'b1) ? temp_reg0_fu_1765_p3 : temp_reg1_2_fu_1772_p3);

assign max_value_18_fu_1873_p3 = ((xor_ln52_7_fu_1867_p2[0:0] == 1'b1) ? temp_reg2_2_reg_2452 : max_value_17_reg_2465);

assign max_value_5_fu_1726_p3 = ((xor_ln52_5_fu_1720_p2[0:0] == 1'b1) ? max_value_14_reg_2427 : row_reg1_q1);

assign max_value_fu_1707_p3 = ((xor_ln52_3_fu_1701_p2[0:0] == 1'b1) ? max_value_15_reg_2421 : row_reg0_q1);

assign mul13_fu_842_p0 = pool_y_cnt_cast_fu_838_p1;

assign mul13_fu_842_p1 = pool_stride_cast_reg_2061;

assign mul244_fu_853_p0 = pool_y_cnt_cast_fu_838_p1;

assign mul244_fu_853_p1 = pool_dim1_cast9_reg_2094;

assign or_ln163_fu_1593_p2 = (cmp55_reg_2287_pp0_iter37_reg | cmp52_reg_2282_pp0_iter37_reg);

assign or_ln195_fu_1833_p2 = (tmp_5_cast_fu_1826_p3 | 4'd1);

assign or_ln210_fu_1157_p2 = (cmp55_fu_1140_p2 | cmp52_fu_1135_p2);

assign p_and_t_cast_fu_1458_p3 = {{6'd0}, {trunc_ln238_1_reg_2239_pp0_iter1_reg}};

assign padd_offset_cast17_fu_747_p1 = padd_offset;

assign padd_offset_cast_fu_751_p1 = padd_offset;

assign pool_dim1_cast16_fu_719_p1 = pool_dim1;

assign pool_dim1_cast9_fu_723_p1 = pool_dim1;

assign pool_dim1_cast_fu_727_p1 = pool_dim1;

assign pool_dim3_cast_fu_755_p1 = pool_dim3;

assign pool_group_cast_fu_773_p1 = pool_group;

assign pool_group_cnt_1_fu_1940_p3 = ((icmp_ln266_1_fu_1924_p2[0:0] == 1'b1) ? add_ln269_fu_1934_p2 : pool_group_cnt_reg_477);

assign pool_group_cnt_2_fu_1948_p3 = ((and_ln266_fu_1928_p2[0:0] == 1'b1) ? 16'd0 : pool_group_cnt_1_fu_1940_p3);

assign pool_group_cnt_cast_fu_830_p1 = pool_group_cnt_reg_477;

assign pool_size_cast_fu_709_p1 = pool_size;

assign pool_stride_cast_fu_693_p1 = pool_stride;

assign pool_win_cnt_1_fu_1333_p3 = ((icmp_ln254_1_fu_1316_p2[0:0] == 1'b1) ? add_ln257_fu_1327_p2 : pool_win_cnt_reg_525);

assign pool_win_cnt_2_fu_1341_p3 = ((and_ln254_fu_1321_p2[0:0] == 1'b1) ? 16'd0 : pool_win_cnt_1_fu_1333_p3);

assign pool_win_num_x_cast_fu_705_p1 = pool_win_num_x;

assign pool_y_cnt_1_fu_1956_p2 = (pool_y_cnt_reg_465 + 8'd1);

assign pool_y_cnt_2_fu_1962_p3 = ((icmp_ln266_1_fu_1924_p2[0:0] == 1'b1) ? 8'd0 : pool_y_cnt_1_fu_1956_p2);

assign pool_y_cnt_cast10_fu_834_p1 = pool_y_cnt_reg_465;

assign pool_y_cnt_cast_fu_838_p1 = pool_y_cnt_reg_465;

assign row_reg0_d1 = ((xor_ln52_2_fu_1626_p2[0:0] == 1'b1) ? temp_reg1_fu_1604_p3 : temp_reg0_1_fu_1597_p3);

assign row_reg1_d0 = ((xor_ln52_10_fu_1907_p2[0:0] == 1'b1) ? max_value_18_reg_2482 : row_reg0_load_1_reg_2476);

assign row_reg1_d1 = ((xor_ln52_4_fu_1739_p2[0:0] == 1'b1) ? max_value_14_reg_2427 : row_reg0_q1);

assign select_ln238_fu_1478_p3 = ((tmp_2_reg_2218_pp0_iter1_reg[0:0] == 1'b1) ? sub_ln238_fu_1465_p2 : tmp_9_fu_1471_p3);

assign select_ln248_fu_1057_p3 = ((icmp_ln244_1_fu_1017_p2[0:0] == 1'b1) ? 8'd0 : lane_cnt_1_fu_1051_p2);

assign sext_ln160_1_fu_1542_p1 = $signed(trunc_ln160_3_fu_1532_p4);

assign sext_ln160_fu_1516_p1 = $signed(trunc_ln160_1_fu_1506_p4);

assign sext_ln235_1_fu_1455_p1 = add_ln235_1_reg_2209_pp0_iter1_reg;

assign sext_ln235_fu_910_p1 = $signed(add_ln235_fu_904_p2);

assign sext_ln237_1_fu_1254_p1 = $signed(trunc_ln237_2_reg_2229);

assign sext_ln237_fu_1251_p1 = $signed(trunc_ln237_1_reg_2224);

assign sext_ln240_fu_1568_p1 = $signed(add_ln240_fu_1562_p2);

assign shift_reg_5_fu_1583_p1 = gmem0_RDATA[7:0];

assign shift_reg_8_fu_1760_p1 = lshr_ln160_fu_1756_p2[7:0];

assign shl_ln146_1_fu_1411_p3 = {{grp_fu_1975_p2}, {2'd0}};

assign shl_ln160_1_fu_803_p3 = {{xor_ln160_fu_797_p2}, {3'd0}};

assign shl_ln1_fu_867_p3 = {{ap_phi_mux_pool_win_cnt_phi_fu_529_p4}, {2'd0}};

assign shl_ln236_fu_847_p2 = pool_group_cnt_reg_477 << 16'd1;

assign shl_ln2_fu_1490_p3 = {{add43_reg_2375}, {1'd0}};

assign sub184_fu_767_p2 = ($signed(win_size_x_cast_fu_763_p1) + $signed(9'd511));

assign sub272_fu_735_p2 = ($signed(item_loop_bound_cast_fu_731_p1) + $signed(17'd131071));

assign sub287_fu_777_p2 = ($signed(pool_group_cast_fu_773_p1) + $signed(17'd131071));

assign sub291_fu_783_p2 = ($signed(pool_dim1_cast_fu_727_p1) + $signed(9'd511));

assign sub_fu_713_p2 = ($signed(pool_size_cast_fu_709_p1) + $signed(9'd511));

assign sub_ln237_1_fu_951_p2 = (17'd0 - sub_ln237_fu_938_p2);

assign sub_ln237_2_fu_1257_p2 = ($signed(16'd0) - $signed(sext_ln237_fu_1251_p1));

assign sub_ln237_fu_938_p2 = (zext_ln237_fu_934_p1 - padd_offset_cast_reg_2113);

assign sub_ln238_fu_1465_p2 = (8'd0 - p_and_t_cast_fu_1458_p3);

assign temp_reg0_1_fu_1597_p3 = ((or_ln163_fu_1593_p2[0:0] == 1'b1) ? shift_reg_5_reg_2408 : 8'd0);

assign temp_reg0_fu_1765_p3 = ((or_ln163_reg_2414[0:0] == 1'b1) ? shift_reg_8_fu_1760_p1 : 8'd0);

assign temp_reg1_2_fu_1772_p3 = ((or_ln163_reg_2414[0:0] == 1'b1) ? shift_reg_3_fu_218 : 8'd0);

assign temp_reg1_fu_1604_p3 = ((or_ln163_fu_1593_p2[0:0] == 1'b1) ? shift_reg_1_fu_210 : 8'd0);

assign temp_reg2_2_fu_1779_p3 = ((or_ln163_reg_2414[0:0] == 1'b1) ? shift_reg_fu_206 : 8'd0);

assign temp_reg2_fu_1612_p3 = ((or_ln163_fu_1593_p2[0:0] == 1'b1) ? shift_reg_2_fu_214 : 8'd0);

assign tmp1_cast_fu_1441_p1 = grp_fu_1981_p3;

assign tmp47_fu_1485_p2 = ($signed(grp_fu_1989_p3) + $signed(sext_ln235_1_fu_1455_p1));

assign tmp5_fu_1555_p3 = {{tmp47_reg_2385}, {2'd0}};

assign tmp6_fu_1444_p2 = (mul_reg_2171 + zext_ln151_fu_1437_p1);

assign tmp_12_cast_fu_1294_p3 = {{add_ln240_2_fu_1288_p2}, {1'd0}};

assign tmp_1_fu_1398_p3 = {{add_ln185_fu_1388_p2}, {1'd0}};

assign tmp_3_fu_1377_p3 = {{flag_reg_2268}, {2'd0}};

assign tmp_5_cast_fu_1826_p3 = {{trunc_ln185_reg_2356_pp0_iter39_reg}, {1'd0}};

assign tmp_9_fu_1471_p3 = {{6'd0}, {trunc_ln238_reg_2234_pp0_iter1_reg}};

assign tmp_fu_1126_p2 = (mul13_reg_2181 + win_item_y_cast_fu_1122_p1);

assign tmp_s_fu_1276_p3 = {{xor_ln240_fu_1270_p2}, {2'd0}};

assign trunc_ln160_1_fu_1506_p4 = {{add_ln160_fu_1501_p2[63:1]}};

assign trunc_ln160_3_fu_1532_p4 = {{add_ln160_1_fu_1526_p2[63:1]}};

assign trunc_ln160_fu_793_p1 = bottom[0:0];

assign trunc_ln185_fu_1394_p1 = add_ln185_fu_1388_p2[2:0];

assign trunc_ln238_1_fu_981_p1 = sub_ln237_1_fu_951_p2[1:0];

assign trunc_ln238_fu_977_p1 = sub_ln237_fu_938_p2[1:0];

assign trunc_ln240_1_fu_1007_p1 = ap_phi_mux_lane_cnt_phi_fu_505_p4[3:0];

assign trunc_ln240_fu_1284_p1 = gp_final_cnt_reg_513[2:0];

assign win_item_cnt_1_fu_1110_p3 = ((icmp_ln151_fu_1099_p2[0:0] == 1'b1) ? add_ln152_fu_1104_p2 : ap_phi_mux_win_item_cnt_phi_fu_553_p4);

assign win_item_cnt_2_fu_1177_p3 = ((cmp55_fu_1140_p2[0:0] == 1'b1) ? 8'd0 : win_item_cnt_1_fu_1110_p3);

assign win_item_s_1_fu_1163_p2 = (ap_phi_mux_win_item_s_phi_fu_565_p4 + 8'd1);

assign win_item_s_2_fu_1169_p3 = ((or_ln210_fu_1157_p2[0:0] == 1'b1) ? win_item_s_1_fu_1163_p2 : ap_phi_mux_win_item_s_phi_fu_565_p4);

assign win_item_s_4_fu_1243_p3 = ((icmp_ln227_fu_1237_p2[0:0] == 1'b1) ? 8'd0 : win_item_s_2_fu_1169_p3);

assign win_item_s_cast2_fu_1369_p1 = win_item_s_reg_561;

assign win_item_x_1_fu_1223_p2 = (ap_phi_mux_win_item_x_phi_fu_589_p4 + 8'd1);

assign win_item_x_3_fu_1229_p3 = ((icmp_ln218_1_fu_1190_p2[0:0] == 1'b1) ? 8'd0 : win_item_x_1_fu_1223_p2);

assign win_item_y_1_fu_1207_p3 = ((icmp_ln218_1_fu_1190_p2[0:0] == 1'b1) ? add_ln221_fu_1201_p2 : ap_phi_mux_win_item_y_phi_fu_577_p4);

assign win_item_y_2_fu_1215_p3 = ((and_ln218_fu_1195_p2[0:0] == 1'b1) ? 8'd0 : win_item_y_1_fu_1207_p3);

assign win_item_y_cast15_fu_1118_p1 = ap_phi_mux_win_item_y_phi_fu_577_p4;

assign win_item_y_cast_fu_1122_p1 = ap_phi_mux_win_item_y_phi_fu_577_p4;

assign win_size_x_cast_fu_763_p1 = win_size_x;

assign xor_ln160_fu_797_p2 = (trunc_ln160_fu_793_p1 ^ 1'd1);

assign xor_ln179_fu_1685_p2 = (empty_reg_2340_pp0_iter38_reg ^ 3'd4);

assign xor_ln239_fu_995_p2 = (icmp_ln239_1_fu_990_p2 ^ 1'd1);

assign xor_ln240_fu_1270_p2 = (flag_fu_1071_p1 ^ 1'd1);

assign xor_ln52_10_fu_1907_p2 = (icmp_ln52_10_fu_1903_p2 ^ 1'd1);

assign xor_ln52_11_fu_1889_p2 = (icmp_ln52_11_fu_1884_p2 ^ 1'd1);

assign xor_ln52_1_fu_1667_p2 = (icmp_ln52_1_fu_1661_p2 ^ 1'd1);

assign xor_ln52_2_fu_1626_p2 = (icmp_ln52_2_fu_1620_p2 ^ 1'd1);

assign xor_ln52_3_fu_1701_p2 = (icmp_ln52_3_fu_1696_p2 ^ 1'd1);

assign xor_ln52_4_fu_1739_p2 = (icmp_ln52_4_fu_1734_p2 ^ 1'd1);

assign xor_ln52_5_fu_1720_p2 = (icmp_ln52_5_fu_1715_p2 ^ 1'd1);

assign xor_ln52_6_fu_1812_p2 = (icmp_ln52_6_fu_1806_p2 ^ 1'd1);

assign xor_ln52_7_fu_1867_p2 = (icmp_ln52_7_fu_1863_p2 ^ 1'd1);

assign xor_ln52_8_fu_1792_p2 = (icmp_ln52_8_fu_1786_p2 ^ 1'd1);

assign xor_ln52_9_fu_1849_p2 = (icmp_ln52_9_fu_1844_p2 ^ 1'd1);

assign xor_ln52_fu_1647_p2 = (icmp_ln52_fu_1641_p2 ^ 1'd1);

assign zext_ln125_fu_811_p1 = shl_ln160_1_fu_803_p3;

assign zext_ln144_fu_858_p1 = mul244_fu_853_p2;

assign zext_ln146_fu_875_p1 = shl_ln1_fu_867_p3;

assign zext_ln149_1_fu_1080_p1 = item_loop_cnt_reg_537;

assign zext_ln151_1_fu_1422_p1 = win_item_x_reg_585;

assign zext_ln151_2_fu_1095_p1 = ap_phi_mux_win_item_x_phi_fu_589_p4;

assign zext_ln151_fu_1437_p1 = win_item_x_reg_585_pp0_iter1_reg;

assign zext_ln160_1_fu_1497_p1 = shl_ln2_fu_1490_p3;

assign zext_ln160_fu_789_p1 = pool_stride;

assign zext_ln179_fu_1690_p1 = xor_ln179_fu_1685_p2;

assign zext_ln185_1_fu_1406_p1 = tmp_1_fu_1398_p3;

assign zext_ln185_fu_1384_p1 = tmp_3_fu_1377_p3;

assign zext_ln195_fu_1839_p1 = or_ln195_fu_1833_p2;

assign zext_ln235_fu_900_p1 = ap_phi_mux_gp_final_cnt_phi_fu_517_p4;

assign zext_ln236_fu_925_p1 = ap_phi_mux_lane_cnt_phi_fu_505_p4;

assign zext_ln237_fu_934_p1 = global_z_fu_929_p2;

assign zext_ln240_1_fu_1880_p1 = add_ln240_3_reg_2320_pp0_iter38_reg;

assign zext_ln240_3_fu_1552_p1 = select_ln238_reg_2380;

assign zext_ln240_fu_759_p1 = pool_dim1x2;

always @ (posedge ap_clk) begin
    conv8_reg_2056[31:16] <= 16'b0000000000000000;
    pool_stride_cast_reg_2061[15:8] <= 8'b00000000;
    conv_x_cast14_reg_2066[23:8] <= 16'b0000000000000000;
    conv_x_cast1_reg_2071[25:8] <= 18'b000000000000000000;
    pool_win_num_x_cast_reg_2076[15:8] <= 8'b00000000;
    pool_dim1_cast16_reg_2089[19:8] <= 12'b000000000000;
    pool_dim1_cast9_reg_2094[15:8] <= 8'b00000000;
    padd_offset_cast17_reg_2108[15:8] <= 8'b00000000;
    padd_offset_cast_reg_2113[16:8] <= 9'b000000000;
    pool_dim3_cast_reg_2118[16] <= 1'b0;
    zext_ln240_reg_2123[29:16] <= 14'b00000000000000;
    zext_ln160_reg_2143[23:8] <= 16'b0000000000000000;
    zext_ln125_reg_2148[2:0] <= 3'b000;
    zext_ln125_reg_2148[15:4] <= 12'b000000000000;
    pool_group_cnt_cast_reg_2166[16] <= 1'b0;
    pool_y_cnt_cast10_reg_2176[8] <= 1'b0;
    shl_ln236_reg_2186[0] <= 1'b0;
    zext_ln144_reg_2191[29:16] <= 14'b00000000000000;
    pool_final_addr_reg_2361[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter2_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter3_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter4_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter5_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter6_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter7_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter8_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter9_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter10_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter11_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter12_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter13_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter14_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter15_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter16_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter17_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter18_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter19_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter20_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter21_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter22_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter23_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter24_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter25_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter26_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter27_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter28_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter29_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter30_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter31_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter32_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter33_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter34_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter35_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter36_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter37_reg[0] <= 1'b0;
    pool_final_addr_reg_2361_pp0_iter38_reg[0] <= 1'b0;
    pool_final_addr_1_reg_2471[0] <= 1'b1;
    ap_str_blocking_n_reg <= 1'b1;
    ap_int_blocking_n_reg <= 1'b1;
end

endmodule //maxPool
