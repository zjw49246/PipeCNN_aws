-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity maxPool is
generic (
    C_M_AXI_GMEM0_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM0_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM0_BUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM1_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM1_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM1_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM0_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM0_CACHE_VALUE : INTEGER := 3;
    C_M_AXI_GMEM1_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM1_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    event_done : OUT STD_LOGIC;
    m_axi_gmem0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem0_AWREADY : IN STD_LOGIC;
    m_axi_gmem0_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem0_WVALID : OUT STD_LOGIC;
    m_axi_gmem0_WREADY : IN STD_LOGIC;
    m_axi_gmem0_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem0_WLAST : OUT STD_LOGIC;
    m_axi_gmem0_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_WUSER_WIDTH-1 downto 0);
    m_axi_gmem0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem0_ARREADY : IN STD_LOGIC;
    m_axi_gmem0_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ADDR_WIDTH-1 downto 0);
    m_axi_gmem0_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem0_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RVALID : IN STD_LOGIC;
    m_axi_gmem0_RREADY : OUT STD_LOGIC;
    m_axi_gmem0_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_DATA_WIDTH-1 downto 0);
    m_axi_gmem0_RLAST : IN STD_LOGIC;
    m_axi_gmem0_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_RUSER_WIDTH-1 downto 0);
    m_axi_gmem0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BVALID : IN STD_LOGIC;
    m_axi_gmem0_BREADY : OUT STD_LOGIC;
    m_axi_gmem0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem0_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_ID_WIDTH-1 downto 0);
    m_axi_gmem0_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM0_BUSER_WIDTH-1 downto 0);
    m_axi_gmem1_AWVALID : OUT STD_LOGIC;
    m_axi_gmem1_AWREADY : IN STD_LOGIC;
    m_axi_gmem1_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem1_WVALID : OUT STD_LOGIC;
    m_axi_gmem1_WREADY : IN STD_LOGIC;
    m_axi_gmem1_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem1_WLAST : OUT STD_LOGIC;
    m_axi_gmem1_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_WUSER_WIDTH-1 downto 0);
    m_axi_gmem1_ARVALID : OUT STD_LOGIC;
    m_axi_gmem1_ARREADY : IN STD_LOGIC;
    m_axi_gmem1_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ADDR_WIDTH-1 downto 0);
    m_axi_gmem1_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem1_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem1_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem1_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RVALID : IN STD_LOGIC;
    m_axi_gmem1_RREADY : OUT STD_LOGIC;
    m_axi_gmem1_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_DATA_WIDTH-1 downto 0);
    m_axi_gmem1_RLAST : IN STD_LOGIC;
    m_axi_gmem1_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_RUSER_WIDTH-1 downto 0);
    m_axi_gmem1_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BVALID : IN STD_LOGIC;
    m_axi_gmem1_BREADY : OUT STD_LOGIC;
    m_axi_gmem1_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem1_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_ID_WIDTH-1 downto 0);
    m_axi_gmem1_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM1_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    event_start : OUT STD_LOGIC;
    stall_start_ext : OUT STD_LOGIC;
    stall_done_ext : OUT STD_LOGIC;
    stall_start_str : OUT STD_LOGIC;
    stall_done_str : OUT STD_LOGIC;
    stall_start_int : OUT STD_LOGIC;
    stall_done_int : OUT STD_LOGIC );
end;


architecture behav of maxPool is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "maxPool_maxPool,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=3.333000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=2.433090,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=3981,HLS_SYN_LUT=5066,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state156 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv9_1FC : STD_LOGIC_VECTOR (8 downto 0) := "111111100";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

attribute shreg_extract : string;
    signal ap_rst_reg_2 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_2 : signal is "no";
    signal ap_rst_reg_1 : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_reg_1 : signal is "no";
    signal ap_rst_n_inv : STD_LOGIC := '1';
attribute shreg_extract of ap_rst_n_inv : signal is "no";
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_continue : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal conv_x : STD_LOGIC_VECTOR (7 downto 0);
    signal conv_xy : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_dim1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_dim3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_dim1x2 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_size : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_stride : STD_LOGIC_VECTOR (7 downto 0);
    signal padd_offset : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_times : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_group : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_y_bound : STD_LOGIC_VECTOR (15 downto 0);
    signal item_loop_bound : STD_LOGIC_VECTOR (15 downto 0);
    signal load_data_bound : STD_LOGIC_VECTOR (15 downto 0);
    signal write_back_bound : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_win_num_x : STD_LOGIC_VECTOR (7 downto 0);
    signal win_size_x : STD_LOGIC_VECTOR (7 downto 0);
    signal bottom : STD_LOGIC_VECTOR (63 downto 0);
    signal top : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln144_reg_2196 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_blk_n_R : STD_LOGIC;
    signal ap_enable_reg_pp0_iter38 : STD_LOGIC := '0';
    signal icmp_ln144_reg_2196_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln144_reg_2196_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_blk_n_AW : STD_LOGIC;
    signal ap_enable_reg_pp0_iter40 : STD_LOGIC := '0';
    signal and_ln234_reg_2205 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_blk_n_W : STD_LOGIC;
    signal and_ln234_reg_2205_pp0_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter40_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_blk_n_B : STD_LOGIC;
    signal ap_enable_reg_pp0_iter74 : STD_LOGIC := '0';
    signal and_ln234_reg_2205_pp0_iter74_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter74_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter74_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_AWREADY : STD_LOGIC;
    signal gmem0_WREADY : STD_LOGIC;
    signal gmem0_ARVALID : STD_LOGIC;
    signal gmem0_ARREADY : STD_LOGIC;
    signal gmem0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_RVALID : STD_LOGIC;
    signal gmem0_RREADY : STD_LOGIC;
    signal gmem0_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem0_RLAST : STD_LOGIC;
    signal gmem0_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BVALID : STD_LOGIC;
    signal gmem0_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem0_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem0_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_AWVALID : STD_LOGIC;
    signal gmem1_AWREADY : STD_LOGIC;
    signal gmem1_WVALID : STD_LOGIC;
    signal gmem1_WREADY : STD_LOGIC;
    signal gmem1_ARREADY : STD_LOGIC;
    signal gmem1_RVALID : STD_LOGIC;
    signal gmem1_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem1_RLAST : STD_LOGIC;
    signal gmem1_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BVALID : STD_LOGIC;
    signal gmem1_BREADY : STD_LOGIC;
    signal gmem1_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem1_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem1_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal k_reg_489 : STD_LOGIC_VECTOR (15 downto 0);
    signal lane_cnt_reg_501 : STD_LOGIC_VECTOR (7 downto 0);
    signal gp_final_cnt_reg_513 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_win_cnt_reg_525 : STD_LOGIC_VECTOR (15 downto 0);
    signal item_loop_cnt_reg_537 : STD_LOGIC_VECTOR (15 downto 0);
    signal win_item_cnt_reg_549 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_s_reg_561 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_y_reg_573 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_x_reg_585 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_x_reg_585_pp0_iter1_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state7_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state11_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state13_pp0_stage1_iter3 : BOOLEAN;
    signal ap_predicate_op469_readreq_state13 : BOOLEAN;
    signal ap_block_state13_io : BOOLEAN;
    signal ap_block_state15_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state17_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state19_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state21_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state23_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state25_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state27_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_state29_pp0_stage1_iter11 : BOOLEAN;
    signal ap_block_state31_pp0_stage1_iter12 : BOOLEAN;
    signal ap_block_state33_pp0_stage1_iter13 : BOOLEAN;
    signal ap_block_state35_pp0_stage1_iter14 : BOOLEAN;
    signal ap_block_state37_pp0_stage1_iter15 : BOOLEAN;
    signal ap_block_state39_pp0_stage1_iter16 : BOOLEAN;
    signal ap_block_state41_pp0_stage1_iter17 : BOOLEAN;
    signal ap_block_state43_pp0_stage1_iter18 : BOOLEAN;
    signal ap_block_state45_pp0_stage1_iter19 : BOOLEAN;
    signal ap_block_state47_pp0_stage1_iter20 : BOOLEAN;
    signal ap_block_state49_pp0_stage1_iter21 : BOOLEAN;
    signal ap_block_state51_pp0_stage1_iter22 : BOOLEAN;
    signal ap_block_state53_pp0_stage1_iter23 : BOOLEAN;
    signal ap_block_state55_pp0_stage1_iter24 : BOOLEAN;
    signal ap_block_state57_pp0_stage1_iter25 : BOOLEAN;
    signal ap_block_state59_pp0_stage1_iter26 : BOOLEAN;
    signal ap_block_state61_pp0_stage1_iter27 : BOOLEAN;
    signal ap_block_state63_pp0_stage1_iter28 : BOOLEAN;
    signal ap_block_state65_pp0_stage1_iter29 : BOOLEAN;
    signal ap_block_state67_pp0_stage1_iter30 : BOOLEAN;
    signal ap_block_state69_pp0_stage1_iter31 : BOOLEAN;
    signal ap_block_state71_pp0_stage1_iter32 : BOOLEAN;
    signal ap_block_state73_pp0_stage1_iter33 : BOOLEAN;
    signal ap_block_state75_pp0_stage1_iter34 : BOOLEAN;
    signal ap_block_state77_pp0_stage1_iter35 : BOOLEAN;
    signal ap_block_state79_pp0_stage1_iter36 : BOOLEAN;
    signal ap_block_state81_pp0_stage1_iter37 : BOOLEAN;
    signal ap_predicate_op628_read_state83 : BOOLEAN;
    signal ap_block_state83_pp0_stage1_iter38 : BOOLEAN;
    signal ap_block_state85_pp0_stage1_iter39 : BOOLEAN;
    signal ap_block_state87_pp0_stage1_iter40 : BOOLEAN;
    signal ap_predicate_op723_write_state87 : BOOLEAN;
    signal ap_block_state87_io : BOOLEAN;
    signal ap_block_state89_pp0_stage1_iter41 : BOOLEAN;
    signal ap_block_state91_pp0_stage1_iter42 : BOOLEAN;
    signal ap_block_state93_pp0_stage1_iter43 : BOOLEAN;
    signal ap_block_state95_pp0_stage1_iter44 : BOOLEAN;
    signal ap_block_state97_pp0_stage1_iter45 : BOOLEAN;
    signal ap_block_state99_pp0_stage1_iter46 : BOOLEAN;
    signal ap_block_state101_pp0_stage1_iter47 : BOOLEAN;
    signal ap_block_state103_pp0_stage1_iter48 : BOOLEAN;
    signal ap_block_state105_pp0_stage1_iter49 : BOOLEAN;
    signal ap_block_state107_pp0_stage1_iter50 : BOOLEAN;
    signal ap_block_state109_pp0_stage1_iter51 : BOOLEAN;
    signal ap_block_state111_pp0_stage1_iter52 : BOOLEAN;
    signal ap_block_state113_pp0_stage1_iter53 : BOOLEAN;
    signal ap_block_state115_pp0_stage1_iter54 : BOOLEAN;
    signal ap_block_state117_pp0_stage1_iter55 : BOOLEAN;
    signal ap_block_state119_pp0_stage1_iter56 : BOOLEAN;
    signal ap_block_state121_pp0_stage1_iter57 : BOOLEAN;
    signal ap_block_state123_pp0_stage1_iter58 : BOOLEAN;
    signal ap_block_state125_pp0_stage1_iter59 : BOOLEAN;
    signal ap_block_state127_pp0_stage1_iter60 : BOOLEAN;
    signal ap_block_state129_pp0_stage1_iter61 : BOOLEAN;
    signal ap_block_state131_pp0_stage1_iter62 : BOOLEAN;
    signal ap_block_state133_pp0_stage1_iter63 : BOOLEAN;
    signal ap_block_state135_pp0_stage1_iter64 : BOOLEAN;
    signal ap_block_state137_pp0_stage1_iter65 : BOOLEAN;
    signal ap_block_state139_pp0_stage1_iter66 : BOOLEAN;
    signal ap_block_state141_pp0_stage1_iter67 : BOOLEAN;
    signal ap_block_state143_pp0_stage1_iter68 : BOOLEAN;
    signal ap_block_state145_pp0_stage1_iter69 : BOOLEAN;
    signal ap_block_state147_pp0_stage1_iter70 : BOOLEAN;
    signal ap_block_state149_pp0_stage1_iter71 : BOOLEAN;
    signal ap_block_state151_pp0_stage1_iter72 : BOOLEAN;
    signal ap_block_state153_pp0_stage1_iter73 : BOOLEAN;
    signal ap_predicate_op791_writeresp_state155 : BOOLEAN;
    signal ap_block_state155_pp0_stage1_iter74 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal gp_final_cnt_3_reg_597 : STD_LOGIC_VECTOR (7 downto 0);
    signal lane_cnt_2_reg_609 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_x_2_reg_621 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_y_3_reg_633 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_s_3_reg_645 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_cnt_3_reg_657 : STD_LOGIC_VECTOR (7 downto 0);
    signal top_read_reg_2021 : STD_LOGIC_VECTOR (63 downto 0);
    signal bottom_read_reg_2026 : STD_LOGIC_VECTOR (63 downto 0);
    signal conv8_fu_689_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv8_reg_2056 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_stride_cast_fu_693_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_stride_cast_reg_2061 : STD_LOGIC_VECTOR (15 downto 0);
    signal conv_x_cast14_fu_697_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal conv_x_cast14_reg_2066 : STD_LOGIC_VECTOR (23 downto 0);
    signal conv_x_cast1_fu_701_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal conv_x_cast1_reg_2071 : STD_LOGIC_VECTOR (25 downto 0);
    signal pool_win_num_x_cast_fu_705_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_win_num_x_cast_reg_2076 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_fu_713_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_reg_2082 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_dim1_cast16_fu_719_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_dim1_cast16_reg_2089 : STD_LOGIC_VECTOR (19 downto 0);
    signal pool_dim1_cast9_fu_723_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_dim1_cast9_reg_2094 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub272_fu_735_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub272_reg_2099 : STD_LOGIC_VECTOR (16 downto 0);
    signal cmp78_fu_741_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp78_reg_2104 : STD_LOGIC_VECTOR (0 downto 0);
    signal padd_offset_cast17_fu_747_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal padd_offset_cast17_reg_2108 : STD_LOGIC_VECTOR (15 downto 0);
    signal padd_offset_cast_fu_751_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal padd_offset_cast_reg_2113 : STD_LOGIC_VECTOR (16 downto 0);
    signal pool_dim3_cast_fu_755_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal pool_dim3_cast_reg_2118 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln240_fu_759_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln240_reg_2123 : STD_LOGIC_VECTOR (29 downto 0);
    signal sub184_fu_767_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub184_reg_2128 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub287_fu_777_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub287_reg_2133 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub291_fu_783_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub291_reg_2138 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln160_fu_789_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln160_reg_2143 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln125_fu_811_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln125_reg_2148 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_fu_815_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_1_reg_2153 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln125_fu_821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_group_cnt_cast_fu_830_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal pool_group_cnt_cast_reg_2166 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal grp_fu_1970_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_2171 : STD_LOGIC_VECTOR (31 downto 0);
    signal pool_y_cnt_cast10_fu_834_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_y_cnt_cast10_reg_2176 : STD_LOGIC_VECTOR (8 downto 0);
    signal mul13_fu_842_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul13_reg_2181 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln236_fu_847_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln236_reg_2186 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln144_fu_858_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln144_reg_2191 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln144_fu_862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state12_pp0_stage0_iter3 : BOOLEAN;
    signal ap_predicate_op467_readreq_state12 : BOOLEAN;
    signal ap_block_state12_io : BOOLEAN;
    signal ap_block_state14_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state16_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state18_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state20_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state22_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state24_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state26_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_state28_pp0_stage0_iter11 : BOOLEAN;
    signal ap_block_state30_pp0_stage0_iter12 : BOOLEAN;
    signal ap_block_state32_pp0_stage0_iter13 : BOOLEAN;
    signal ap_block_state34_pp0_stage0_iter14 : BOOLEAN;
    signal ap_block_state36_pp0_stage0_iter15 : BOOLEAN;
    signal ap_block_state38_pp0_stage0_iter16 : BOOLEAN;
    signal ap_block_state40_pp0_stage0_iter17 : BOOLEAN;
    signal ap_block_state42_pp0_stage0_iter18 : BOOLEAN;
    signal ap_block_state44_pp0_stage0_iter19 : BOOLEAN;
    signal ap_block_state46_pp0_stage0_iter20 : BOOLEAN;
    signal ap_block_state48_pp0_stage0_iter21 : BOOLEAN;
    signal ap_block_state50_pp0_stage0_iter22 : BOOLEAN;
    signal ap_block_state52_pp0_stage0_iter23 : BOOLEAN;
    signal ap_block_state54_pp0_stage0_iter24 : BOOLEAN;
    signal ap_block_state56_pp0_stage0_iter25 : BOOLEAN;
    signal ap_block_state58_pp0_stage0_iter26 : BOOLEAN;
    signal ap_block_state60_pp0_stage0_iter27 : BOOLEAN;
    signal ap_block_state62_pp0_stage0_iter28 : BOOLEAN;
    signal ap_block_state64_pp0_stage0_iter29 : BOOLEAN;
    signal ap_block_state66_pp0_stage0_iter30 : BOOLEAN;
    signal ap_block_state68_pp0_stage0_iter31 : BOOLEAN;
    signal ap_block_state70_pp0_stage0_iter32 : BOOLEAN;
    signal ap_block_state72_pp0_stage0_iter33 : BOOLEAN;
    signal ap_block_state74_pp0_stage0_iter34 : BOOLEAN;
    signal ap_block_state76_pp0_stage0_iter35 : BOOLEAN;
    signal ap_block_state78_pp0_stage0_iter36 : BOOLEAN;
    signal ap_block_state80_pp0_stage0_iter37 : BOOLEAN;
    signal ap_predicate_op606_read_state82 : BOOLEAN;
    signal ap_block_state82_pp0_stage0_iter38 : BOOLEAN;
    signal ap_block_state84_pp0_stage0_iter39 : BOOLEAN;
    signal ap_block_state86_pp0_stage0_iter40 : BOOLEAN;
    signal ap_predicate_op722_writereq_state86 : BOOLEAN;
    signal ap_block_state86_io : BOOLEAN;
    signal ap_block_state88_pp0_stage0_iter41 : BOOLEAN;
    signal ap_block_state90_pp0_stage0_iter42 : BOOLEAN;
    signal ap_block_state92_pp0_stage0_iter43 : BOOLEAN;
    signal ap_block_state94_pp0_stage0_iter44 : BOOLEAN;
    signal ap_block_state96_pp0_stage0_iter45 : BOOLEAN;
    signal ap_block_state98_pp0_stage0_iter46 : BOOLEAN;
    signal ap_block_state100_pp0_stage0_iter47 : BOOLEAN;
    signal ap_block_state102_pp0_stage0_iter48 : BOOLEAN;
    signal ap_block_state104_pp0_stage0_iter49 : BOOLEAN;
    signal ap_block_state106_pp0_stage0_iter50 : BOOLEAN;
    signal ap_block_state108_pp0_stage0_iter51 : BOOLEAN;
    signal ap_block_state110_pp0_stage0_iter52 : BOOLEAN;
    signal ap_block_state112_pp0_stage0_iter53 : BOOLEAN;
    signal ap_block_state114_pp0_stage0_iter54 : BOOLEAN;
    signal ap_block_state116_pp0_stage0_iter55 : BOOLEAN;
    signal ap_block_state118_pp0_stage0_iter56 : BOOLEAN;
    signal ap_block_state120_pp0_stage0_iter57 : BOOLEAN;
    signal ap_block_state122_pp0_stage0_iter58 : BOOLEAN;
    signal ap_block_state124_pp0_stage0_iter59 : BOOLEAN;
    signal ap_block_state126_pp0_stage0_iter60 : BOOLEAN;
    signal ap_block_state128_pp0_stage0_iter61 : BOOLEAN;
    signal ap_block_state130_pp0_stage0_iter62 : BOOLEAN;
    signal ap_block_state132_pp0_stage0_iter63 : BOOLEAN;
    signal ap_block_state134_pp0_stage0_iter64 : BOOLEAN;
    signal ap_block_state136_pp0_stage0_iter65 : BOOLEAN;
    signal ap_block_state138_pp0_stage0_iter66 : BOOLEAN;
    signal ap_block_state140_pp0_stage0_iter67 : BOOLEAN;
    signal ap_block_state142_pp0_stage0_iter68 : BOOLEAN;
    signal ap_block_state144_pp0_stage0_iter69 : BOOLEAN;
    signal ap_block_state146_pp0_stage0_iter70 : BOOLEAN;
    signal ap_block_state148_pp0_stage0_iter71 : BOOLEAN;
    signal ap_block_state150_pp0_stage0_iter72 : BOOLEAN;
    signal ap_block_state152_pp0_stage0_iter73 : BOOLEAN;
    signal ap_block_state154_pp0_stage0_iter74 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln144_reg_2196_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln144_reg_2196_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter45_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter46_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter47_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter48_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter49_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter50_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter51_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter52_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter53_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter54_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter55_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter56_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter57_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter58_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter59_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter60_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter61_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter62_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter63_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter64_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter65_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter66_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter67_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter68_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter69_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter70_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter71_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter72_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln234_reg_2205_pp0_iter73_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln235_1_fu_914_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln235_1_reg_2209 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln235_1_reg_2209_pp0_iter1_reg : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln235_fu_920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter45_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter46_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter47_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter48_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter49_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter50_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter51_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter52_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter53_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter54_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter55_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter56_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter57_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter58_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter59_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter60_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter61_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter62_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter63_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter64_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter65_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter66_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter67_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter68_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter69_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter70_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter71_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter72_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln235_reg_2214_pp0_iter73_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_2218 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_reg_2218_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln237_1_reg_2224 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln237_2_reg_2229 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln238_fu_977_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln238_reg_2234 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln238_reg_2234_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln238_1_fu_981_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln238_1_reg_2239 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln238_1_reg_2239_pp0_iter1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal and_ln239_fu_1001_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter41_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter42_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter43_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter44_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter45_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter46_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter47_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter48_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter49_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter50_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter51_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter52_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter53_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter54_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter55_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter56_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter57_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter58_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter59_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter60_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter61_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter62_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter63_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter64_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter65_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter66_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter67_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter68_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter69_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter70_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter71_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter72_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln239_reg_2244_pp0_iter73_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln240_1_fu_1007_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln240_1_reg_2248 : STD_LOGIC_VECTOR (3 downto 0);
    signal gp_final_cnt_2_fu_1043_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln248_fu_1057_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_1_fu_1065_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal k_1_reg_2263 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal flag_fu_1071_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_reg_2268 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_fu_1089_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln149_reg_2273_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp52_reg_2282_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_fu_1140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp55_reg_2287_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_fu_1145_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp134_reg_2292_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_fu_1151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter37_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp101_reg_2296_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal win_item_cnt_2_fu_1177_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_y_2_fu_1215_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_x_3_fu_1229_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_s_4_fu_1243_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln240_3_fu_1302_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter14_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter15_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter16_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter17_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter18_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter19_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter20_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter21_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter22_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter23_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter24_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter25_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter26_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter27_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter28_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter29_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter30_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter31_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter32_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter33_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter34_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter35_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter36_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter37_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln240_3_reg_2320_pp0_iter38_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_win_cnt_2_fu_1341_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_win_cnt_2_reg_2330 : STD_LOGIC_VECTOR (15 downto 0);
    signal item_loop_cnt_2_fu_1355_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal item_loop_cnt_2_reg_2335 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_fu_1373_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter11_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter12_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter13_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter14_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter15_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter16_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter17_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter18_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter19_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter20_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter21_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter22_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter23_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter24_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter25_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter26_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter27_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter28_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter29_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter30_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter31_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter32_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter33_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter34_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter35_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter36_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter37_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_reg_2340_pp0_iter38_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter11_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter12_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter13_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter14_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter15_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter16_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter17_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter18_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter19_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter20_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter21_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter22_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter23_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter24_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter25_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter26_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter27_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter28_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter29_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter30_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter31_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter32_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter33_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter34_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter35_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter36_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter37_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_addr_reg_2345_pp0_iter38_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter11_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter12_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter13_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter14_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter15_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter16_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter17_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter18_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter19_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter20_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter21_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter22_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter23_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter24_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter25_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter26_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter27_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter28_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter29_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter30_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter31_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter32_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter33_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter34_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter35_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter36_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter37_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_reg_2351_pp0_iter38_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_fu_1394_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter2_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter3_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter4_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter5_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter6_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter7_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter8_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter9_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter10_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter11_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter12_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter13_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter14_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter15_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter16_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter17_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter18_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter19_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter20_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter21_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter22_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter23_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter24_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter25_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter26_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter27_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter28_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter29_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter30_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter31_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter32_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter33_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter34_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter35_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter36_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter37_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter38_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln185_reg_2356_pp0_iter39_reg : STD_LOGIC_VECTOR (2 downto 0);
    signal pool_final_addr_reg_2361 : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter2_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter3_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter4_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter5_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter6_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter7_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter8_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter9_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter10_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter11_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter12_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter13_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter14_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter15_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter16_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter17_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter18_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter19_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter20_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter21_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter22_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter23_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter24_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter25_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter26_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter27_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter28_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter29_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter30_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter31_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter32_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter33_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter34_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter35_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter36_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter37_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_addr_reg_2361_pp0_iter38_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal cmp37_fu_1432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter11_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter12_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter13_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter14_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter15_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter16_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter17_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter18_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter19_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter20_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter21_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter22_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter23_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter24_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter25_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter26_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter27_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter28_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter29_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter30_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter31_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter32_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter33_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter34_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter35_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter36_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter38_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp37_reg_2371_pp0_iter39_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add43_fu_1449_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add43_reg_2375 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln238_fu_1478_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln238_reg_2380 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp47_fu_1485_p2 : STD_LOGIC_VECTOR (29 downto 0);
    attribute use_dsp48 : string;
    attribute use_dsp48 of tmp47_fu_1485_p2 : signal is "no";
    signal tmp47_reg_2385 : STD_LOGIC_VECTOR (29 downto 0);
    signal gmem0_addr_reg_2390 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem0_addr_1_reg_2396 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402 : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter3_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter4_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter5_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter6_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter7_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter8_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter9_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter10_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter11_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter12_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter13_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter14_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter15_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter16_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter17_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter18_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter19_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter20_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter21_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter22_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter23_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter24_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter25_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter26_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter27_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter28_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter29_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter30_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter31_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter32_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter33_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter34_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter35_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter36_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter37_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter38_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem1_addr_reg_2402_pp0_iter39_reg : STD_LOGIC_VECTOR (63 downto 0);
    signal shift_reg_5_fu_1583_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_reg_5_reg_2408 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln163_fu_1593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln163_reg_2414 : STD_LOGIC_VECTOR (0 downto 0);
    signal max_value_15_fu_1632_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_15_reg_2421 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_14_fu_1673_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_14_reg_2427 : STD_LOGIC_VECTOR (7 downto 0);
    signal gmem0_addr_1_read_reg_2436 : STD_LOGIC_VECTOR (15 downto 0);
    signal row_reg0_addr_1_reg_2441 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg1_addr_1_reg_2447 : STD_LOGIC_VECTOR (2 downto 0);
    signal temp_reg2_2_fu_1779_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_reg2_2_reg_2452 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_16_fu_1798_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_16_reg_2458 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_17_fu_1818_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_17_reg_2465 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_final_addr_1_reg_2471 : STD_LOGIC_VECTOR (3 downto 0);
    signal row_reg0_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_reg0_load_1_reg_2476 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_enable_reg_pp0_iter39 : STD_LOGIC := '0';
    signal max_value_18_fu_1873_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_18_reg_2482 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_final_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_final_load_reg_2495 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_group_cnt_2_fu_1948_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state156 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state156 : signal is "none";
    signal pool_y_cnt_2_fu_1962_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter11 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter12 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter13 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter14 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter15 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter16 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter17 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter18 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter19 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter20 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter21 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter22 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter23 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter24 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter25 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter26 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter27 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter28 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter29 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter30 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter31 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter32 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter33 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter34 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter35 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter36 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter37 : STD_LOGIC := '0';
    signal ap_condition_pp0_exit_iter39_state84 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter41 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter42 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter43 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter44 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter45 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter46 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter47 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter48 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter49 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter50 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter51 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter52 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter53 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter54 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter55 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter56 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter57 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter58 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter59 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter60 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter61 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter62 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter63 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter64 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter65 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter66 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter67 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter68 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter69 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter70 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter71 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter72 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter73 : STD_LOGIC := '0';
    signal row_reg0_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_ce0 : STD_LOGIC;
    signal row_reg0_we0 : STD_LOGIC;
    signal row_reg0_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_reg0_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal row_reg0_ce1 : STD_LOGIC;
    signal row_reg0_we1 : STD_LOGIC;
    signal row_reg0_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_reg1_ce0 : STD_LOGIC;
    signal row_reg1_we0 : STD_LOGIC;
    signal row_reg1_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_reg1_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_reg1_ce1 : STD_LOGIC;
    signal row_reg1_we1 : STD_LOGIC;
    signal row_reg1_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal row_reg1_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_final_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_ce0 : STD_LOGIC;
    signal pool_final_we0 : STD_LOGIC;
    signal pool_final_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_final_address1 : STD_LOGIC_VECTOR (3 downto 0);
    signal pool_final_ce1 : STD_LOGIC;
    signal pool_final_we1 : STD_LOGIC;
    signal pool_final_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_reg_454 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal pool_y_cnt_reg_465 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_group_cnt_reg_477 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_k_phi_fu_493_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_lane_cnt_phi_fu_505_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_gp_final_cnt_phi_fu_517_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_pool_win_cnt_phi_fu_529_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_item_loop_cnt_phi_fu_541_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_win_item_cnt_phi_fu_553_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_win_item_s_phi_fu_565_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_win_item_y_phi_fu_577_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_win_item_x_phi_fu_589_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_gp_final_cnt_3_reg_597 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_lane_cnt_2_reg_609 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_win_item_x_2_reg_621 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_win_item_x_2_reg_621 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_win_item_y_3_reg_633 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_win_item_y_3_reg_633 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_win_item_s_3_reg_645 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_win_item_s_3_reg_645 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_win_item_cnt_3_reg_657 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657 : STD_LOGIC_VECTOR (7 downto 0);
    signal idxprom139_fu_1363_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln185_1_fu_1406_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln179_fu_1690_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln195_fu_1839_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln240_1_fu_1880_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln160_fu_1516_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln160_1_fu_1542_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln240_1_fu_1572_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal shift_reg_fu_206 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_reg_1_fu_210 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_reg_2_fu_214 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_reg_3_fu_218 : STD_LOGIC_VECTOR (7 downto 0);
    signal shift_reg_8_fu_1760_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_fu_1707_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_5_fu_1726_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_10_fu_1855_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_12_fu_1895_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_size_cast_fu_709_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal item_loop_bound_cast_fu_731_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal win_size_x_cast_fu_763_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal pool_group_cast_fu_773_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal pool_dim1_cast_fu_727_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln160_fu_793_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln160_fu_797_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln160_1_fu_803_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul13_fu_842_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal pool_y_cnt_cast_fu_838_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal mul13_fu_842_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul244_fu_853_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul244_fu_853_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal mul244_fu_853_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1_fu_867_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal icmp_ln234_fu_883_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln234_1_fu_889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln235_fu_900_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln235_fu_904_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln235_fu_910_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln146_fu_875_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal zext_ln236_fu_925_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal global_z_fu_929_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln237_fu_934_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln237_fu_938_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln237_1_fu_951_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln239_1_fu_990_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln239_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln239_fu_995_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln244_fu_1011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln244_1_fu_1017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln247_fu_1029_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln244_fu_1023_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gp_final_cnt_1_fu_1035_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal lane_cnt_1_fu_1051_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln149_fu_1075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln149_1_fu_1084_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln151_2_fu_1095_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln151_fu_1099_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln152_fu_1104_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_y_cast_fu_1122_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_fu_1126_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal win_item_cnt_1_fu_1110_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_ln210_fu_1157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal win_item_s_1_fu_1163_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_y_cast15_fu_1118_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln218_fu_1185_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln218_1_fu_1190_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln221_fu_1201_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln218_fu_1195_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal win_item_y_1_fu_1207_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal win_item_x_1_fu_1223_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln227_fu_1237_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal win_item_s_2_fu_1169_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln237_fu_1251_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln237_2_fu_1257_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln237_1_fu_1254_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal xor_ln240_fu_1270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1276_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln240_fu_1284_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln240_2_fu_1288_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_12_cast_fu_1294_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal global_index_z_group_fu_1263_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln149_1_fu_1080_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln254_fu_1311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln254_1_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln257_fu_1327_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln254_fu_1321_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_win_cnt_1_fu_1333_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal item_loop_cnt_1_fu_1349_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_1377_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln185_fu_1384_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal win_item_s_cast2_fu_1369_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln185_fu_1388_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_1398_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1975_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln146_1_fu_1411_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal zext_ln151_1_fu_1422_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add35_fu_1426_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1981_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln151_fu_1437_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp6_fu_1444_p2 : STD_LOGIC_VECTOR (31 downto 0);
    attribute use_dsp48 of tmp6_fu_1444_p2 : signal is "no";
    signal tmp1_cast_fu_1441_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_and_t_cast_fu_1458_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln238_fu_1465_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_9_fu_1471_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1989_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal sext_ln235_1_fu_1455_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal shl_ln2_fu_1490_p3 : STD_LOGIC_VECTOR (32 downto 0);
    signal zext_ln160_1_fu_1497_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln160_fu_1501_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln160_1_fu_1506_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal add_ln160_1_fu_1526_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln160_3_fu_1532_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal tmp5_fu_1555_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln240_3_fu_1552_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln240_fu_1562_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln240_fu_1568_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal temp_reg1_fu_1604_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_reg0_1_fu_1597_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln52_2_fu_1620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_2_fu_1626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_fu_1641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_fu_1647_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_reg2_fu_1612_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal max_value_13_fu_1653_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln52_1_fu_1661_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_1_fu_1667_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln179_fu_1685_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln52_3_fu_1696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_3_fu_1701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_5_fu_1715_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_5_fu_1720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_4_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_4_fu_1739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln160_fu_1756_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal temp_reg1_2_fu_1772_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal temp_reg0_fu_1765_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln52_8_fu_1786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_8_fu_1792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_6_fu_1806_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_6_fu_1812_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_cast_fu_1826_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal or_ln195_fu_1833_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln52_9_fu_1844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_9_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_7_fu_1863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_7_fu_1867_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_11_fu_1884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_11_fu_1889_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln52_10_fu_1903_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln52_10_fu_1907_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln266_fu_1920_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln266_1_fu_1924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln269_fu_1934_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln266_fu_1928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal pool_group_cnt_1_fu_1940_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal pool_y_cnt_1_fu_1956_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1970_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1970_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1975_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1975_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1981_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1981_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1981_p2 : STD_LOGIC_VECTOR (25 downto 0);
    signal grp_fu_1989_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1989_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1989_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_1975_ce : STD_LOGIC;
    signal grp_fu_1981_ce : STD_LOGIC;
    signal grp_fu_1989_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_ext_blocking_cur_n : STD_LOGIC;
    signal ap_ext_blocking_n : STD_LOGIC;
    signal ap_str_blocking_n : STD_LOGIC;
    signal ap_int_blocking_n : STD_LOGIC;
    signal ap_ext_blocking_n_reg : STD_LOGIC;
    signal ap_str_blocking_n_reg : STD_LOGIC;
    signal ap_int_blocking_n_reg : STD_LOGIC;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_1970_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1975_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1981_p00 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_1981_p20 : STD_LOGIC_VECTOR (26 downto 0);
    signal grp_fu_1989_p00 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_condition_3024 : BOOLEAN;
    signal ap_condition_1096 : BOOLEAN;
    signal ap_condition_3436 : BOOLEAN;
    signal ap_condition_3440 : BOOLEAN;
    signal ap_condition_3448 : BOOLEAN;
    signal ap_condition_3457 : BOOLEAN;
    signal ap_condition_3465 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;

    component maxPool_mul_8ns_8ns_16_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        dout : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component maxPool_mul_mul_16ns_16ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component maxPool_mul_mul_16ns_8ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component maxPool_mac_muladd_16ns_8ns_26ns_27_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (25 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (26 downto 0) );
    end component;


    component maxPool_mac_muladd_16ns_16ns_16ns_30_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (29 downto 0) );
    end component;


    component maxPool_row_reg0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component maxPool_row_reg1 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component maxPool_pool_final IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component maxPool_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        conv_x : OUT STD_LOGIC_VECTOR (7 downto 0);
        conv_xy : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_dim1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        pool_dim3 : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_dim1x2 : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_size : OUT STD_LOGIC_VECTOR (7 downto 0);
        pool_stride : OUT STD_LOGIC_VECTOR (7 downto 0);
        padd_offset : OUT STD_LOGIC_VECTOR (7 downto 0);
        pool_times : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_group : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_y_bound : OUT STD_LOGIC_VECTOR (15 downto 0);
        item_loop_bound : OUT STD_LOGIC_VECTOR (15 downto 0);
        load_data_bound : OUT STD_LOGIC_VECTOR (15 downto 0);
        write_back_bound : OUT STD_LOGIC_VECTOR (15 downto 0);
        pool_win_num_x : OUT STD_LOGIC_VECTOR (7 downto 0);
        win_size_x : OUT STD_LOGIC_VECTOR (7 downto 0);
        bottom : OUT STD_LOGIC_VECTOR (63 downto 0);
        top : OUT STD_LOGIC_VECTOR (63 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        event_start : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_continue : OUT STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component maxPool_gmem0_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component maxPool_gmem1_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    control_s_axi_U : component maxPool_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        conv_x => conv_x,
        conv_xy => conv_xy,
        pool_dim1 => pool_dim1,
        pool_dim3 => pool_dim3,
        pool_dim1x2 => pool_dim1x2,
        pool_size => pool_size,
        pool_stride => pool_stride,
        padd_offset => padd_offset,
        pool_times => pool_times,
        pool_group => pool_group,
        pool_y_bound => pool_y_bound,
        item_loop_bound => item_loop_bound,
        load_data_bound => load_data_bound,
        write_back_bound => write_back_bound,
        pool_win_num_x => pool_win_num_x,
        win_size_x => win_size_x,
        bottom => bottom,
        top => top,
        ap_start => ap_start,
        interrupt => interrupt,
        event_start => event_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_continue => ap_continue,
        ap_idle => ap_idle);

    gmem0_m_axi_U : component maxPool_gmem0_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 16,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM0_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM0_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM0_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM0_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM0_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM0_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM0_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM0_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM0_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM0_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM0_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem0_AWVALID,
        AWREADY => m_axi_gmem0_AWREADY,
        AWADDR => m_axi_gmem0_AWADDR,
        AWID => m_axi_gmem0_AWID,
        AWLEN => m_axi_gmem0_AWLEN,
        AWSIZE => m_axi_gmem0_AWSIZE,
        AWBURST => m_axi_gmem0_AWBURST,
        AWLOCK => m_axi_gmem0_AWLOCK,
        AWCACHE => m_axi_gmem0_AWCACHE,
        AWPROT => m_axi_gmem0_AWPROT,
        AWQOS => m_axi_gmem0_AWQOS,
        AWREGION => m_axi_gmem0_AWREGION,
        AWUSER => m_axi_gmem0_AWUSER,
        WVALID => m_axi_gmem0_WVALID,
        WREADY => m_axi_gmem0_WREADY,
        WDATA => m_axi_gmem0_WDATA,
        WSTRB => m_axi_gmem0_WSTRB,
        WLAST => m_axi_gmem0_WLAST,
        WID => m_axi_gmem0_WID,
        WUSER => m_axi_gmem0_WUSER,
        ARVALID => m_axi_gmem0_ARVALID,
        ARREADY => m_axi_gmem0_ARREADY,
        ARADDR => m_axi_gmem0_ARADDR,
        ARID => m_axi_gmem0_ARID,
        ARLEN => m_axi_gmem0_ARLEN,
        ARSIZE => m_axi_gmem0_ARSIZE,
        ARBURST => m_axi_gmem0_ARBURST,
        ARLOCK => m_axi_gmem0_ARLOCK,
        ARCACHE => m_axi_gmem0_ARCACHE,
        ARPROT => m_axi_gmem0_ARPROT,
        ARQOS => m_axi_gmem0_ARQOS,
        ARREGION => m_axi_gmem0_ARREGION,
        ARUSER => m_axi_gmem0_ARUSER,
        RVALID => m_axi_gmem0_RVALID,
        RREADY => m_axi_gmem0_RREADY,
        RDATA => m_axi_gmem0_RDATA,
        RLAST => m_axi_gmem0_RLAST,
        RID => m_axi_gmem0_RID,
        RUSER => m_axi_gmem0_RUSER,
        RRESP => m_axi_gmem0_RRESP,
        BVALID => m_axi_gmem0_BVALID,
        BREADY => m_axi_gmem0_BREADY,
        BRESP => m_axi_gmem0_BRESP,
        BID => m_axi_gmem0_BID,
        BUSER => m_axi_gmem0_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem0_ARVALID,
        I_ARREADY => gmem0_ARREADY,
        I_ARADDR => gmem0_ARADDR,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_1,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem0_RVALID,
        I_RREADY => gmem0_RREADY,
        I_RDATA => gmem0_RDATA,
        I_RID => gmem0_RID,
        I_RUSER => gmem0_RUSER,
        I_RRESP => gmem0_RRESP,
        I_RLAST => gmem0_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem0_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem0_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_0,
        I_BVALID => gmem0_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem0_BRESP,
        I_BID => gmem0_BID,
        I_BUSER => gmem0_BUSER);

    gmem1_m_axi_U : component maxPool_gmem1_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_DW => 8,
        USER_AW => 64,
        USER_MAXREQS => 69,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM1_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM1_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM1_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM1_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM1_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM1_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM1_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM1_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM1_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM1_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM1_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem1_AWVALID,
        AWREADY => m_axi_gmem1_AWREADY,
        AWADDR => m_axi_gmem1_AWADDR,
        AWID => m_axi_gmem1_AWID,
        AWLEN => m_axi_gmem1_AWLEN,
        AWSIZE => m_axi_gmem1_AWSIZE,
        AWBURST => m_axi_gmem1_AWBURST,
        AWLOCK => m_axi_gmem1_AWLOCK,
        AWCACHE => m_axi_gmem1_AWCACHE,
        AWPROT => m_axi_gmem1_AWPROT,
        AWQOS => m_axi_gmem1_AWQOS,
        AWREGION => m_axi_gmem1_AWREGION,
        AWUSER => m_axi_gmem1_AWUSER,
        WVALID => m_axi_gmem1_WVALID,
        WREADY => m_axi_gmem1_WREADY,
        WDATA => m_axi_gmem1_WDATA,
        WSTRB => m_axi_gmem1_WSTRB,
        WLAST => m_axi_gmem1_WLAST,
        WID => m_axi_gmem1_WID,
        WUSER => m_axi_gmem1_WUSER,
        ARVALID => m_axi_gmem1_ARVALID,
        ARREADY => m_axi_gmem1_ARREADY,
        ARADDR => m_axi_gmem1_ARADDR,
        ARID => m_axi_gmem1_ARID,
        ARLEN => m_axi_gmem1_ARLEN,
        ARSIZE => m_axi_gmem1_ARSIZE,
        ARBURST => m_axi_gmem1_ARBURST,
        ARLOCK => m_axi_gmem1_ARLOCK,
        ARCACHE => m_axi_gmem1_ARCACHE,
        ARPROT => m_axi_gmem1_ARPROT,
        ARQOS => m_axi_gmem1_ARQOS,
        ARREGION => m_axi_gmem1_ARREGION,
        ARUSER => m_axi_gmem1_ARUSER,
        RVALID => m_axi_gmem1_RVALID,
        RREADY => m_axi_gmem1_RREADY,
        RDATA => m_axi_gmem1_RDATA,
        RLAST => m_axi_gmem1_RLAST,
        RID => m_axi_gmem1_RID,
        RUSER => m_axi_gmem1_RUSER,
        RRESP => m_axi_gmem1_RRESP,
        BVALID => m_axi_gmem1_BVALID,
        BREADY => m_axi_gmem1_BREADY,
        BRESP => m_axi_gmem1_BRESP,
        BID => m_axi_gmem1_BID,
        BUSER => m_axi_gmem1_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => ap_const_logic_0,
        I_ARREADY => gmem1_ARREADY,
        I_ARADDR => ap_const_lv64_0,
        I_ARID => ap_const_lv1_0,
        I_ARLEN => ap_const_lv32_0,
        I_ARSIZE => ap_const_lv3_0,
        I_ARLOCK => ap_const_lv2_0,
        I_ARCACHE => ap_const_lv4_0,
        I_ARQOS => ap_const_lv4_0,
        I_ARPROT => ap_const_lv3_0,
        I_ARUSER => ap_const_lv1_0,
        I_ARBURST => ap_const_lv2_0,
        I_ARREGION => ap_const_lv4_0,
        I_RVALID => gmem1_RVALID,
        I_RREADY => ap_const_logic_0,
        I_RDATA => gmem1_RDATA,
        I_RID => gmem1_RID,
        I_RUSER => gmem1_RUSER,
        I_RRESP => gmem1_RRESP,
        I_RLAST => gmem1_RLAST,
        I_AWVALID => gmem1_AWVALID,
        I_AWREADY => gmem1_AWREADY,
        I_AWADDR => gmem1_addr_reg_2402_pp0_iter39_reg,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_1,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => gmem1_WVALID,
        I_WREADY => gmem1_WREADY,
        I_WDATA => pool_final_load_reg_2495,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv1_1,
        I_BVALID => gmem1_BVALID,
        I_BREADY => gmem1_BREADY,
        I_BRESP => gmem1_BRESP,
        I_BID => gmem1_BID,
        I_BUSER => gmem1_BUSER);

    row_reg0_U : component maxPool_row_reg0
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => row_reg0_address0,
        ce0 => row_reg0_ce0,
        we0 => row_reg0_we0,
        d0 => row_reg0_d0,
        address1 => row_reg0_address1,
        ce1 => row_reg0_ce1,
        we1 => row_reg0_we1,
        d1 => row_reg0_d1,
        q1 => row_reg0_q1);

    row_reg1_U : component maxPool_row_reg1
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => row_reg1_addr_1_reg_2447,
        ce0 => row_reg1_ce0,
        we0 => row_reg1_we0,
        d0 => row_reg1_d0,
        q0 => row_reg1_q0,
        address1 => row_reg1_addr_reg_2351_pp0_iter38_reg,
        ce1 => row_reg1_ce1,
        we1 => row_reg1_we1,
        d1 => row_reg1_d1,
        q1 => row_reg1_q1);

    pool_final_U : component maxPool_pool_final
    generic map (
        DataWidth => 8,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => pool_final_address0,
        ce0 => pool_final_ce0,
        we0 => pool_final_we0,
        d0 => pool_final_d0,
        address1 => pool_final_address1,
        ce1 => pool_final_ce1,
        we1 => pool_final_we1,
        d1 => pool_final_d1,
        q1 => pool_final_q1);

    mul_8ns_8ns_16_1_1_U1 : component maxPool_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul13_fu_842_p0,
        din1 => mul13_fu_842_p1,
        dout => mul13_fu_842_p2);

    mul_8ns_8ns_16_1_1_U2 : component maxPool_mul_8ns_8ns_16_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        dout_WIDTH => 16)
    port map (
        din0 => mul244_fu_853_p0,
        din1 => mul244_fu_853_p1,
        dout => mul244_fu_853_p2);

    mul_mul_16ns_16ns_32_4_1_U3 : component maxPool_mul_mul_16ns_16ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1970_p0,
        din1 => grp_fu_1970_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1970_p2);

    mul_mul_16ns_8ns_24_4_1_U4 : component maxPool_mul_mul_16ns_8ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1975_p0,
        din1 => grp_fu_1975_p1,
        ce => grp_fu_1975_ce,
        dout => grp_fu_1975_p2);

    mac_muladd_16ns_8ns_26ns_27_4_1_U5 : component maxPool_mac_muladd_16ns_8ns_26ns_27_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 8,
        din2_WIDTH => 26,
        dout_WIDTH => 27)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1981_p0,
        din1 => grp_fu_1981_p1,
        din2 => grp_fu_1981_p2,
        ce => grp_fu_1981_ce,
        dout => grp_fu_1981_p3);

    mac_muladd_16ns_16ns_16ns_30_4_1_U6 : component maxPool_mac_muladd_16ns_16ns_16ns_30_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 16,
        dout_WIDTH => 30)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_1989_p0,
        din1 => grp_fu_1989_p1,
        din2 => grp_fu_1989_p2,
        ce => grp_fu_1989_ce,
        dout => grp_fu_1989_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln125_fu_821_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter11_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter11 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter12_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter12 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter13_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter13 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter14_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter14 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter15_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter15 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter16_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter16 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter17_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter17 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter18_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter18 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter19_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter19 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter20_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter20 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter21_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter21 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter22_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter22 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter23_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter23 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter24_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter24 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter25_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter25 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter26_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter26 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter27_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter27 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter28_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter28 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter29_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter29 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter30_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter30 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter31_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter31 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter32_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter32 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter33_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter33 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter34_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter34 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter35_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter35 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter36_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter36 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter37_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter37 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter38_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter38 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter39_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter39 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter40_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter40 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter39_state84)) then 
                        ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter38;
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter41_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter41 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter42_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter42 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter43_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter43 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter44_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter44 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter45_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter45 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter46_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter46 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter47_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter47 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter48_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter48 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter49_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter49 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter50_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter50 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter50 <= ap_enable_reg_pp0_iter49;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter51_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter51 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter51 <= ap_enable_reg_pp0_iter50;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter52_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter52 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter52 <= ap_enable_reg_pp0_iter51;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter53_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter53 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter53 <= ap_enable_reg_pp0_iter52;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter54_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter54 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter54 <= ap_enable_reg_pp0_iter53;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter55_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter55 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter55 <= ap_enable_reg_pp0_iter54;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter56_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter56 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter56 <= ap_enable_reg_pp0_iter55;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter57_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter57 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter57 <= ap_enable_reg_pp0_iter56;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter58_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter58 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter58 <= ap_enable_reg_pp0_iter57;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter59_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter59 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter59 <= ap_enable_reg_pp0_iter58;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter60_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter60 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter60 <= ap_enable_reg_pp0_iter59;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter61_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter61 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter61 <= ap_enable_reg_pp0_iter60;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter62_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter62 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter62 <= ap_enable_reg_pp0_iter61;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter63_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter63 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter63 <= ap_enable_reg_pp0_iter62;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter64_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter64 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter64 <= ap_enable_reg_pp0_iter63;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter65_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter65 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter65 <= ap_enable_reg_pp0_iter64;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter66_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter66 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter66 <= ap_enable_reg_pp0_iter65;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter67_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter67 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter67 <= ap_enable_reg_pp0_iter66;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter68_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter68 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter68 <= ap_enable_reg_pp0_iter67;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter69_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter69 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter69 <= ap_enable_reg_pp0_iter68;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter70_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter70 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter70 <= ap_enable_reg_pp0_iter69;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter71_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter71 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter71 <= ap_enable_reg_pp0_iter70;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter72_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter72 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter72 <= ap_enable_reg_pp0_iter71;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter73_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter73 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter73 <= ap_enable_reg_pp0_iter72;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter74_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter74 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter74 <= ap_enable_reg_pp0_iter73;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_enable_reg_pp0_iter74 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_ext_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ext_blocking_n_reg <= ap_ext_blocking_n;
        end if;
    end process;

    ap_int_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    ap_phi_reg_pp0_iter0_gp_final_cnt_3_reg_597_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_3024)) then
                if ((ap_const_lv1_0 = and_ln234_fu_894_p2)) then 
                    ap_phi_reg_pp0_iter0_gp_final_cnt_3_reg_597 <= ap_phi_mux_gp_final_cnt_phi_fu_517_p4;
                elsif ((ap_const_lv1_1 = and_ln234_fu_894_p2)) then 
                    ap_phi_reg_pp0_iter0_gp_final_cnt_3_reg_597 <= gp_final_cnt_2_fu_1043_p3;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter0_lane_cnt_2_reg_609_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_3024)) then
                if ((ap_const_lv1_0 = and_ln234_fu_894_p2)) then 
                    ap_phi_reg_pp0_iter0_lane_cnt_2_reg_609 <= ap_phi_mux_lane_cnt_phi_fu_505_p4;
                elsif ((ap_const_lv1_1 = and_ln234_fu_894_p2)) then 
                    ap_phi_reg_pp0_iter0_lane_cnt_2_reg_609 <= select_ln248_fu_1057_p3;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1096)) then
                if (((ap_const_lv1_0 = and_ln149_fu_1089_p2) and (icmp_ln144_reg_2196 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657 <= ap_phi_mux_win_item_cnt_phi_fu_553_p4;
                elsif (((ap_const_lv1_1 = and_ln149_fu_1089_p2) and (icmp_ln144_reg_2196 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657 <= win_item_cnt_2_fu_1177_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657 <= ap_phi_reg_pp0_iter0_win_item_cnt_3_reg_657;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_win_item_s_3_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1096)) then
                if (((ap_const_lv1_0 = and_ln149_fu_1089_p2) and (icmp_ln144_reg_2196 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_win_item_s_3_reg_645 <= ap_phi_mux_win_item_s_phi_fu_565_p4;
                elsif (((ap_const_lv1_1 = and_ln149_fu_1089_p2) and (icmp_ln144_reg_2196 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_win_item_s_3_reg_645 <= win_item_s_4_fu_1243_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_win_item_s_3_reg_645 <= ap_phi_reg_pp0_iter0_win_item_s_3_reg_645;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_win_item_x_2_reg_621_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1096)) then
                if (((ap_const_lv1_0 = and_ln149_fu_1089_p2) and (icmp_ln144_reg_2196 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_win_item_x_2_reg_621 <= ap_phi_mux_win_item_x_phi_fu_589_p4;
                elsif (((ap_const_lv1_1 = and_ln149_fu_1089_p2) and (icmp_ln144_reg_2196 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_win_item_x_2_reg_621 <= win_item_x_3_fu_1229_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_win_item_x_2_reg_621 <= ap_phi_reg_pp0_iter0_win_item_x_2_reg_621;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_win_item_y_3_reg_633_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_1096)) then
                if (((ap_const_lv1_0 = and_ln149_fu_1089_p2) and (icmp_ln144_reg_2196 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_win_item_y_3_reg_633 <= ap_phi_mux_win_item_y_phi_fu_577_p4;
                elsif (((ap_const_lv1_1 = and_ln149_fu_1089_p2) and (icmp_ln144_reg_2196 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_win_item_y_3_reg_633 <= win_item_y_2_fu_1215_p3;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_win_item_y_3_reg_633 <= ap_phi_reg_pp0_iter0_win_item_y_3_reg_633;
                end if;
            end if; 
        end if;
    end process;

    ap_rst_n_inv_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_n_inv <= ap_rst_reg_1;
        end if;
    end process;

    ap_rst_reg_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_rst_reg_1 <= ap_rst_reg_2;
        end if;
    end process;

    ap_rst_reg_2_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
                        ap_rst_reg_2 <= not(ap_rst_n);
        end if;
    end process;

    ap_str_blocking_n_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;

    gp_final_cnt_reg_513_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                gp_final_cnt_reg_513 <= gp_final_cnt_3_reg_597;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                gp_final_cnt_reg_513 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    i_reg_454_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
                i_reg_454 <= i_1_reg_2153;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_reg_454 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    item_loop_cnt_reg_537_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                item_loop_cnt_reg_537 <= item_loop_cnt_2_reg_2335;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                item_loop_cnt_reg_537 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    k_reg_489_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                k_reg_489 <= k_1_reg_2263;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                k_reg_489 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    lane_cnt_reg_501_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                lane_cnt_reg_501 <= lane_cnt_2_reg_609;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                lane_cnt_reg_501 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    pool_group_cnt_reg_477_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
                pool_group_cnt_reg_477 <= pool_group_cnt_2_fu_1948_p3;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pool_group_cnt_reg_477 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    pool_win_cnt_reg_525_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                pool_win_cnt_reg_525 <= pool_win_cnt_2_reg_2330;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                pool_win_cnt_reg_525 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    pool_y_cnt_reg_465_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state156)) then 
                pool_y_cnt_reg_465 <= pool_y_cnt_2_fu_1962_p3;
            elsif ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                pool_y_cnt_reg_465 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    win_item_cnt_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                win_item_cnt_reg_549 <= win_item_cnt_3_reg_657;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                win_item_cnt_reg_549 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    win_item_s_reg_561_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                win_item_s_reg_561 <= win_item_s_3_reg_645;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                win_item_s_reg_561 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    win_item_x_reg_585_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                win_item_x_reg_585 <= win_item_x_2_reg_621;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                win_item_x_reg_585 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    win_item_y_reg_573_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
                win_item_y_reg_573 <= win_item_y_3_reg_633;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                win_item_y_reg_573 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add43_reg_2375 <= add43_fu_1449_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_fu_862_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln234_fu_894_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln235_1_reg_2209 <= add_ln235_1_fu_914_p2;
                icmp_ln235_reg_2214 <= icmp_ln235_fu_920_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln235_1_reg_2209_pp0_iter1_reg <= add_ln235_1_reg_2209;
                and_ln234_reg_2205_pp0_iter10_reg <= and_ln234_reg_2205_pp0_iter9_reg;
                and_ln234_reg_2205_pp0_iter11_reg <= and_ln234_reg_2205_pp0_iter10_reg;
                and_ln234_reg_2205_pp0_iter12_reg <= and_ln234_reg_2205_pp0_iter11_reg;
                and_ln234_reg_2205_pp0_iter13_reg <= and_ln234_reg_2205_pp0_iter12_reg;
                and_ln234_reg_2205_pp0_iter14_reg <= and_ln234_reg_2205_pp0_iter13_reg;
                and_ln234_reg_2205_pp0_iter15_reg <= and_ln234_reg_2205_pp0_iter14_reg;
                and_ln234_reg_2205_pp0_iter16_reg <= and_ln234_reg_2205_pp0_iter15_reg;
                and_ln234_reg_2205_pp0_iter17_reg <= and_ln234_reg_2205_pp0_iter16_reg;
                and_ln234_reg_2205_pp0_iter18_reg <= and_ln234_reg_2205_pp0_iter17_reg;
                and_ln234_reg_2205_pp0_iter19_reg <= and_ln234_reg_2205_pp0_iter18_reg;
                and_ln234_reg_2205_pp0_iter1_reg <= and_ln234_reg_2205;
                and_ln234_reg_2205_pp0_iter20_reg <= and_ln234_reg_2205_pp0_iter19_reg;
                and_ln234_reg_2205_pp0_iter21_reg <= and_ln234_reg_2205_pp0_iter20_reg;
                and_ln234_reg_2205_pp0_iter22_reg <= and_ln234_reg_2205_pp0_iter21_reg;
                and_ln234_reg_2205_pp0_iter23_reg <= and_ln234_reg_2205_pp0_iter22_reg;
                and_ln234_reg_2205_pp0_iter24_reg <= and_ln234_reg_2205_pp0_iter23_reg;
                and_ln234_reg_2205_pp0_iter25_reg <= and_ln234_reg_2205_pp0_iter24_reg;
                and_ln234_reg_2205_pp0_iter26_reg <= and_ln234_reg_2205_pp0_iter25_reg;
                and_ln234_reg_2205_pp0_iter27_reg <= and_ln234_reg_2205_pp0_iter26_reg;
                and_ln234_reg_2205_pp0_iter28_reg <= and_ln234_reg_2205_pp0_iter27_reg;
                and_ln234_reg_2205_pp0_iter29_reg <= and_ln234_reg_2205_pp0_iter28_reg;
                and_ln234_reg_2205_pp0_iter2_reg <= and_ln234_reg_2205_pp0_iter1_reg;
                and_ln234_reg_2205_pp0_iter30_reg <= and_ln234_reg_2205_pp0_iter29_reg;
                and_ln234_reg_2205_pp0_iter31_reg <= and_ln234_reg_2205_pp0_iter30_reg;
                and_ln234_reg_2205_pp0_iter32_reg <= and_ln234_reg_2205_pp0_iter31_reg;
                and_ln234_reg_2205_pp0_iter33_reg <= and_ln234_reg_2205_pp0_iter32_reg;
                and_ln234_reg_2205_pp0_iter34_reg <= and_ln234_reg_2205_pp0_iter33_reg;
                and_ln234_reg_2205_pp0_iter35_reg <= and_ln234_reg_2205_pp0_iter34_reg;
                and_ln234_reg_2205_pp0_iter36_reg <= and_ln234_reg_2205_pp0_iter35_reg;
                and_ln234_reg_2205_pp0_iter37_reg <= and_ln234_reg_2205_pp0_iter36_reg;
                and_ln234_reg_2205_pp0_iter38_reg <= and_ln234_reg_2205_pp0_iter37_reg;
                and_ln234_reg_2205_pp0_iter39_reg <= and_ln234_reg_2205_pp0_iter38_reg;
                and_ln234_reg_2205_pp0_iter3_reg <= and_ln234_reg_2205_pp0_iter2_reg;
                and_ln234_reg_2205_pp0_iter40_reg <= and_ln234_reg_2205_pp0_iter39_reg;
                and_ln234_reg_2205_pp0_iter41_reg <= and_ln234_reg_2205_pp0_iter40_reg;
                and_ln234_reg_2205_pp0_iter42_reg <= and_ln234_reg_2205_pp0_iter41_reg;
                and_ln234_reg_2205_pp0_iter43_reg <= and_ln234_reg_2205_pp0_iter42_reg;
                and_ln234_reg_2205_pp0_iter44_reg <= and_ln234_reg_2205_pp0_iter43_reg;
                and_ln234_reg_2205_pp0_iter45_reg <= and_ln234_reg_2205_pp0_iter44_reg;
                and_ln234_reg_2205_pp0_iter46_reg <= and_ln234_reg_2205_pp0_iter45_reg;
                and_ln234_reg_2205_pp0_iter47_reg <= and_ln234_reg_2205_pp0_iter46_reg;
                and_ln234_reg_2205_pp0_iter48_reg <= and_ln234_reg_2205_pp0_iter47_reg;
                and_ln234_reg_2205_pp0_iter49_reg <= and_ln234_reg_2205_pp0_iter48_reg;
                and_ln234_reg_2205_pp0_iter4_reg <= and_ln234_reg_2205_pp0_iter3_reg;
                and_ln234_reg_2205_pp0_iter50_reg <= and_ln234_reg_2205_pp0_iter49_reg;
                and_ln234_reg_2205_pp0_iter51_reg <= and_ln234_reg_2205_pp0_iter50_reg;
                and_ln234_reg_2205_pp0_iter52_reg <= and_ln234_reg_2205_pp0_iter51_reg;
                and_ln234_reg_2205_pp0_iter53_reg <= and_ln234_reg_2205_pp0_iter52_reg;
                and_ln234_reg_2205_pp0_iter54_reg <= and_ln234_reg_2205_pp0_iter53_reg;
                and_ln234_reg_2205_pp0_iter55_reg <= and_ln234_reg_2205_pp0_iter54_reg;
                and_ln234_reg_2205_pp0_iter56_reg <= and_ln234_reg_2205_pp0_iter55_reg;
                and_ln234_reg_2205_pp0_iter57_reg <= and_ln234_reg_2205_pp0_iter56_reg;
                and_ln234_reg_2205_pp0_iter58_reg <= and_ln234_reg_2205_pp0_iter57_reg;
                and_ln234_reg_2205_pp0_iter59_reg <= and_ln234_reg_2205_pp0_iter58_reg;
                and_ln234_reg_2205_pp0_iter5_reg <= and_ln234_reg_2205_pp0_iter4_reg;
                and_ln234_reg_2205_pp0_iter60_reg <= and_ln234_reg_2205_pp0_iter59_reg;
                and_ln234_reg_2205_pp0_iter61_reg <= and_ln234_reg_2205_pp0_iter60_reg;
                and_ln234_reg_2205_pp0_iter62_reg <= and_ln234_reg_2205_pp0_iter61_reg;
                and_ln234_reg_2205_pp0_iter63_reg <= and_ln234_reg_2205_pp0_iter62_reg;
                and_ln234_reg_2205_pp0_iter64_reg <= and_ln234_reg_2205_pp0_iter63_reg;
                and_ln234_reg_2205_pp0_iter65_reg <= and_ln234_reg_2205_pp0_iter64_reg;
                and_ln234_reg_2205_pp0_iter66_reg <= and_ln234_reg_2205_pp0_iter65_reg;
                and_ln234_reg_2205_pp0_iter67_reg <= and_ln234_reg_2205_pp0_iter66_reg;
                and_ln234_reg_2205_pp0_iter68_reg <= and_ln234_reg_2205_pp0_iter67_reg;
                and_ln234_reg_2205_pp0_iter69_reg <= and_ln234_reg_2205_pp0_iter68_reg;
                and_ln234_reg_2205_pp0_iter6_reg <= and_ln234_reg_2205_pp0_iter5_reg;
                and_ln234_reg_2205_pp0_iter70_reg <= and_ln234_reg_2205_pp0_iter69_reg;
                and_ln234_reg_2205_pp0_iter71_reg <= and_ln234_reg_2205_pp0_iter70_reg;
                and_ln234_reg_2205_pp0_iter72_reg <= and_ln234_reg_2205_pp0_iter71_reg;
                and_ln234_reg_2205_pp0_iter73_reg <= and_ln234_reg_2205_pp0_iter72_reg;
                and_ln234_reg_2205_pp0_iter74_reg <= and_ln234_reg_2205_pp0_iter73_reg;
                and_ln234_reg_2205_pp0_iter7_reg <= and_ln234_reg_2205_pp0_iter6_reg;
                and_ln234_reg_2205_pp0_iter8_reg <= and_ln234_reg_2205_pp0_iter7_reg;
                and_ln234_reg_2205_pp0_iter9_reg <= and_ln234_reg_2205_pp0_iter8_reg;
                and_ln239_reg_2244_pp0_iter10_reg <= and_ln239_reg_2244_pp0_iter9_reg;
                and_ln239_reg_2244_pp0_iter11_reg <= and_ln239_reg_2244_pp0_iter10_reg;
                and_ln239_reg_2244_pp0_iter12_reg <= and_ln239_reg_2244_pp0_iter11_reg;
                and_ln239_reg_2244_pp0_iter13_reg <= and_ln239_reg_2244_pp0_iter12_reg;
                and_ln239_reg_2244_pp0_iter14_reg <= and_ln239_reg_2244_pp0_iter13_reg;
                and_ln239_reg_2244_pp0_iter15_reg <= and_ln239_reg_2244_pp0_iter14_reg;
                and_ln239_reg_2244_pp0_iter16_reg <= and_ln239_reg_2244_pp0_iter15_reg;
                and_ln239_reg_2244_pp0_iter17_reg <= and_ln239_reg_2244_pp0_iter16_reg;
                and_ln239_reg_2244_pp0_iter18_reg <= and_ln239_reg_2244_pp0_iter17_reg;
                and_ln239_reg_2244_pp0_iter19_reg <= and_ln239_reg_2244_pp0_iter18_reg;
                and_ln239_reg_2244_pp0_iter1_reg <= and_ln239_reg_2244;
                and_ln239_reg_2244_pp0_iter20_reg <= and_ln239_reg_2244_pp0_iter19_reg;
                and_ln239_reg_2244_pp0_iter21_reg <= and_ln239_reg_2244_pp0_iter20_reg;
                and_ln239_reg_2244_pp0_iter22_reg <= and_ln239_reg_2244_pp0_iter21_reg;
                and_ln239_reg_2244_pp0_iter23_reg <= and_ln239_reg_2244_pp0_iter22_reg;
                and_ln239_reg_2244_pp0_iter24_reg <= and_ln239_reg_2244_pp0_iter23_reg;
                and_ln239_reg_2244_pp0_iter25_reg <= and_ln239_reg_2244_pp0_iter24_reg;
                and_ln239_reg_2244_pp0_iter26_reg <= and_ln239_reg_2244_pp0_iter25_reg;
                and_ln239_reg_2244_pp0_iter27_reg <= and_ln239_reg_2244_pp0_iter26_reg;
                and_ln239_reg_2244_pp0_iter28_reg <= and_ln239_reg_2244_pp0_iter27_reg;
                and_ln239_reg_2244_pp0_iter29_reg <= and_ln239_reg_2244_pp0_iter28_reg;
                and_ln239_reg_2244_pp0_iter2_reg <= and_ln239_reg_2244_pp0_iter1_reg;
                and_ln239_reg_2244_pp0_iter30_reg <= and_ln239_reg_2244_pp0_iter29_reg;
                and_ln239_reg_2244_pp0_iter31_reg <= and_ln239_reg_2244_pp0_iter30_reg;
                and_ln239_reg_2244_pp0_iter32_reg <= and_ln239_reg_2244_pp0_iter31_reg;
                and_ln239_reg_2244_pp0_iter33_reg <= and_ln239_reg_2244_pp0_iter32_reg;
                and_ln239_reg_2244_pp0_iter34_reg <= and_ln239_reg_2244_pp0_iter33_reg;
                and_ln239_reg_2244_pp0_iter35_reg <= and_ln239_reg_2244_pp0_iter34_reg;
                and_ln239_reg_2244_pp0_iter36_reg <= and_ln239_reg_2244_pp0_iter35_reg;
                and_ln239_reg_2244_pp0_iter37_reg <= and_ln239_reg_2244_pp0_iter36_reg;
                and_ln239_reg_2244_pp0_iter38_reg <= and_ln239_reg_2244_pp0_iter37_reg;
                and_ln239_reg_2244_pp0_iter39_reg <= and_ln239_reg_2244_pp0_iter38_reg;
                and_ln239_reg_2244_pp0_iter3_reg <= and_ln239_reg_2244_pp0_iter2_reg;
                and_ln239_reg_2244_pp0_iter40_reg <= and_ln239_reg_2244_pp0_iter39_reg;
                and_ln239_reg_2244_pp0_iter41_reg <= and_ln239_reg_2244_pp0_iter40_reg;
                and_ln239_reg_2244_pp0_iter42_reg <= and_ln239_reg_2244_pp0_iter41_reg;
                and_ln239_reg_2244_pp0_iter43_reg <= and_ln239_reg_2244_pp0_iter42_reg;
                and_ln239_reg_2244_pp0_iter44_reg <= and_ln239_reg_2244_pp0_iter43_reg;
                and_ln239_reg_2244_pp0_iter45_reg <= and_ln239_reg_2244_pp0_iter44_reg;
                and_ln239_reg_2244_pp0_iter46_reg <= and_ln239_reg_2244_pp0_iter45_reg;
                and_ln239_reg_2244_pp0_iter47_reg <= and_ln239_reg_2244_pp0_iter46_reg;
                and_ln239_reg_2244_pp0_iter48_reg <= and_ln239_reg_2244_pp0_iter47_reg;
                and_ln239_reg_2244_pp0_iter49_reg <= and_ln239_reg_2244_pp0_iter48_reg;
                and_ln239_reg_2244_pp0_iter4_reg <= and_ln239_reg_2244_pp0_iter3_reg;
                and_ln239_reg_2244_pp0_iter50_reg <= and_ln239_reg_2244_pp0_iter49_reg;
                and_ln239_reg_2244_pp0_iter51_reg <= and_ln239_reg_2244_pp0_iter50_reg;
                and_ln239_reg_2244_pp0_iter52_reg <= and_ln239_reg_2244_pp0_iter51_reg;
                and_ln239_reg_2244_pp0_iter53_reg <= and_ln239_reg_2244_pp0_iter52_reg;
                and_ln239_reg_2244_pp0_iter54_reg <= and_ln239_reg_2244_pp0_iter53_reg;
                and_ln239_reg_2244_pp0_iter55_reg <= and_ln239_reg_2244_pp0_iter54_reg;
                and_ln239_reg_2244_pp0_iter56_reg <= and_ln239_reg_2244_pp0_iter55_reg;
                and_ln239_reg_2244_pp0_iter57_reg <= and_ln239_reg_2244_pp0_iter56_reg;
                and_ln239_reg_2244_pp0_iter58_reg <= and_ln239_reg_2244_pp0_iter57_reg;
                and_ln239_reg_2244_pp0_iter59_reg <= and_ln239_reg_2244_pp0_iter58_reg;
                and_ln239_reg_2244_pp0_iter5_reg <= and_ln239_reg_2244_pp0_iter4_reg;
                and_ln239_reg_2244_pp0_iter60_reg <= and_ln239_reg_2244_pp0_iter59_reg;
                and_ln239_reg_2244_pp0_iter61_reg <= and_ln239_reg_2244_pp0_iter60_reg;
                and_ln239_reg_2244_pp0_iter62_reg <= and_ln239_reg_2244_pp0_iter61_reg;
                and_ln239_reg_2244_pp0_iter63_reg <= and_ln239_reg_2244_pp0_iter62_reg;
                and_ln239_reg_2244_pp0_iter64_reg <= and_ln239_reg_2244_pp0_iter63_reg;
                and_ln239_reg_2244_pp0_iter65_reg <= and_ln239_reg_2244_pp0_iter64_reg;
                and_ln239_reg_2244_pp0_iter66_reg <= and_ln239_reg_2244_pp0_iter65_reg;
                and_ln239_reg_2244_pp0_iter67_reg <= and_ln239_reg_2244_pp0_iter66_reg;
                and_ln239_reg_2244_pp0_iter68_reg <= and_ln239_reg_2244_pp0_iter67_reg;
                and_ln239_reg_2244_pp0_iter69_reg <= and_ln239_reg_2244_pp0_iter68_reg;
                and_ln239_reg_2244_pp0_iter6_reg <= and_ln239_reg_2244_pp0_iter5_reg;
                and_ln239_reg_2244_pp0_iter70_reg <= and_ln239_reg_2244_pp0_iter69_reg;
                and_ln239_reg_2244_pp0_iter71_reg <= and_ln239_reg_2244_pp0_iter70_reg;
                and_ln239_reg_2244_pp0_iter72_reg <= and_ln239_reg_2244_pp0_iter71_reg;
                and_ln239_reg_2244_pp0_iter73_reg <= and_ln239_reg_2244_pp0_iter72_reg;
                and_ln239_reg_2244_pp0_iter74_reg <= and_ln239_reg_2244_pp0_iter73_reg;
                and_ln239_reg_2244_pp0_iter7_reg <= and_ln239_reg_2244_pp0_iter6_reg;
                and_ln239_reg_2244_pp0_iter8_reg <= and_ln239_reg_2244_pp0_iter7_reg;
                and_ln239_reg_2244_pp0_iter9_reg <= and_ln239_reg_2244_pp0_iter8_reg;
                empty_reg_2340_pp0_iter10_reg <= empty_reg_2340_pp0_iter9_reg;
                empty_reg_2340_pp0_iter11_reg <= empty_reg_2340_pp0_iter10_reg;
                empty_reg_2340_pp0_iter12_reg <= empty_reg_2340_pp0_iter11_reg;
                empty_reg_2340_pp0_iter13_reg <= empty_reg_2340_pp0_iter12_reg;
                empty_reg_2340_pp0_iter14_reg <= empty_reg_2340_pp0_iter13_reg;
                empty_reg_2340_pp0_iter15_reg <= empty_reg_2340_pp0_iter14_reg;
                empty_reg_2340_pp0_iter16_reg <= empty_reg_2340_pp0_iter15_reg;
                empty_reg_2340_pp0_iter17_reg <= empty_reg_2340_pp0_iter16_reg;
                empty_reg_2340_pp0_iter18_reg <= empty_reg_2340_pp0_iter17_reg;
                empty_reg_2340_pp0_iter19_reg <= empty_reg_2340_pp0_iter18_reg;
                empty_reg_2340_pp0_iter20_reg <= empty_reg_2340_pp0_iter19_reg;
                empty_reg_2340_pp0_iter21_reg <= empty_reg_2340_pp0_iter20_reg;
                empty_reg_2340_pp0_iter22_reg <= empty_reg_2340_pp0_iter21_reg;
                empty_reg_2340_pp0_iter23_reg <= empty_reg_2340_pp0_iter22_reg;
                empty_reg_2340_pp0_iter24_reg <= empty_reg_2340_pp0_iter23_reg;
                empty_reg_2340_pp0_iter25_reg <= empty_reg_2340_pp0_iter24_reg;
                empty_reg_2340_pp0_iter26_reg <= empty_reg_2340_pp0_iter25_reg;
                empty_reg_2340_pp0_iter27_reg <= empty_reg_2340_pp0_iter26_reg;
                empty_reg_2340_pp0_iter28_reg <= empty_reg_2340_pp0_iter27_reg;
                empty_reg_2340_pp0_iter29_reg <= empty_reg_2340_pp0_iter28_reg;
                empty_reg_2340_pp0_iter2_reg <= empty_reg_2340;
                empty_reg_2340_pp0_iter30_reg <= empty_reg_2340_pp0_iter29_reg;
                empty_reg_2340_pp0_iter31_reg <= empty_reg_2340_pp0_iter30_reg;
                empty_reg_2340_pp0_iter32_reg <= empty_reg_2340_pp0_iter31_reg;
                empty_reg_2340_pp0_iter33_reg <= empty_reg_2340_pp0_iter32_reg;
                empty_reg_2340_pp0_iter34_reg <= empty_reg_2340_pp0_iter33_reg;
                empty_reg_2340_pp0_iter35_reg <= empty_reg_2340_pp0_iter34_reg;
                empty_reg_2340_pp0_iter36_reg <= empty_reg_2340_pp0_iter35_reg;
                empty_reg_2340_pp0_iter37_reg <= empty_reg_2340_pp0_iter36_reg;
                empty_reg_2340_pp0_iter38_reg <= empty_reg_2340_pp0_iter37_reg;
                empty_reg_2340_pp0_iter3_reg <= empty_reg_2340_pp0_iter2_reg;
                empty_reg_2340_pp0_iter4_reg <= empty_reg_2340_pp0_iter3_reg;
                empty_reg_2340_pp0_iter5_reg <= empty_reg_2340_pp0_iter4_reg;
                empty_reg_2340_pp0_iter6_reg <= empty_reg_2340_pp0_iter5_reg;
                empty_reg_2340_pp0_iter7_reg <= empty_reg_2340_pp0_iter6_reg;
                empty_reg_2340_pp0_iter8_reg <= empty_reg_2340_pp0_iter7_reg;
                empty_reg_2340_pp0_iter9_reg <= empty_reg_2340_pp0_iter8_reg;
                icmp_ln144_reg_2196 <= icmp_ln144_fu_862_p2;
                icmp_ln144_reg_2196_pp0_iter10_reg <= icmp_ln144_reg_2196_pp0_iter9_reg;
                icmp_ln144_reg_2196_pp0_iter11_reg <= icmp_ln144_reg_2196_pp0_iter10_reg;
                icmp_ln144_reg_2196_pp0_iter12_reg <= icmp_ln144_reg_2196_pp0_iter11_reg;
                icmp_ln144_reg_2196_pp0_iter13_reg <= icmp_ln144_reg_2196_pp0_iter12_reg;
                icmp_ln144_reg_2196_pp0_iter14_reg <= icmp_ln144_reg_2196_pp0_iter13_reg;
                icmp_ln144_reg_2196_pp0_iter15_reg <= icmp_ln144_reg_2196_pp0_iter14_reg;
                icmp_ln144_reg_2196_pp0_iter16_reg <= icmp_ln144_reg_2196_pp0_iter15_reg;
                icmp_ln144_reg_2196_pp0_iter17_reg <= icmp_ln144_reg_2196_pp0_iter16_reg;
                icmp_ln144_reg_2196_pp0_iter18_reg <= icmp_ln144_reg_2196_pp0_iter17_reg;
                icmp_ln144_reg_2196_pp0_iter19_reg <= icmp_ln144_reg_2196_pp0_iter18_reg;
                icmp_ln144_reg_2196_pp0_iter1_reg <= icmp_ln144_reg_2196;
                icmp_ln144_reg_2196_pp0_iter20_reg <= icmp_ln144_reg_2196_pp0_iter19_reg;
                icmp_ln144_reg_2196_pp0_iter21_reg <= icmp_ln144_reg_2196_pp0_iter20_reg;
                icmp_ln144_reg_2196_pp0_iter22_reg <= icmp_ln144_reg_2196_pp0_iter21_reg;
                icmp_ln144_reg_2196_pp0_iter23_reg <= icmp_ln144_reg_2196_pp0_iter22_reg;
                icmp_ln144_reg_2196_pp0_iter24_reg <= icmp_ln144_reg_2196_pp0_iter23_reg;
                icmp_ln144_reg_2196_pp0_iter25_reg <= icmp_ln144_reg_2196_pp0_iter24_reg;
                icmp_ln144_reg_2196_pp0_iter26_reg <= icmp_ln144_reg_2196_pp0_iter25_reg;
                icmp_ln144_reg_2196_pp0_iter27_reg <= icmp_ln144_reg_2196_pp0_iter26_reg;
                icmp_ln144_reg_2196_pp0_iter28_reg <= icmp_ln144_reg_2196_pp0_iter27_reg;
                icmp_ln144_reg_2196_pp0_iter29_reg <= icmp_ln144_reg_2196_pp0_iter28_reg;
                icmp_ln144_reg_2196_pp0_iter2_reg <= icmp_ln144_reg_2196_pp0_iter1_reg;
                icmp_ln144_reg_2196_pp0_iter30_reg <= icmp_ln144_reg_2196_pp0_iter29_reg;
                icmp_ln144_reg_2196_pp0_iter31_reg <= icmp_ln144_reg_2196_pp0_iter30_reg;
                icmp_ln144_reg_2196_pp0_iter32_reg <= icmp_ln144_reg_2196_pp0_iter31_reg;
                icmp_ln144_reg_2196_pp0_iter33_reg <= icmp_ln144_reg_2196_pp0_iter32_reg;
                icmp_ln144_reg_2196_pp0_iter34_reg <= icmp_ln144_reg_2196_pp0_iter33_reg;
                icmp_ln144_reg_2196_pp0_iter35_reg <= icmp_ln144_reg_2196_pp0_iter34_reg;
                icmp_ln144_reg_2196_pp0_iter36_reg <= icmp_ln144_reg_2196_pp0_iter35_reg;
                icmp_ln144_reg_2196_pp0_iter37_reg <= icmp_ln144_reg_2196_pp0_iter36_reg;
                icmp_ln144_reg_2196_pp0_iter38_reg <= icmp_ln144_reg_2196_pp0_iter37_reg;
                icmp_ln144_reg_2196_pp0_iter39_reg <= icmp_ln144_reg_2196_pp0_iter38_reg;
                icmp_ln144_reg_2196_pp0_iter3_reg <= icmp_ln144_reg_2196_pp0_iter2_reg;
                icmp_ln144_reg_2196_pp0_iter4_reg <= icmp_ln144_reg_2196_pp0_iter3_reg;
                icmp_ln144_reg_2196_pp0_iter5_reg <= icmp_ln144_reg_2196_pp0_iter4_reg;
                icmp_ln144_reg_2196_pp0_iter6_reg <= icmp_ln144_reg_2196_pp0_iter5_reg;
                icmp_ln144_reg_2196_pp0_iter7_reg <= icmp_ln144_reg_2196_pp0_iter6_reg;
                icmp_ln144_reg_2196_pp0_iter8_reg <= icmp_ln144_reg_2196_pp0_iter7_reg;
                icmp_ln144_reg_2196_pp0_iter9_reg <= icmp_ln144_reg_2196_pp0_iter8_reg;
                icmp_ln235_reg_2214_pp0_iter10_reg <= icmp_ln235_reg_2214_pp0_iter9_reg;
                icmp_ln235_reg_2214_pp0_iter11_reg <= icmp_ln235_reg_2214_pp0_iter10_reg;
                icmp_ln235_reg_2214_pp0_iter12_reg <= icmp_ln235_reg_2214_pp0_iter11_reg;
                icmp_ln235_reg_2214_pp0_iter13_reg <= icmp_ln235_reg_2214_pp0_iter12_reg;
                icmp_ln235_reg_2214_pp0_iter14_reg <= icmp_ln235_reg_2214_pp0_iter13_reg;
                icmp_ln235_reg_2214_pp0_iter15_reg <= icmp_ln235_reg_2214_pp0_iter14_reg;
                icmp_ln235_reg_2214_pp0_iter16_reg <= icmp_ln235_reg_2214_pp0_iter15_reg;
                icmp_ln235_reg_2214_pp0_iter17_reg <= icmp_ln235_reg_2214_pp0_iter16_reg;
                icmp_ln235_reg_2214_pp0_iter18_reg <= icmp_ln235_reg_2214_pp0_iter17_reg;
                icmp_ln235_reg_2214_pp0_iter19_reg <= icmp_ln235_reg_2214_pp0_iter18_reg;
                icmp_ln235_reg_2214_pp0_iter1_reg <= icmp_ln235_reg_2214;
                icmp_ln235_reg_2214_pp0_iter20_reg <= icmp_ln235_reg_2214_pp0_iter19_reg;
                icmp_ln235_reg_2214_pp0_iter21_reg <= icmp_ln235_reg_2214_pp0_iter20_reg;
                icmp_ln235_reg_2214_pp0_iter22_reg <= icmp_ln235_reg_2214_pp0_iter21_reg;
                icmp_ln235_reg_2214_pp0_iter23_reg <= icmp_ln235_reg_2214_pp0_iter22_reg;
                icmp_ln235_reg_2214_pp0_iter24_reg <= icmp_ln235_reg_2214_pp0_iter23_reg;
                icmp_ln235_reg_2214_pp0_iter25_reg <= icmp_ln235_reg_2214_pp0_iter24_reg;
                icmp_ln235_reg_2214_pp0_iter26_reg <= icmp_ln235_reg_2214_pp0_iter25_reg;
                icmp_ln235_reg_2214_pp0_iter27_reg <= icmp_ln235_reg_2214_pp0_iter26_reg;
                icmp_ln235_reg_2214_pp0_iter28_reg <= icmp_ln235_reg_2214_pp0_iter27_reg;
                icmp_ln235_reg_2214_pp0_iter29_reg <= icmp_ln235_reg_2214_pp0_iter28_reg;
                icmp_ln235_reg_2214_pp0_iter2_reg <= icmp_ln235_reg_2214_pp0_iter1_reg;
                icmp_ln235_reg_2214_pp0_iter30_reg <= icmp_ln235_reg_2214_pp0_iter29_reg;
                icmp_ln235_reg_2214_pp0_iter31_reg <= icmp_ln235_reg_2214_pp0_iter30_reg;
                icmp_ln235_reg_2214_pp0_iter32_reg <= icmp_ln235_reg_2214_pp0_iter31_reg;
                icmp_ln235_reg_2214_pp0_iter33_reg <= icmp_ln235_reg_2214_pp0_iter32_reg;
                icmp_ln235_reg_2214_pp0_iter34_reg <= icmp_ln235_reg_2214_pp0_iter33_reg;
                icmp_ln235_reg_2214_pp0_iter35_reg <= icmp_ln235_reg_2214_pp0_iter34_reg;
                icmp_ln235_reg_2214_pp0_iter36_reg <= icmp_ln235_reg_2214_pp0_iter35_reg;
                icmp_ln235_reg_2214_pp0_iter37_reg <= icmp_ln235_reg_2214_pp0_iter36_reg;
                icmp_ln235_reg_2214_pp0_iter38_reg <= icmp_ln235_reg_2214_pp0_iter37_reg;
                icmp_ln235_reg_2214_pp0_iter39_reg <= icmp_ln235_reg_2214_pp0_iter38_reg;
                icmp_ln235_reg_2214_pp0_iter3_reg <= icmp_ln235_reg_2214_pp0_iter2_reg;
                icmp_ln235_reg_2214_pp0_iter40_reg <= icmp_ln235_reg_2214_pp0_iter39_reg;
                icmp_ln235_reg_2214_pp0_iter41_reg <= icmp_ln235_reg_2214_pp0_iter40_reg;
                icmp_ln235_reg_2214_pp0_iter42_reg <= icmp_ln235_reg_2214_pp0_iter41_reg;
                icmp_ln235_reg_2214_pp0_iter43_reg <= icmp_ln235_reg_2214_pp0_iter42_reg;
                icmp_ln235_reg_2214_pp0_iter44_reg <= icmp_ln235_reg_2214_pp0_iter43_reg;
                icmp_ln235_reg_2214_pp0_iter45_reg <= icmp_ln235_reg_2214_pp0_iter44_reg;
                icmp_ln235_reg_2214_pp0_iter46_reg <= icmp_ln235_reg_2214_pp0_iter45_reg;
                icmp_ln235_reg_2214_pp0_iter47_reg <= icmp_ln235_reg_2214_pp0_iter46_reg;
                icmp_ln235_reg_2214_pp0_iter48_reg <= icmp_ln235_reg_2214_pp0_iter47_reg;
                icmp_ln235_reg_2214_pp0_iter49_reg <= icmp_ln235_reg_2214_pp0_iter48_reg;
                icmp_ln235_reg_2214_pp0_iter4_reg <= icmp_ln235_reg_2214_pp0_iter3_reg;
                icmp_ln235_reg_2214_pp0_iter50_reg <= icmp_ln235_reg_2214_pp0_iter49_reg;
                icmp_ln235_reg_2214_pp0_iter51_reg <= icmp_ln235_reg_2214_pp0_iter50_reg;
                icmp_ln235_reg_2214_pp0_iter52_reg <= icmp_ln235_reg_2214_pp0_iter51_reg;
                icmp_ln235_reg_2214_pp0_iter53_reg <= icmp_ln235_reg_2214_pp0_iter52_reg;
                icmp_ln235_reg_2214_pp0_iter54_reg <= icmp_ln235_reg_2214_pp0_iter53_reg;
                icmp_ln235_reg_2214_pp0_iter55_reg <= icmp_ln235_reg_2214_pp0_iter54_reg;
                icmp_ln235_reg_2214_pp0_iter56_reg <= icmp_ln235_reg_2214_pp0_iter55_reg;
                icmp_ln235_reg_2214_pp0_iter57_reg <= icmp_ln235_reg_2214_pp0_iter56_reg;
                icmp_ln235_reg_2214_pp0_iter58_reg <= icmp_ln235_reg_2214_pp0_iter57_reg;
                icmp_ln235_reg_2214_pp0_iter59_reg <= icmp_ln235_reg_2214_pp0_iter58_reg;
                icmp_ln235_reg_2214_pp0_iter5_reg <= icmp_ln235_reg_2214_pp0_iter4_reg;
                icmp_ln235_reg_2214_pp0_iter60_reg <= icmp_ln235_reg_2214_pp0_iter59_reg;
                icmp_ln235_reg_2214_pp0_iter61_reg <= icmp_ln235_reg_2214_pp0_iter60_reg;
                icmp_ln235_reg_2214_pp0_iter62_reg <= icmp_ln235_reg_2214_pp0_iter61_reg;
                icmp_ln235_reg_2214_pp0_iter63_reg <= icmp_ln235_reg_2214_pp0_iter62_reg;
                icmp_ln235_reg_2214_pp0_iter64_reg <= icmp_ln235_reg_2214_pp0_iter63_reg;
                icmp_ln235_reg_2214_pp0_iter65_reg <= icmp_ln235_reg_2214_pp0_iter64_reg;
                icmp_ln235_reg_2214_pp0_iter66_reg <= icmp_ln235_reg_2214_pp0_iter65_reg;
                icmp_ln235_reg_2214_pp0_iter67_reg <= icmp_ln235_reg_2214_pp0_iter66_reg;
                icmp_ln235_reg_2214_pp0_iter68_reg <= icmp_ln235_reg_2214_pp0_iter67_reg;
                icmp_ln235_reg_2214_pp0_iter69_reg <= icmp_ln235_reg_2214_pp0_iter68_reg;
                icmp_ln235_reg_2214_pp0_iter6_reg <= icmp_ln235_reg_2214_pp0_iter5_reg;
                icmp_ln235_reg_2214_pp0_iter70_reg <= icmp_ln235_reg_2214_pp0_iter69_reg;
                icmp_ln235_reg_2214_pp0_iter71_reg <= icmp_ln235_reg_2214_pp0_iter70_reg;
                icmp_ln235_reg_2214_pp0_iter72_reg <= icmp_ln235_reg_2214_pp0_iter71_reg;
                icmp_ln235_reg_2214_pp0_iter73_reg <= icmp_ln235_reg_2214_pp0_iter72_reg;
                icmp_ln235_reg_2214_pp0_iter74_reg <= icmp_ln235_reg_2214_pp0_iter73_reg;
                icmp_ln235_reg_2214_pp0_iter7_reg <= icmp_ln235_reg_2214_pp0_iter6_reg;
                icmp_ln235_reg_2214_pp0_iter8_reg <= icmp_ln235_reg_2214_pp0_iter7_reg;
                icmp_ln235_reg_2214_pp0_iter9_reg <= icmp_ln235_reg_2214_pp0_iter8_reg;
                    pool_final_addr_reg_2361_pp0_iter10_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter9_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter11_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter10_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter12_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter11_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter13_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter12_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter14_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter13_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter15_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter14_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter16_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter15_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter17_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter16_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter18_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter17_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter19_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter18_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter20_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter19_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter21_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter20_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter22_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter21_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter23_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter22_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter24_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter23_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter25_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter24_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter26_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter25_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter27_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter26_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter28_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter27_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter29_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter28_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter2_reg(3 downto 1) <= pool_final_addr_reg_2361(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter30_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter29_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter31_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter30_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter32_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter31_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter33_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter32_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter34_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter33_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter35_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter34_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter36_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter35_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter37_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter36_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter38_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter37_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter3_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter2_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter4_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter3_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter5_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter4_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter6_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter5_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter7_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter6_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter8_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter7_reg(3 downto 1);
                    pool_final_addr_reg_2361_pp0_iter9_reg(3 downto 1) <= pool_final_addr_reg_2361_pp0_iter8_reg(3 downto 1);
                row_reg0_addr_reg_2345_pp0_iter10_reg <= row_reg0_addr_reg_2345_pp0_iter9_reg;
                row_reg0_addr_reg_2345_pp0_iter11_reg <= row_reg0_addr_reg_2345_pp0_iter10_reg;
                row_reg0_addr_reg_2345_pp0_iter12_reg <= row_reg0_addr_reg_2345_pp0_iter11_reg;
                row_reg0_addr_reg_2345_pp0_iter13_reg <= row_reg0_addr_reg_2345_pp0_iter12_reg;
                row_reg0_addr_reg_2345_pp0_iter14_reg <= row_reg0_addr_reg_2345_pp0_iter13_reg;
                row_reg0_addr_reg_2345_pp0_iter15_reg <= row_reg0_addr_reg_2345_pp0_iter14_reg;
                row_reg0_addr_reg_2345_pp0_iter16_reg <= row_reg0_addr_reg_2345_pp0_iter15_reg;
                row_reg0_addr_reg_2345_pp0_iter17_reg <= row_reg0_addr_reg_2345_pp0_iter16_reg;
                row_reg0_addr_reg_2345_pp0_iter18_reg <= row_reg0_addr_reg_2345_pp0_iter17_reg;
                row_reg0_addr_reg_2345_pp0_iter19_reg <= row_reg0_addr_reg_2345_pp0_iter18_reg;
                row_reg0_addr_reg_2345_pp0_iter20_reg <= row_reg0_addr_reg_2345_pp0_iter19_reg;
                row_reg0_addr_reg_2345_pp0_iter21_reg <= row_reg0_addr_reg_2345_pp0_iter20_reg;
                row_reg0_addr_reg_2345_pp0_iter22_reg <= row_reg0_addr_reg_2345_pp0_iter21_reg;
                row_reg0_addr_reg_2345_pp0_iter23_reg <= row_reg0_addr_reg_2345_pp0_iter22_reg;
                row_reg0_addr_reg_2345_pp0_iter24_reg <= row_reg0_addr_reg_2345_pp0_iter23_reg;
                row_reg0_addr_reg_2345_pp0_iter25_reg <= row_reg0_addr_reg_2345_pp0_iter24_reg;
                row_reg0_addr_reg_2345_pp0_iter26_reg <= row_reg0_addr_reg_2345_pp0_iter25_reg;
                row_reg0_addr_reg_2345_pp0_iter27_reg <= row_reg0_addr_reg_2345_pp0_iter26_reg;
                row_reg0_addr_reg_2345_pp0_iter28_reg <= row_reg0_addr_reg_2345_pp0_iter27_reg;
                row_reg0_addr_reg_2345_pp0_iter29_reg <= row_reg0_addr_reg_2345_pp0_iter28_reg;
                row_reg0_addr_reg_2345_pp0_iter2_reg <= row_reg0_addr_reg_2345;
                row_reg0_addr_reg_2345_pp0_iter30_reg <= row_reg0_addr_reg_2345_pp0_iter29_reg;
                row_reg0_addr_reg_2345_pp0_iter31_reg <= row_reg0_addr_reg_2345_pp0_iter30_reg;
                row_reg0_addr_reg_2345_pp0_iter32_reg <= row_reg0_addr_reg_2345_pp0_iter31_reg;
                row_reg0_addr_reg_2345_pp0_iter33_reg <= row_reg0_addr_reg_2345_pp0_iter32_reg;
                row_reg0_addr_reg_2345_pp0_iter34_reg <= row_reg0_addr_reg_2345_pp0_iter33_reg;
                row_reg0_addr_reg_2345_pp0_iter35_reg <= row_reg0_addr_reg_2345_pp0_iter34_reg;
                row_reg0_addr_reg_2345_pp0_iter36_reg <= row_reg0_addr_reg_2345_pp0_iter35_reg;
                row_reg0_addr_reg_2345_pp0_iter37_reg <= row_reg0_addr_reg_2345_pp0_iter36_reg;
                row_reg0_addr_reg_2345_pp0_iter38_reg <= row_reg0_addr_reg_2345_pp0_iter37_reg;
                row_reg0_addr_reg_2345_pp0_iter3_reg <= row_reg0_addr_reg_2345_pp0_iter2_reg;
                row_reg0_addr_reg_2345_pp0_iter4_reg <= row_reg0_addr_reg_2345_pp0_iter3_reg;
                row_reg0_addr_reg_2345_pp0_iter5_reg <= row_reg0_addr_reg_2345_pp0_iter4_reg;
                row_reg0_addr_reg_2345_pp0_iter6_reg <= row_reg0_addr_reg_2345_pp0_iter5_reg;
                row_reg0_addr_reg_2345_pp0_iter7_reg <= row_reg0_addr_reg_2345_pp0_iter6_reg;
                row_reg0_addr_reg_2345_pp0_iter8_reg <= row_reg0_addr_reg_2345_pp0_iter7_reg;
                row_reg0_addr_reg_2345_pp0_iter9_reg <= row_reg0_addr_reg_2345_pp0_iter8_reg;
                row_reg1_addr_reg_2351_pp0_iter10_reg <= row_reg1_addr_reg_2351_pp0_iter9_reg;
                row_reg1_addr_reg_2351_pp0_iter11_reg <= row_reg1_addr_reg_2351_pp0_iter10_reg;
                row_reg1_addr_reg_2351_pp0_iter12_reg <= row_reg1_addr_reg_2351_pp0_iter11_reg;
                row_reg1_addr_reg_2351_pp0_iter13_reg <= row_reg1_addr_reg_2351_pp0_iter12_reg;
                row_reg1_addr_reg_2351_pp0_iter14_reg <= row_reg1_addr_reg_2351_pp0_iter13_reg;
                row_reg1_addr_reg_2351_pp0_iter15_reg <= row_reg1_addr_reg_2351_pp0_iter14_reg;
                row_reg1_addr_reg_2351_pp0_iter16_reg <= row_reg1_addr_reg_2351_pp0_iter15_reg;
                row_reg1_addr_reg_2351_pp0_iter17_reg <= row_reg1_addr_reg_2351_pp0_iter16_reg;
                row_reg1_addr_reg_2351_pp0_iter18_reg <= row_reg1_addr_reg_2351_pp0_iter17_reg;
                row_reg1_addr_reg_2351_pp0_iter19_reg <= row_reg1_addr_reg_2351_pp0_iter18_reg;
                row_reg1_addr_reg_2351_pp0_iter20_reg <= row_reg1_addr_reg_2351_pp0_iter19_reg;
                row_reg1_addr_reg_2351_pp0_iter21_reg <= row_reg1_addr_reg_2351_pp0_iter20_reg;
                row_reg1_addr_reg_2351_pp0_iter22_reg <= row_reg1_addr_reg_2351_pp0_iter21_reg;
                row_reg1_addr_reg_2351_pp0_iter23_reg <= row_reg1_addr_reg_2351_pp0_iter22_reg;
                row_reg1_addr_reg_2351_pp0_iter24_reg <= row_reg1_addr_reg_2351_pp0_iter23_reg;
                row_reg1_addr_reg_2351_pp0_iter25_reg <= row_reg1_addr_reg_2351_pp0_iter24_reg;
                row_reg1_addr_reg_2351_pp0_iter26_reg <= row_reg1_addr_reg_2351_pp0_iter25_reg;
                row_reg1_addr_reg_2351_pp0_iter27_reg <= row_reg1_addr_reg_2351_pp0_iter26_reg;
                row_reg1_addr_reg_2351_pp0_iter28_reg <= row_reg1_addr_reg_2351_pp0_iter27_reg;
                row_reg1_addr_reg_2351_pp0_iter29_reg <= row_reg1_addr_reg_2351_pp0_iter28_reg;
                row_reg1_addr_reg_2351_pp0_iter2_reg <= row_reg1_addr_reg_2351;
                row_reg1_addr_reg_2351_pp0_iter30_reg <= row_reg1_addr_reg_2351_pp0_iter29_reg;
                row_reg1_addr_reg_2351_pp0_iter31_reg <= row_reg1_addr_reg_2351_pp0_iter30_reg;
                row_reg1_addr_reg_2351_pp0_iter32_reg <= row_reg1_addr_reg_2351_pp0_iter31_reg;
                row_reg1_addr_reg_2351_pp0_iter33_reg <= row_reg1_addr_reg_2351_pp0_iter32_reg;
                row_reg1_addr_reg_2351_pp0_iter34_reg <= row_reg1_addr_reg_2351_pp0_iter33_reg;
                row_reg1_addr_reg_2351_pp0_iter35_reg <= row_reg1_addr_reg_2351_pp0_iter34_reg;
                row_reg1_addr_reg_2351_pp0_iter36_reg <= row_reg1_addr_reg_2351_pp0_iter35_reg;
                row_reg1_addr_reg_2351_pp0_iter37_reg <= row_reg1_addr_reg_2351_pp0_iter36_reg;
                row_reg1_addr_reg_2351_pp0_iter38_reg <= row_reg1_addr_reg_2351_pp0_iter37_reg;
                row_reg1_addr_reg_2351_pp0_iter3_reg <= row_reg1_addr_reg_2351_pp0_iter2_reg;
                row_reg1_addr_reg_2351_pp0_iter4_reg <= row_reg1_addr_reg_2351_pp0_iter3_reg;
                row_reg1_addr_reg_2351_pp0_iter5_reg <= row_reg1_addr_reg_2351_pp0_iter4_reg;
                row_reg1_addr_reg_2351_pp0_iter6_reg <= row_reg1_addr_reg_2351_pp0_iter5_reg;
                row_reg1_addr_reg_2351_pp0_iter7_reg <= row_reg1_addr_reg_2351_pp0_iter6_reg;
                row_reg1_addr_reg_2351_pp0_iter8_reg <= row_reg1_addr_reg_2351_pp0_iter7_reg;
                row_reg1_addr_reg_2351_pp0_iter9_reg <= row_reg1_addr_reg_2351_pp0_iter8_reg;
                tmp_2_reg_2218_pp0_iter1_reg <= tmp_2_reg_2218;
                trunc_ln185_reg_2356_pp0_iter10_reg <= trunc_ln185_reg_2356_pp0_iter9_reg;
                trunc_ln185_reg_2356_pp0_iter11_reg <= trunc_ln185_reg_2356_pp0_iter10_reg;
                trunc_ln185_reg_2356_pp0_iter12_reg <= trunc_ln185_reg_2356_pp0_iter11_reg;
                trunc_ln185_reg_2356_pp0_iter13_reg <= trunc_ln185_reg_2356_pp0_iter12_reg;
                trunc_ln185_reg_2356_pp0_iter14_reg <= trunc_ln185_reg_2356_pp0_iter13_reg;
                trunc_ln185_reg_2356_pp0_iter15_reg <= trunc_ln185_reg_2356_pp0_iter14_reg;
                trunc_ln185_reg_2356_pp0_iter16_reg <= trunc_ln185_reg_2356_pp0_iter15_reg;
                trunc_ln185_reg_2356_pp0_iter17_reg <= trunc_ln185_reg_2356_pp0_iter16_reg;
                trunc_ln185_reg_2356_pp0_iter18_reg <= trunc_ln185_reg_2356_pp0_iter17_reg;
                trunc_ln185_reg_2356_pp0_iter19_reg <= trunc_ln185_reg_2356_pp0_iter18_reg;
                trunc_ln185_reg_2356_pp0_iter20_reg <= trunc_ln185_reg_2356_pp0_iter19_reg;
                trunc_ln185_reg_2356_pp0_iter21_reg <= trunc_ln185_reg_2356_pp0_iter20_reg;
                trunc_ln185_reg_2356_pp0_iter22_reg <= trunc_ln185_reg_2356_pp0_iter21_reg;
                trunc_ln185_reg_2356_pp0_iter23_reg <= trunc_ln185_reg_2356_pp0_iter22_reg;
                trunc_ln185_reg_2356_pp0_iter24_reg <= trunc_ln185_reg_2356_pp0_iter23_reg;
                trunc_ln185_reg_2356_pp0_iter25_reg <= trunc_ln185_reg_2356_pp0_iter24_reg;
                trunc_ln185_reg_2356_pp0_iter26_reg <= trunc_ln185_reg_2356_pp0_iter25_reg;
                trunc_ln185_reg_2356_pp0_iter27_reg <= trunc_ln185_reg_2356_pp0_iter26_reg;
                trunc_ln185_reg_2356_pp0_iter28_reg <= trunc_ln185_reg_2356_pp0_iter27_reg;
                trunc_ln185_reg_2356_pp0_iter29_reg <= trunc_ln185_reg_2356_pp0_iter28_reg;
                trunc_ln185_reg_2356_pp0_iter2_reg <= trunc_ln185_reg_2356;
                trunc_ln185_reg_2356_pp0_iter30_reg <= trunc_ln185_reg_2356_pp0_iter29_reg;
                trunc_ln185_reg_2356_pp0_iter31_reg <= trunc_ln185_reg_2356_pp0_iter30_reg;
                trunc_ln185_reg_2356_pp0_iter32_reg <= trunc_ln185_reg_2356_pp0_iter31_reg;
                trunc_ln185_reg_2356_pp0_iter33_reg <= trunc_ln185_reg_2356_pp0_iter32_reg;
                trunc_ln185_reg_2356_pp0_iter34_reg <= trunc_ln185_reg_2356_pp0_iter33_reg;
                trunc_ln185_reg_2356_pp0_iter35_reg <= trunc_ln185_reg_2356_pp0_iter34_reg;
                trunc_ln185_reg_2356_pp0_iter36_reg <= trunc_ln185_reg_2356_pp0_iter35_reg;
                trunc_ln185_reg_2356_pp0_iter37_reg <= trunc_ln185_reg_2356_pp0_iter36_reg;
                trunc_ln185_reg_2356_pp0_iter38_reg <= trunc_ln185_reg_2356_pp0_iter37_reg;
                trunc_ln185_reg_2356_pp0_iter39_reg <= trunc_ln185_reg_2356_pp0_iter38_reg;
                trunc_ln185_reg_2356_pp0_iter3_reg <= trunc_ln185_reg_2356_pp0_iter2_reg;
                trunc_ln185_reg_2356_pp0_iter4_reg <= trunc_ln185_reg_2356_pp0_iter3_reg;
                trunc_ln185_reg_2356_pp0_iter5_reg <= trunc_ln185_reg_2356_pp0_iter4_reg;
                trunc_ln185_reg_2356_pp0_iter6_reg <= trunc_ln185_reg_2356_pp0_iter5_reg;
                trunc_ln185_reg_2356_pp0_iter7_reg <= trunc_ln185_reg_2356_pp0_iter6_reg;
                trunc_ln185_reg_2356_pp0_iter8_reg <= trunc_ln185_reg_2356_pp0_iter7_reg;
                trunc_ln185_reg_2356_pp0_iter9_reg <= trunc_ln185_reg_2356_pp0_iter8_reg;
                trunc_ln238_1_reg_2239_pp0_iter1_reg <= trunc_ln238_1_reg_2239;
                trunc_ln238_reg_2234_pp0_iter1_reg <= trunc_ln238_reg_2234;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln235_reg_2214 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln239_reg_2244) and (ap_const_lv1_1 = and_ln234_reg_2205) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln240_3_reg_2320 <= add_ln240_3_fu_1302_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln240_3_reg_2320_pp0_iter10_reg <= add_ln240_3_reg_2320_pp0_iter9_reg;
                add_ln240_3_reg_2320_pp0_iter11_reg <= add_ln240_3_reg_2320_pp0_iter10_reg;
                add_ln240_3_reg_2320_pp0_iter12_reg <= add_ln240_3_reg_2320_pp0_iter11_reg;
                add_ln240_3_reg_2320_pp0_iter13_reg <= add_ln240_3_reg_2320_pp0_iter12_reg;
                add_ln240_3_reg_2320_pp0_iter14_reg <= add_ln240_3_reg_2320_pp0_iter13_reg;
                add_ln240_3_reg_2320_pp0_iter15_reg <= add_ln240_3_reg_2320_pp0_iter14_reg;
                add_ln240_3_reg_2320_pp0_iter16_reg <= add_ln240_3_reg_2320_pp0_iter15_reg;
                add_ln240_3_reg_2320_pp0_iter17_reg <= add_ln240_3_reg_2320_pp0_iter16_reg;
                add_ln240_3_reg_2320_pp0_iter18_reg <= add_ln240_3_reg_2320_pp0_iter17_reg;
                add_ln240_3_reg_2320_pp0_iter19_reg <= add_ln240_3_reg_2320_pp0_iter18_reg;
                add_ln240_3_reg_2320_pp0_iter1_reg <= add_ln240_3_reg_2320;
                add_ln240_3_reg_2320_pp0_iter20_reg <= add_ln240_3_reg_2320_pp0_iter19_reg;
                add_ln240_3_reg_2320_pp0_iter21_reg <= add_ln240_3_reg_2320_pp0_iter20_reg;
                add_ln240_3_reg_2320_pp0_iter22_reg <= add_ln240_3_reg_2320_pp0_iter21_reg;
                add_ln240_3_reg_2320_pp0_iter23_reg <= add_ln240_3_reg_2320_pp0_iter22_reg;
                add_ln240_3_reg_2320_pp0_iter24_reg <= add_ln240_3_reg_2320_pp0_iter23_reg;
                add_ln240_3_reg_2320_pp0_iter25_reg <= add_ln240_3_reg_2320_pp0_iter24_reg;
                add_ln240_3_reg_2320_pp0_iter26_reg <= add_ln240_3_reg_2320_pp0_iter25_reg;
                add_ln240_3_reg_2320_pp0_iter27_reg <= add_ln240_3_reg_2320_pp0_iter26_reg;
                add_ln240_3_reg_2320_pp0_iter28_reg <= add_ln240_3_reg_2320_pp0_iter27_reg;
                add_ln240_3_reg_2320_pp0_iter29_reg <= add_ln240_3_reg_2320_pp0_iter28_reg;
                add_ln240_3_reg_2320_pp0_iter2_reg <= add_ln240_3_reg_2320_pp0_iter1_reg;
                add_ln240_3_reg_2320_pp0_iter30_reg <= add_ln240_3_reg_2320_pp0_iter29_reg;
                add_ln240_3_reg_2320_pp0_iter31_reg <= add_ln240_3_reg_2320_pp0_iter30_reg;
                add_ln240_3_reg_2320_pp0_iter32_reg <= add_ln240_3_reg_2320_pp0_iter31_reg;
                add_ln240_3_reg_2320_pp0_iter33_reg <= add_ln240_3_reg_2320_pp0_iter32_reg;
                add_ln240_3_reg_2320_pp0_iter34_reg <= add_ln240_3_reg_2320_pp0_iter33_reg;
                add_ln240_3_reg_2320_pp0_iter35_reg <= add_ln240_3_reg_2320_pp0_iter34_reg;
                add_ln240_3_reg_2320_pp0_iter36_reg <= add_ln240_3_reg_2320_pp0_iter35_reg;
                add_ln240_3_reg_2320_pp0_iter37_reg <= add_ln240_3_reg_2320_pp0_iter36_reg;
                add_ln240_3_reg_2320_pp0_iter38_reg <= add_ln240_3_reg_2320_pp0_iter37_reg;
                add_ln240_3_reg_2320_pp0_iter3_reg <= add_ln240_3_reg_2320_pp0_iter2_reg;
                add_ln240_3_reg_2320_pp0_iter4_reg <= add_ln240_3_reg_2320_pp0_iter3_reg;
                add_ln240_3_reg_2320_pp0_iter5_reg <= add_ln240_3_reg_2320_pp0_iter4_reg;
                add_ln240_3_reg_2320_pp0_iter6_reg <= add_ln240_3_reg_2320_pp0_iter5_reg;
                add_ln240_3_reg_2320_pp0_iter7_reg <= add_ln240_3_reg_2320_pp0_iter6_reg;
                add_ln240_3_reg_2320_pp0_iter8_reg <= add_ln240_3_reg_2320_pp0_iter7_reg;
                add_ln240_3_reg_2320_pp0_iter9_reg <= add_ln240_3_reg_2320_pp0_iter8_reg;
                and_ln149_reg_2273_pp0_iter10_reg <= and_ln149_reg_2273_pp0_iter9_reg;
                and_ln149_reg_2273_pp0_iter11_reg <= and_ln149_reg_2273_pp0_iter10_reg;
                and_ln149_reg_2273_pp0_iter12_reg <= and_ln149_reg_2273_pp0_iter11_reg;
                and_ln149_reg_2273_pp0_iter13_reg <= and_ln149_reg_2273_pp0_iter12_reg;
                and_ln149_reg_2273_pp0_iter14_reg <= and_ln149_reg_2273_pp0_iter13_reg;
                and_ln149_reg_2273_pp0_iter15_reg <= and_ln149_reg_2273_pp0_iter14_reg;
                and_ln149_reg_2273_pp0_iter16_reg <= and_ln149_reg_2273_pp0_iter15_reg;
                and_ln149_reg_2273_pp0_iter17_reg <= and_ln149_reg_2273_pp0_iter16_reg;
                and_ln149_reg_2273_pp0_iter18_reg <= and_ln149_reg_2273_pp0_iter17_reg;
                and_ln149_reg_2273_pp0_iter19_reg <= and_ln149_reg_2273_pp0_iter18_reg;
                and_ln149_reg_2273_pp0_iter1_reg <= and_ln149_reg_2273;
                and_ln149_reg_2273_pp0_iter20_reg <= and_ln149_reg_2273_pp0_iter19_reg;
                and_ln149_reg_2273_pp0_iter21_reg <= and_ln149_reg_2273_pp0_iter20_reg;
                and_ln149_reg_2273_pp0_iter22_reg <= and_ln149_reg_2273_pp0_iter21_reg;
                and_ln149_reg_2273_pp0_iter23_reg <= and_ln149_reg_2273_pp0_iter22_reg;
                and_ln149_reg_2273_pp0_iter24_reg <= and_ln149_reg_2273_pp0_iter23_reg;
                and_ln149_reg_2273_pp0_iter25_reg <= and_ln149_reg_2273_pp0_iter24_reg;
                and_ln149_reg_2273_pp0_iter26_reg <= and_ln149_reg_2273_pp0_iter25_reg;
                and_ln149_reg_2273_pp0_iter27_reg <= and_ln149_reg_2273_pp0_iter26_reg;
                and_ln149_reg_2273_pp0_iter28_reg <= and_ln149_reg_2273_pp0_iter27_reg;
                and_ln149_reg_2273_pp0_iter29_reg <= and_ln149_reg_2273_pp0_iter28_reg;
                and_ln149_reg_2273_pp0_iter2_reg <= and_ln149_reg_2273_pp0_iter1_reg;
                and_ln149_reg_2273_pp0_iter30_reg <= and_ln149_reg_2273_pp0_iter29_reg;
                and_ln149_reg_2273_pp0_iter31_reg <= and_ln149_reg_2273_pp0_iter30_reg;
                and_ln149_reg_2273_pp0_iter32_reg <= and_ln149_reg_2273_pp0_iter31_reg;
                and_ln149_reg_2273_pp0_iter33_reg <= and_ln149_reg_2273_pp0_iter32_reg;
                and_ln149_reg_2273_pp0_iter34_reg <= and_ln149_reg_2273_pp0_iter33_reg;
                and_ln149_reg_2273_pp0_iter35_reg <= and_ln149_reg_2273_pp0_iter34_reg;
                and_ln149_reg_2273_pp0_iter36_reg <= and_ln149_reg_2273_pp0_iter35_reg;
                and_ln149_reg_2273_pp0_iter37_reg <= and_ln149_reg_2273_pp0_iter36_reg;
                and_ln149_reg_2273_pp0_iter38_reg <= and_ln149_reg_2273_pp0_iter37_reg;
                and_ln149_reg_2273_pp0_iter39_reg <= and_ln149_reg_2273_pp0_iter38_reg;
                and_ln149_reg_2273_pp0_iter3_reg <= and_ln149_reg_2273_pp0_iter2_reg;
                and_ln149_reg_2273_pp0_iter4_reg <= and_ln149_reg_2273_pp0_iter3_reg;
                and_ln149_reg_2273_pp0_iter5_reg <= and_ln149_reg_2273_pp0_iter4_reg;
                and_ln149_reg_2273_pp0_iter6_reg <= and_ln149_reg_2273_pp0_iter5_reg;
                and_ln149_reg_2273_pp0_iter7_reg <= and_ln149_reg_2273_pp0_iter6_reg;
                and_ln149_reg_2273_pp0_iter8_reg <= and_ln149_reg_2273_pp0_iter7_reg;
                and_ln149_reg_2273_pp0_iter9_reg <= and_ln149_reg_2273_pp0_iter8_reg;
                cmp101_reg_2296_pp0_iter10_reg <= cmp101_reg_2296_pp0_iter9_reg;
                cmp101_reg_2296_pp0_iter11_reg <= cmp101_reg_2296_pp0_iter10_reg;
                cmp101_reg_2296_pp0_iter12_reg <= cmp101_reg_2296_pp0_iter11_reg;
                cmp101_reg_2296_pp0_iter13_reg <= cmp101_reg_2296_pp0_iter12_reg;
                cmp101_reg_2296_pp0_iter14_reg <= cmp101_reg_2296_pp0_iter13_reg;
                cmp101_reg_2296_pp0_iter15_reg <= cmp101_reg_2296_pp0_iter14_reg;
                cmp101_reg_2296_pp0_iter16_reg <= cmp101_reg_2296_pp0_iter15_reg;
                cmp101_reg_2296_pp0_iter17_reg <= cmp101_reg_2296_pp0_iter16_reg;
                cmp101_reg_2296_pp0_iter18_reg <= cmp101_reg_2296_pp0_iter17_reg;
                cmp101_reg_2296_pp0_iter19_reg <= cmp101_reg_2296_pp0_iter18_reg;
                cmp101_reg_2296_pp0_iter1_reg <= cmp101_reg_2296;
                cmp101_reg_2296_pp0_iter20_reg <= cmp101_reg_2296_pp0_iter19_reg;
                cmp101_reg_2296_pp0_iter21_reg <= cmp101_reg_2296_pp0_iter20_reg;
                cmp101_reg_2296_pp0_iter22_reg <= cmp101_reg_2296_pp0_iter21_reg;
                cmp101_reg_2296_pp0_iter23_reg <= cmp101_reg_2296_pp0_iter22_reg;
                cmp101_reg_2296_pp0_iter24_reg <= cmp101_reg_2296_pp0_iter23_reg;
                cmp101_reg_2296_pp0_iter25_reg <= cmp101_reg_2296_pp0_iter24_reg;
                cmp101_reg_2296_pp0_iter26_reg <= cmp101_reg_2296_pp0_iter25_reg;
                cmp101_reg_2296_pp0_iter27_reg <= cmp101_reg_2296_pp0_iter26_reg;
                cmp101_reg_2296_pp0_iter28_reg <= cmp101_reg_2296_pp0_iter27_reg;
                cmp101_reg_2296_pp0_iter29_reg <= cmp101_reg_2296_pp0_iter28_reg;
                cmp101_reg_2296_pp0_iter2_reg <= cmp101_reg_2296_pp0_iter1_reg;
                cmp101_reg_2296_pp0_iter30_reg <= cmp101_reg_2296_pp0_iter29_reg;
                cmp101_reg_2296_pp0_iter31_reg <= cmp101_reg_2296_pp0_iter30_reg;
                cmp101_reg_2296_pp0_iter32_reg <= cmp101_reg_2296_pp0_iter31_reg;
                cmp101_reg_2296_pp0_iter33_reg <= cmp101_reg_2296_pp0_iter32_reg;
                cmp101_reg_2296_pp0_iter34_reg <= cmp101_reg_2296_pp0_iter33_reg;
                cmp101_reg_2296_pp0_iter35_reg <= cmp101_reg_2296_pp0_iter34_reg;
                cmp101_reg_2296_pp0_iter36_reg <= cmp101_reg_2296_pp0_iter35_reg;
                cmp101_reg_2296_pp0_iter37_reg <= cmp101_reg_2296_pp0_iter36_reg;
                cmp101_reg_2296_pp0_iter38_reg <= cmp101_reg_2296_pp0_iter37_reg;
                cmp101_reg_2296_pp0_iter39_reg <= cmp101_reg_2296_pp0_iter38_reg;
                cmp101_reg_2296_pp0_iter3_reg <= cmp101_reg_2296_pp0_iter2_reg;
                cmp101_reg_2296_pp0_iter4_reg <= cmp101_reg_2296_pp0_iter3_reg;
                cmp101_reg_2296_pp0_iter5_reg <= cmp101_reg_2296_pp0_iter4_reg;
                cmp101_reg_2296_pp0_iter6_reg <= cmp101_reg_2296_pp0_iter5_reg;
                cmp101_reg_2296_pp0_iter7_reg <= cmp101_reg_2296_pp0_iter6_reg;
                cmp101_reg_2296_pp0_iter8_reg <= cmp101_reg_2296_pp0_iter7_reg;
                cmp101_reg_2296_pp0_iter9_reg <= cmp101_reg_2296_pp0_iter8_reg;
                cmp134_reg_2292_pp0_iter10_reg <= cmp134_reg_2292_pp0_iter9_reg;
                cmp134_reg_2292_pp0_iter11_reg <= cmp134_reg_2292_pp0_iter10_reg;
                cmp134_reg_2292_pp0_iter12_reg <= cmp134_reg_2292_pp0_iter11_reg;
                cmp134_reg_2292_pp0_iter13_reg <= cmp134_reg_2292_pp0_iter12_reg;
                cmp134_reg_2292_pp0_iter14_reg <= cmp134_reg_2292_pp0_iter13_reg;
                cmp134_reg_2292_pp0_iter15_reg <= cmp134_reg_2292_pp0_iter14_reg;
                cmp134_reg_2292_pp0_iter16_reg <= cmp134_reg_2292_pp0_iter15_reg;
                cmp134_reg_2292_pp0_iter17_reg <= cmp134_reg_2292_pp0_iter16_reg;
                cmp134_reg_2292_pp0_iter18_reg <= cmp134_reg_2292_pp0_iter17_reg;
                cmp134_reg_2292_pp0_iter19_reg <= cmp134_reg_2292_pp0_iter18_reg;
                cmp134_reg_2292_pp0_iter1_reg <= cmp134_reg_2292;
                cmp134_reg_2292_pp0_iter20_reg <= cmp134_reg_2292_pp0_iter19_reg;
                cmp134_reg_2292_pp0_iter21_reg <= cmp134_reg_2292_pp0_iter20_reg;
                cmp134_reg_2292_pp0_iter22_reg <= cmp134_reg_2292_pp0_iter21_reg;
                cmp134_reg_2292_pp0_iter23_reg <= cmp134_reg_2292_pp0_iter22_reg;
                cmp134_reg_2292_pp0_iter24_reg <= cmp134_reg_2292_pp0_iter23_reg;
                cmp134_reg_2292_pp0_iter25_reg <= cmp134_reg_2292_pp0_iter24_reg;
                cmp134_reg_2292_pp0_iter26_reg <= cmp134_reg_2292_pp0_iter25_reg;
                cmp134_reg_2292_pp0_iter27_reg <= cmp134_reg_2292_pp0_iter26_reg;
                cmp134_reg_2292_pp0_iter28_reg <= cmp134_reg_2292_pp0_iter27_reg;
                cmp134_reg_2292_pp0_iter29_reg <= cmp134_reg_2292_pp0_iter28_reg;
                cmp134_reg_2292_pp0_iter2_reg <= cmp134_reg_2292_pp0_iter1_reg;
                cmp134_reg_2292_pp0_iter30_reg <= cmp134_reg_2292_pp0_iter29_reg;
                cmp134_reg_2292_pp0_iter31_reg <= cmp134_reg_2292_pp0_iter30_reg;
                cmp134_reg_2292_pp0_iter32_reg <= cmp134_reg_2292_pp0_iter31_reg;
                cmp134_reg_2292_pp0_iter33_reg <= cmp134_reg_2292_pp0_iter32_reg;
                cmp134_reg_2292_pp0_iter34_reg <= cmp134_reg_2292_pp0_iter33_reg;
                cmp134_reg_2292_pp0_iter35_reg <= cmp134_reg_2292_pp0_iter34_reg;
                cmp134_reg_2292_pp0_iter36_reg <= cmp134_reg_2292_pp0_iter35_reg;
                cmp134_reg_2292_pp0_iter37_reg <= cmp134_reg_2292_pp0_iter36_reg;
                cmp134_reg_2292_pp0_iter38_reg <= cmp134_reg_2292_pp0_iter37_reg;
                cmp134_reg_2292_pp0_iter39_reg <= cmp134_reg_2292_pp0_iter38_reg;
                cmp134_reg_2292_pp0_iter3_reg <= cmp134_reg_2292_pp0_iter2_reg;
                cmp134_reg_2292_pp0_iter4_reg <= cmp134_reg_2292_pp0_iter3_reg;
                cmp134_reg_2292_pp0_iter5_reg <= cmp134_reg_2292_pp0_iter4_reg;
                cmp134_reg_2292_pp0_iter6_reg <= cmp134_reg_2292_pp0_iter5_reg;
                cmp134_reg_2292_pp0_iter7_reg <= cmp134_reg_2292_pp0_iter6_reg;
                cmp134_reg_2292_pp0_iter8_reg <= cmp134_reg_2292_pp0_iter7_reg;
                cmp134_reg_2292_pp0_iter9_reg <= cmp134_reg_2292_pp0_iter8_reg;
                cmp37_reg_2371_pp0_iter10_reg <= cmp37_reg_2371_pp0_iter9_reg;
                cmp37_reg_2371_pp0_iter11_reg <= cmp37_reg_2371_pp0_iter10_reg;
                cmp37_reg_2371_pp0_iter12_reg <= cmp37_reg_2371_pp0_iter11_reg;
                cmp37_reg_2371_pp0_iter13_reg <= cmp37_reg_2371_pp0_iter12_reg;
                cmp37_reg_2371_pp0_iter14_reg <= cmp37_reg_2371_pp0_iter13_reg;
                cmp37_reg_2371_pp0_iter15_reg <= cmp37_reg_2371_pp0_iter14_reg;
                cmp37_reg_2371_pp0_iter16_reg <= cmp37_reg_2371_pp0_iter15_reg;
                cmp37_reg_2371_pp0_iter17_reg <= cmp37_reg_2371_pp0_iter16_reg;
                cmp37_reg_2371_pp0_iter18_reg <= cmp37_reg_2371_pp0_iter17_reg;
                cmp37_reg_2371_pp0_iter19_reg <= cmp37_reg_2371_pp0_iter18_reg;
                cmp37_reg_2371_pp0_iter20_reg <= cmp37_reg_2371_pp0_iter19_reg;
                cmp37_reg_2371_pp0_iter21_reg <= cmp37_reg_2371_pp0_iter20_reg;
                cmp37_reg_2371_pp0_iter22_reg <= cmp37_reg_2371_pp0_iter21_reg;
                cmp37_reg_2371_pp0_iter23_reg <= cmp37_reg_2371_pp0_iter22_reg;
                cmp37_reg_2371_pp0_iter24_reg <= cmp37_reg_2371_pp0_iter23_reg;
                cmp37_reg_2371_pp0_iter25_reg <= cmp37_reg_2371_pp0_iter24_reg;
                cmp37_reg_2371_pp0_iter26_reg <= cmp37_reg_2371_pp0_iter25_reg;
                cmp37_reg_2371_pp0_iter27_reg <= cmp37_reg_2371_pp0_iter26_reg;
                cmp37_reg_2371_pp0_iter28_reg <= cmp37_reg_2371_pp0_iter27_reg;
                cmp37_reg_2371_pp0_iter29_reg <= cmp37_reg_2371_pp0_iter28_reg;
                cmp37_reg_2371_pp0_iter2_reg <= cmp37_reg_2371;
                cmp37_reg_2371_pp0_iter30_reg <= cmp37_reg_2371_pp0_iter29_reg;
                cmp37_reg_2371_pp0_iter31_reg <= cmp37_reg_2371_pp0_iter30_reg;
                cmp37_reg_2371_pp0_iter32_reg <= cmp37_reg_2371_pp0_iter31_reg;
                cmp37_reg_2371_pp0_iter33_reg <= cmp37_reg_2371_pp0_iter32_reg;
                cmp37_reg_2371_pp0_iter34_reg <= cmp37_reg_2371_pp0_iter33_reg;
                cmp37_reg_2371_pp0_iter35_reg <= cmp37_reg_2371_pp0_iter34_reg;
                cmp37_reg_2371_pp0_iter36_reg <= cmp37_reg_2371_pp0_iter35_reg;
                cmp37_reg_2371_pp0_iter37_reg <= cmp37_reg_2371_pp0_iter36_reg;
                cmp37_reg_2371_pp0_iter38_reg <= cmp37_reg_2371_pp0_iter37_reg;
                cmp37_reg_2371_pp0_iter39_reg <= cmp37_reg_2371_pp0_iter38_reg;
                cmp37_reg_2371_pp0_iter3_reg <= cmp37_reg_2371_pp0_iter2_reg;
                cmp37_reg_2371_pp0_iter4_reg <= cmp37_reg_2371_pp0_iter3_reg;
                cmp37_reg_2371_pp0_iter5_reg <= cmp37_reg_2371_pp0_iter4_reg;
                cmp37_reg_2371_pp0_iter6_reg <= cmp37_reg_2371_pp0_iter5_reg;
                cmp37_reg_2371_pp0_iter7_reg <= cmp37_reg_2371_pp0_iter6_reg;
                cmp37_reg_2371_pp0_iter8_reg <= cmp37_reg_2371_pp0_iter7_reg;
                cmp37_reg_2371_pp0_iter9_reg <= cmp37_reg_2371_pp0_iter8_reg;
                cmp52_reg_2282_pp0_iter10_reg <= cmp52_reg_2282_pp0_iter9_reg;
                cmp52_reg_2282_pp0_iter11_reg <= cmp52_reg_2282_pp0_iter10_reg;
                cmp52_reg_2282_pp0_iter12_reg <= cmp52_reg_2282_pp0_iter11_reg;
                cmp52_reg_2282_pp0_iter13_reg <= cmp52_reg_2282_pp0_iter12_reg;
                cmp52_reg_2282_pp0_iter14_reg <= cmp52_reg_2282_pp0_iter13_reg;
                cmp52_reg_2282_pp0_iter15_reg <= cmp52_reg_2282_pp0_iter14_reg;
                cmp52_reg_2282_pp0_iter16_reg <= cmp52_reg_2282_pp0_iter15_reg;
                cmp52_reg_2282_pp0_iter17_reg <= cmp52_reg_2282_pp0_iter16_reg;
                cmp52_reg_2282_pp0_iter18_reg <= cmp52_reg_2282_pp0_iter17_reg;
                cmp52_reg_2282_pp0_iter19_reg <= cmp52_reg_2282_pp0_iter18_reg;
                cmp52_reg_2282_pp0_iter1_reg <= cmp52_reg_2282;
                cmp52_reg_2282_pp0_iter20_reg <= cmp52_reg_2282_pp0_iter19_reg;
                cmp52_reg_2282_pp0_iter21_reg <= cmp52_reg_2282_pp0_iter20_reg;
                cmp52_reg_2282_pp0_iter22_reg <= cmp52_reg_2282_pp0_iter21_reg;
                cmp52_reg_2282_pp0_iter23_reg <= cmp52_reg_2282_pp0_iter22_reg;
                cmp52_reg_2282_pp0_iter24_reg <= cmp52_reg_2282_pp0_iter23_reg;
                cmp52_reg_2282_pp0_iter25_reg <= cmp52_reg_2282_pp0_iter24_reg;
                cmp52_reg_2282_pp0_iter26_reg <= cmp52_reg_2282_pp0_iter25_reg;
                cmp52_reg_2282_pp0_iter27_reg <= cmp52_reg_2282_pp0_iter26_reg;
                cmp52_reg_2282_pp0_iter28_reg <= cmp52_reg_2282_pp0_iter27_reg;
                cmp52_reg_2282_pp0_iter29_reg <= cmp52_reg_2282_pp0_iter28_reg;
                cmp52_reg_2282_pp0_iter2_reg <= cmp52_reg_2282_pp0_iter1_reg;
                cmp52_reg_2282_pp0_iter30_reg <= cmp52_reg_2282_pp0_iter29_reg;
                cmp52_reg_2282_pp0_iter31_reg <= cmp52_reg_2282_pp0_iter30_reg;
                cmp52_reg_2282_pp0_iter32_reg <= cmp52_reg_2282_pp0_iter31_reg;
                cmp52_reg_2282_pp0_iter33_reg <= cmp52_reg_2282_pp0_iter32_reg;
                cmp52_reg_2282_pp0_iter34_reg <= cmp52_reg_2282_pp0_iter33_reg;
                cmp52_reg_2282_pp0_iter35_reg <= cmp52_reg_2282_pp0_iter34_reg;
                cmp52_reg_2282_pp0_iter36_reg <= cmp52_reg_2282_pp0_iter35_reg;
                cmp52_reg_2282_pp0_iter37_reg <= cmp52_reg_2282_pp0_iter36_reg;
                cmp52_reg_2282_pp0_iter3_reg <= cmp52_reg_2282_pp0_iter2_reg;
                cmp52_reg_2282_pp0_iter4_reg <= cmp52_reg_2282_pp0_iter3_reg;
                cmp52_reg_2282_pp0_iter5_reg <= cmp52_reg_2282_pp0_iter4_reg;
                cmp52_reg_2282_pp0_iter6_reg <= cmp52_reg_2282_pp0_iter5_reg;
                cmp52_reg_2282_pp0_iter7_reg <= cmp52_reg_2282_pp0_iter6_reg;
                cmp52_reg_2282_pp0_iter8_reg <= cmp52_reg_2282_pp0_iter7_reg;
                cmp52_reg_2282_pp0_iter9_reg <= cmp52_reg_2282_pp0_iter8_reg;
                cmp55_reg_2287_pp0_iter10_reg <= cmp55_reg_2287_pp0_iter9_reg;
                cmp55_reg_2287_pp0_iter11_reg <= cmp55_reg_2287_pp0_iter10_reg;
                cmp55_reg_2287_pp0_iter12_reg <= cmp55_reg_2287_pp0_iter11_reg;
                cmp55_reg_2287_pp0_iter13_reg <= cmp55_reg_2287_pp0_iter12_reg;
                cmp55_reg_2287_pp0_iter14_reg <= cmp55_reg_2287_pp0_iter13_reg;
                cmp55_reg_2287_pp0_iter15_reg <= cmp55_reg_2287_pp0_iter14_reg;
                cmp55_reg_2287_pp0_iter16_reg <= cmp55_reg_2287_pp0_iter15_reg;
                cmp55_reg_2287_pp0_iter17_reg <= cmp55_reg_2287_pp0_iter16_reg;
                cmp55_reg_2287_pp0_iter18_reg <= cmp55_reg_2287_pp0_iter17_reg;
                cmp55_reg_2287_pp0_iter19_reg <= cmp55_reg_2287_pp0_iter18_reg;
                cmp55_reg_2287_pp0_iter1_reg <= cmp55_reg_2287;
                cmp55_reg_2287_pp0_iter20_reg <= cmp55_reg_2287_pp0_iter19_reg;
                cmp55_reg_2287_pp0_iter21_reg <= cmp55_reg_2287_pp0_iter20_reg;
                cmp55_reg_2287_pp0_iter22_reg <= cmp55_reg_2287_pp0_iter21_reg;
                cmp55_reg_2287_pp0_iter23_reg <= cmp55_reg_2287_pp0_iter22_reg;
                cmp55_reg_2287_pp0_iter24_reg <= cmp55_reg_2287_pp0_iter23_reg;
                cmp55_reg_2287_pp0_iter25_reg <= cmp55_reg_2287_pp0_iter24_reg;
                cmp55_reg_2287_pp0_iter26_reg <= cmp55_reg_2287_pp0_iter25_reg;
                cmp55_reg_2287_pp0_iter27_reg <= cmp55_reg_2287_pp0_iter26_reg;
                cmp55_reg_2287_pp0_iter28_reg <= cmp55_reg_2287_pp0_iter27_reg;
                cmp55_reg_2287_pp0_iter29_reg <= cmp55_reg_2287_pp0_iter28_reg;
                cmp55_reg_2287_pp0_iter2_reg <= cmp55_reg_2287_pp0_iter1_reg;
                cmp55_reg_2287_pp0_iter30_reg <= cmp55_reg_2287_pp0_iter29_reg;
                cmp55_reg_2287_pp0_iter31_reg <= cmp55_reg_2287_pp0_iter30_reg;
                cmp55_reg_2287_pp0_iter32_reg <= cmp55_reg_2287_pp0_iter31_reg;
                cmp55_reg_2287_pp0_iter33_reg <= cmp55_reg_2287_pp0_iter32_reg;
                cmp55_reg_2287_pp0_iter34_reg <= cmp55_reg_2287_pp0_iter33_reg;
                cmp55_reg_2287_pp0_iter35_reg <= cmp55_reg_2287_pp0_iter34_reg;
                cmp55_reg_2287_pp0_iter36_reg <= cmp55_reg_2287_pp0_iter35_reg;
                cmp55_reg_2287_pp0_iter37_reg <= cmp55_reg_2287_pp0_iter36_reg;
                cmp55_reg_2287_pp0_iter3_reg <= cmp55_reg_2287_pp0_iter2_reg;
                cmp55_reg_2287_pp0_iter4_reg <= cmp55_reg_2287_pp0_iter3_reg;
                cmp55_reg_2287_pp0_iter5_reg <= cmp55_reg_2287_pp0_iter4_reg;
                cmp55_reg_2287_pp0_iter6_reg <= cmp55_reg_2287_pp0_iter5_reg;
                cmp55_reg_2287_pp0_iter7_reg <= cmp55_reg_2287_pp0_iter6_reg;
                cmp55_reg_2287_pp0_iter8_reg <= cmp55_reg_2287_pp0_iter7_reg;
                cmp55_reg_2287_pp0_iter9_reg <= cmp55_reg_2287_pp0_iter8_reg;
                gmem1_addr_reg_2402_pp0_iter10_reg <= gmem1_addr_reg_2402_pp0_iter9_reg;
                gmem1_addr_reg_2402_pp0_iter11_reg <= gmem1_addr_reg_2402_pp0_iter10_reg;
                gmem1_addr_reg_2402_pp0_iter12_reg <= gmem1_addr_reg_2402_pp0_iter11_reg;
                gmem1_addr_reg_2402_pp0_iter13_reg <= gmem1_addr_reg_2402_pp0_iter12_reg;
                gmem1_addr_reg_2402_pp0_iter14_reg <= gmem1_addr_reg_2402_pp0_iter13_reg;
                gmem1_addr_reg_2402_pp0_iter15_reg <= gmem1_addr_reg_2402_pp0_iter14_reg;
                gmem1_addr_reg_2402_pp0_iter16_reg <= gmem1_addr_reg_2402_pp0_iter15_reg;
                gmem1_addr_reg_2402_pp0_iter17_reg <= gmem1_addr_reg_2402_pp0_iter16_reg;
                gmem1_addr_reg_2402_pp0_iter18_reg <= gmem1_addr_reg_2402_pp0_iter17_reg;
                gmem1_addr_reg_2402_pp0_iter19_reg <= gmem1_addr_reg_2402_pp0_iter18_reg;
                gmem1_addr_reg_2402_pp0_iter20_reg <= gmem1_addr_reg_2402_pp0_iter19_reg;
                gmem1_addr_reg_2402_pp0_iter21_reg <= gmem1_addr_reg_2402_pp0_iter20_reg;
                gmem1_addr_reg_2402_pp0_iter22_reg <= gmem1_addr_reg_2402_pp0_iter21_reg;
                gmem1_addr_reg_2402_pp0_iter23_reg <= gmem1_addr_reg_2402_pp0_iter22_reg;
                gmem1_addr_reg_2402_pp0_iter24_reg <= gmem1_addr_reg_2402_pp0_iter23_reg;
                gmem1_addr_reg_2402_pp0_iter25_reg <= gmem1_addr_reg_2402_pp0_iter24_reg;
                gmem1_addr_reg_2402_pp0_iter26_reg <= gmem1_addr_reg_2402_pp0_iter25_reg;
                gmem1_addr_reg_2402_pp0_iter27_reg <= gmem1_addr_reg_2402_pp0_iter26_reg;
                gmem1_addr_reg_2402_pp0_iter28_reg <= gmem1_addr_reg_2402_pp0_iter27_reg;
                gmem1_addr_reg_2402_pp0_iter29_reg <= gmem1_addr_reg_2402_pp0_iter28_reg;
                gmem1_addr_reg_2402_pp0_iter30_reg <= gmem1_addr_reg_2402_pp0_iter29_reg;
                gmem1_addr_reg_2402_pp0_iter31_reg <= gmem1_addr_reg_2402_pp0_iter30_reg;
                gmem1_addr_reg_2402_pp0_iter32_reg <= gmem1_addr_reg_2402_pp0_iter31_reg;
                gmem1_addr_reg_2402_pp0_iter33_reg <= gmem1_addr_reg_2402_pp0_iter32_reg;
                gmem1_addr_reg_2402_pp0_iter34_reg <= gmem1_addr_reg_2402_pp0_iter33_reg;
                gmem1_addr_reg_2402_pp0_iter35_reg <= gmem1_addr_reg_2402_pp0_iter34_reg;
                gmem1_addr_reg_2402_pp0_iter36_reg <= gmem1_addr_reg_2402_pp0_iter35_reg;
                gmem1_addr_reg_2402_pp0_iter37_reg <= gmem1_addr_reg_2402_pp0_iter36_reg;
                gmem1_addr_reg_2402_pp0_iter38_reg <= gmem1_addr_reg_2402_pp0_iter37_reg;
                gmem1_addr_reg_2402_pp0_iter39_reg <= gmem1_addr_reg_2402_pp0_iter38_reg;
                gmem1_addr_reg_2402_pp0_iter3_reg <= gmem1_addr_reg_2402;
                gmem1_addr_reg_2402_pp0_iter4_reg <= gmem1_addr_reg_2402_pp0_iter3_reg;
                gmem1_addr_reg_2402_pp0_iter5_reg <= gmem1_addr_reg_2402_pp0_iter4_reg;
                gmem1_addr_reg_2402_pp0_iter6_reg <= gmem1_addr_reg_2402_pp0_iter5_reg;
                gmem1_addr_reg_2402_pp0_iter7_reg <= gmem1_addr_reg_2402_pp0_iter6_reg;
                gmem1_addr_reg_2402_pp0_iter8_reg <= gmem1_addr_reg_2402_pp0_iter7_reg;
                gmem1_addr_reg_2402_pp0_iter9_reg <= gmem1_addr_reg_2402_pp0_iter8_reg;
                win_item_x_reg_585_pp0_iter1_reg <= win_item_x_reg_585;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                and_ln149_reg_2273 <= and_ln149_fu_1089_p2;
                flag_reg_2268 <= flag_fu_1071_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_fu_862_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln234_reg_2205 <= and_ln234_fu_894_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln235_fu_920_p2 = ap_const_lv1_1) and (icmp_ln144_fu_862_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln234_fu_894_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln239_reg_2244 <= and_ln239_fu_1001_p2;
                tmp_2_reg_2218 <= sub_ln237_fu_938_p2(16 downto 16);
                trunc_ln237_1_reg_2224 <= sub_ln237_1_fu_951_p2(16 downto 2);
                trunc_ln237_2_reg_2229 <= sub_ln237_fu_938_p2(16 downto 2);
                trunc_ln238_1_reg_2239 <= trunc_ln238_1_fu_981_p1;
                trunc_ln238_reg_2234 <= trunc_ln238_fu_977_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                bottom_read_reg_2026 <= bottom;
                cmp78_reg_2104 <= cmp78_fu_741_p2;
                    conv8_reg_2056(15 downto 0) <= conv8_fu_689_p1(15 downto 0);
                    conv_x_cast14_reg_2066(7 downto 0) <= conv_x_cast14_fu_697_p1(7 downto 0);
                    conv_x_cast1_reg_2071(7 downto 0) <= conv_x_cast1_fu_701_p1(7 downto 0);
                    padd_offset_cast17_reg_2108(7 downto 0) <= padd_offset_cast17_fu_747_p1(7 downto 0);
                    padd_offset_cast_reg_2113(7 downto 0) <= padd_offset_cast_fu_751_p1(7 downto 0);
                    pool_dim1_cast16_reg_2089(7 downto 0) <= pool_dim1_cast16_fu_719_p1(7 downto 0);
                    pool_dim1_cast9_reg_2094(7 downto 0) <= pool_dim1_cast9_fu_723_p1(7 downto 0);
                    pool_dim3_cast_reg_2118(15 downto 0) <= pool_dim3_cast_fu_755_p1(15 downto 0);
                    pool_stride_cast_reg_2061(7 downto 0) <= pool_stride_cast_fu_693_p1(7 downto 0);
                    pool_win_num_x_cast_reg_2076(7 downto 0) <= pool_win_num_x_cast_fu_705_p1(7 downto 0);
                sub184_reg_2128 <= sub184_fu_767_p2;
                sub272_reg_2099 <= sub272_fu_735_p2;
                sub287_reg_2133 <= sub287_fu_777_p2;
                sub291_reg_2138 <= sub291_fu_783_p2;
                sub_reg_2082 <= sub_fu_713_p2;
                top_read_reg_2021 <= top;
                    zext_ln125_reg_2148(3) <= zext_ln125_fu_811_p1(3);
                    zext_ln160_reg_2143(7 downto 0) <= zext_ln160_fu_789_p1(7 downto 0);
                    zext_ln240_reg_2123(15 downto 0) <= zext_ln240_fu_759_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln149_fu_1089_p2) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                cmp101_reg_2296 <= cmp101_fu_1151_p2;
                cmp134_reg_2292 <= cmp134_fu_1145_p2;
                cmp52_reg_2282 <= cmp52_fu_1135_p2;
                cmp55_reg_2287 <= cmp55_fu_1140_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln149_reg_2273) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                cmp37_reg_2371 <= cmp37_fu_1432_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln149_reg_2273) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                empty_reg_2340 <= empty_fu_1373_p1;
                    pool_final_addr_reg_2361(3 downto 1) <= zext_ln185_1_fu_1406_p1(4 - 1 downto 0)(3 downto 1);
                row_reg0_addr_reg_2345 <= idxprom139_fu_1363_p1(3 - 1 downto 0);
                row_reg1_addr_reg_2351 <= idxprom139_fu_1363_p1(3 - 1 downto 0);
                trunc_ln185_reg_2356 <= trunc_ln185_fu_1394_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_predicate_op628_read_state83 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gmem0_addr_1_read_reg_2436 <= gmem0_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter1_reg) and (icmp_ln144_reg_2196_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gmem0_addr_1_reg_2396 <= sext_ln160_1_fu_1542_p1;
                gmem0_addr_reg_2390 <= sext_ln160_fu_1516_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln235_reg_2214_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter2_reg) and (ap_const_lv1_1 = and_ln239_reg_2244_pp0_iter2_reg) and (icmp_ln144_reg_2196_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                gmem1_addr_reg_2402 <= add_ln240_1_fu_1572_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                gp_final_cnt_3_reg_597 <= ap_phi_reg_pp0_iter0_gp_final_cnt_3_reg_597;
                k_1_reg_2263 <= k_1_fu_1065_p2;
                lane_cnt_2_reg_609 <= ap_phi_reg_pp0_iter0_lane_cnt_2_reg_609;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_1_reg_2153 <= i_1_fu_815_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                item_loop_cnt_2_reg_2335 <= item_loop_cnt_2_fu_1355_p3;
                pool_win_cnt_2_reg_2330 <= pool_win_cnt_2_fu_1341_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                max_value_14_reg_2427 <= max_value_14_fu_1673_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                max_value_15_reg_2421 <= max_value_15_fu_1632_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1))) then
                max_value_16_reg_2458 <= max_value_16_fu_1798_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1))) then
                max_value_17_reg_2465 <= max_value_17_fu_1818_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1))) then
                max_value_18_reg_2482 <= max_value_18_fu_1873_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                mul13_reg_2181 <= mul13_fu_842_p2;
                mul_reg_2171 <= grp_fu_1970_p2;
                    pool_group_cnt_cast_reg_2166(15 downto 0) <= pool_group_cnt_cast_fu_830_p1(15 downto 0);
                    pool_y_cnt_cast10_reg_2176(7 downto 0) <= pool_y_cnt_cast10_fu_834_p1(7 downto 0);
                    shl_ln236_reg_2186(15 downto 1) <= shl_ln236_fu_847_p2(15 downto 1);
                    zext_ln144_reg_2191(15 downto 0) <= zext_ln144_fu_858_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                or_ln163_reg_2414 <= or_ln163_fu_1593_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                    pool_final_addr_1_reg_2471(3 downto 1) <= zext_ln195_fu_1839_p1(4 - 1 downto 0)(3 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln235_reg_2214_pp0_iter39_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln239_reg_2244_pp0_iter39_reg) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter39_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                pool_final_load_reg_2495 <= pool_final_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                row_reg0_addr_1_reg_2441 <= zext_ln179_fu_1690_p1(3 - 1 downto 0);
                row_reg1_addr_1_reg_2447 <= zext_ln179_fu_1690_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1))) then
                row_reg0_load_1_reg_2476 <= row_reg0_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln235_reg_2214_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln238_reg_2380 <= select_ln238_fu_1478_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp101_reg_2296_pp0_iter37_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter37_reg = ap_const_lv1_0)) or ((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp101_reg_2296_pp0_iter37_reg = ap_const_lv1_0) and (cmp134_reg_2292_pp0_iter37_reg = ap_const_lv1_0)) or ((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp134_reg_2292_pp0_iter37_reg = ap_const_lv1_1)) or ((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp134_reg_2292_pp0_iter37_reg = ap_const_lv1_1)) or ((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp134_reg_2292_pp0_iter37_reg = ap_const_lv1_0)))) then
                shift_reg_1_fu_210 <= shift_reg_5_reg_2408;
                shift_reg_2_fu_214 <= shift_reg_1_fu_210;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp101_reg_2296_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)) or ((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp101_reg_2296_pp0_iter38_reg = ap_const_lv1_0) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)) or ((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1)) or ((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1)) or ((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)))) then
                shift_reg_3_fu_218 <= shift_reg_8_fu_1760_p1;
                shift_reg_fu_206 <= shift_reg_3_fu_218;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter37_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                shift_reg_5_reg_2408 <= shift_reg_5_fu_1583_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1))) then
                temp_reg2_2_reg_2452 <= temp_reg2_2_fu_1779_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln235_reg_2214_pp0_iter1_reg = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter1_reg) and (ap_const_lv1_1 = and_ln239_reg_2244_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                tmp47_reg_2385 <= tmp47_fu_1485_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln235_fu_920_p2 = ap_const_lv1_1) and (icmp_ln144_fu_862_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln234_fu_894_p2) and (ap_const_lv1_1 = and_ln239_fu_1001_p2) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                trunc_ln240_1_reg_2248 <= trunc_ln240_1_fu_1007_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                win_item_cnt_3_reg_657 <= ap_phi_reg_pp0_iter1_win_item_cnt_3_reg_657;
                win_item_s_3_reg_645 <= ap_phi_reg_pp0_iter1_win_item_s_3_reg_645;
                win_item_x_2_reg_621 <= ap_phi_reg_pp0_iter1_win_item_x_2_reg_621;
                win_item_y_3_reg_633 <= ap_phi_reg_pp0_iter1_win_item_y_3_reg_633;
            end if;
        end if;
    end process;
    conv8_reg_2056(31 downto 16) <= "0000000000000000";
    pool_stride_cast_reg_2061(15 downto 8) <= "00000000";
    conv_x_cast14_reg_2066(23 downto 8) <= "0000000000000000";
    conv_x_cast1_reg_2071(25 downto 8) <= "000000000000000000";
    pool_win_num_x_cast_reg_2076(15 downto 8) <= "00000000";
    pool_dim1_cast16_reg_2089(19 downto 8) <= "000000000000";
    pool_dim1_cast9_reg_2094(15 downto 8) <= "00000000";
    padd_offset_cast17_reg_2108(15 downto 8) <= "00000000";
    padd_offset_cast_reg_2113(16 downto 8) <= "000000000";
    pool_dim3_cast_reg_2118(16) <= '0';
    zext_ln240_reg_2123(29 downto 16) <= "00000000000000";
    zext_ln160_reg_2143(23 downto 8) <= "0000000000000000";
    zext_ln125_reg_2148(2 downto 0) <= "000";
    zext_ln125_reg_2148(15 downto 4) <= "000000000000";
    pool_group_cnt_cast_reg_2166(16) <= '0';
    pool_y_cnt_cast10_reg_2176(8) <= '0';
    shl_ln236_reg_2186(0) <= '0';
    zext_ln144_reg_2191(29 downto 16) <= "00000000000000";
    pool_final_addr_reg_2361(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter2_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter3_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter4_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter5_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter6_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter7_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter8_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter9_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter10_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter11_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter12_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter13_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter14_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter15_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter16_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter17_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter18_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter19_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter20_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter21_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter22_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter23_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter24_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter25_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter26_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter27_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter28_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter29_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter30_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter31_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter32_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter33_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter34_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter35_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter36_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter37_reg(0) <= '0';
    pool_final_addr_reg_2361_pp0_iter38_reg(0) <= '0';
    pool_final_addr_1_reg_2471(0) <= '1';
    ap_str_blocking_n_reg <= '1';
    ap_int_blocking_n_reg <= '1';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter38, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter74, ap_CS_fsm_state2, icmp_ln125_fu_821_p2, ap_enable_reg_pp0_iter39, ap_block_pp0_stage1_subdone, ap_enable_reg_pp0_iter73, ap_block_pp0_stage0_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln125_fu_821_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state156;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((not(((ap_enable_reg_pp0_iter74 = ap_const_logic_1) and (ap_enable_reg_pp0_iter73 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter74 = ap_const_logic_1) and (ap_enable_reg_pp0_iter73 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state156;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state156 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add35_fu_1426_p2 <= std_logic_vector(unsigned(shl_ln146_1_fu_1411_p3) + unsigned(zext_ln151_1_fu_1422_p1));
    add43_fu_1449_p2 <= std_logic_vector(unsigned(tmp6_fu_1444_p2) + unsigned(tmp1_cast_fu_1441_p1));
    add_ln152_fu_1104_p2 <= std_logic_vector(unsigned(ap_phi_mux_win_item_cnt_phi_fu_553_p4) + unsigned(ap_const_lv8_1));
    add_ln160_1_fu_1526_p2 <= std_logic_vector(unsigned(add_ln160_fu_1501_p2) + unsigned(ap_const_lv64_1));
    add_ln160_fu_1501_p2 <= std_logic_vector(unsigned(zext_ln160_1_fu_1497_p1) + unsigned(bottom_read_reg_2026));
    add_ln185_fu_1388_p2 <= std_logic_vector(unsigned(zext_ln185_fu_1384_p1) + unsigned(win_item_s_cast2_fu_1369_p1));
    add_ln221_fu_1201_p2 <= std_logic_vector(unsigned(ap_phi_mux_win_item_y_phi_fu_577_p4) + unsigned(ap_const_lv8_1));
    add_ln235_1_fu_914_p2 <= std_logic_vector(signed(sext_ln235_fu_910_p1) + signed(zext_ln146_fu_875_p1));
    add_ln235_fu_904_p2 <= std_logic_vector(unsigned(zext_ln235_fu_900_p1) + unsigned(ap_const_lv9_1FC));
    add_ln240_1_fu_1572_p2 <= std_logic_vector(signed(sext_ln240_fu_1568_p1) + signed(top_read_reg_2021));
    add_ln240_2_fu_1288_p2 <= std_logic_vector(unsigned(tmp_s_fu_1276_p3) + unsigned(trunc_ln240_fu_1284_p1));
    add_ln240_3_fu_1302_p2 <= std_logic_vector(unsigned(tmp_12_cast_fu_1294_p3) + unsigned(trunc_ln240_1_reg_2248));
    add_ln240_fu_1562_p2 <= std_logic_vector(unsigned(tmp5_fu_1555_p3) + unsigned(zext_ln240_3_fu_1552_p1));
    add_ln247_fu_1029_p2 <= std_logic_vector(unsigned(ap_phi_mux_gp_final_cnt_phi_fu_517_p4) + unsigned(ap_const_lv8_1));
    add_ln257_fu_1327_p2 <= std_logic_vector(unsigned(pool_win_cnt_reg_525) + unsigned(ap_const_lv16_1));
    add_ln269_fu_1934_p2 <= std_logic_vector(unsigned(pool_group_cnt_reg_477) + unsigned(ap_const_lv16_1));
    and_ln149_fu_1089_p2 <= (icmp_ln149_fu_1075_p2 and icmp_ln149_1_fu_1084_p2);
    and_ln218_fu_1195_p2 <= (icmp_ln218_fu_1185_p2 and icmp_ln218_1_fu_1190_p2);
    and_ln234_fu_894_p2 <= (icmp_ln234_fu_883_p2 and icmp_ln234_1_fu_889_p2);
    and_ln239_fu_1001_p2 <= (xor_ln239_fu_995_p2 and icmp_ln239_fu_985_p2);
    and_ln244_fu_1023_p2 <= (icmp_ln244_fu_1011_p2 and icmp_ln244_1_fu_1017_p2);
    and_ln254_fu_1321_p2 <= (icmp_ln254_fu_1311_p2 and icmp_ln254_1_fu_1316_p2);
    and_ln266_fu_1928_p2 <= (icmp_ln266_fu_1920_p2 and icmp_ln266_1_fu_1924_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state156 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter40, gmem0_RVALID, ap_block_state12_io, ap_predicate_op606_read_state82, ap_block_state86_io)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_const_boolean_1 = ap_block_state86_io) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1)) or ((ap_predicate_op606_read_state82 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state12_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter40, gmem0_RVALID, ap_block_state12_io, ap_predicate_op606_read_state82, ap_block_state86_io)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_const_boolean_1 = ap_block_state86_io) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1)) or ((ap_predicate_op606_read_state82 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state12_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter74, gmem0_RVALID, gmem1_BVALID, ap_predicate_op628_read_state83, ap_predicate_op791_writeresp_state155)
    begin
                ap_block_pp0_stage1_01001 <= (((ap_predicate_op791_writeresp_state155 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter74 = ap_const_logic_1)) or ((ap_predicate_op628_read_state83 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter74, gmem0_RVALID, gmem1_BVALID, ap_block_state13_io, ap_predicate_op628_read_state83, ap_block_state87_io, ap_predicate_op791_writeresp_state155)
    begin
                ap_block_pp0_stage1_11001 <= (((ap_predicate_op791_writeresp_state155 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter74 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state87_io) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1)) or ((ap_predicate_op628_read_state83 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state13_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter74, gmem0_RVALID, gmem1_BVALID, ap_block_state13_io, ap_predicate_op628_read_state83, ap_block_state87_io, ap_predicate_op791_writeresp_state155)
    begin
                ap_block_pp0_stage1_subdone <= (((ap_predicate_op791_writeresp_state155 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter74 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state87_io) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1)) or ((ap_predicate_op628_read_state83 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1)) or ((ap_const_boolean_1 = ap_block_state13_io) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;

        ap_block_state100_pp0_stage0_iter47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state101_pp0_stage1_iter47 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state102_pp0_stage0_iter48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state103_pp0_stage1_iter48 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state104_pp0_stage0_iter49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state105_pp0_stage1_iter49 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state106_pp0_stage0_iter50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state107_pp0_stage1_iter50 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state108_pp0_stage0_iter51 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state109_pp0_stage1_iter51 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state110_pp0_stage0_iter52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state111_pp0_stage1_iter52 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state112_pp0_stage0_iter53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state113_pp0_stage1_iter53 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state114_pp0_stage0_iter54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state115_pp0_stage1_iter54 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state116_pp0_stage0_iter55 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state117_pp0_stage1_iter55 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state118_pp0_stage0_iter56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state119_pp0_stage1_iter56 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state120_pp0_stage0_iter57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state121_pp0_stage1_iter57 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state122_pp0_stage0_iter58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state123_pp0_stage1_iter58 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state124_pp0_stage0_iter59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state125_pp0_stage1_iter59 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state126_pp0_stage0_iter60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state127_pp0_stage1_iter60 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state128_pp0_stage0_iter61 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state129_pp0_stage1_iter61 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state12_io_assign_proc : process(gmem0_ARREADY, ap_predicate_op467_readreq_state12)
    begin
                ap_block_state12_io <= ((ap_predicate_op467_readreq_state12 = ap_const_boolean_1) and (gmem0_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state12_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state130_pp0_stage0_iter62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state131_pp0_stage1_iter62 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state132_pp0_stage0_iter63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state133_pp0_stage1_iter63 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state134_pp0_stage0_iter64 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state135_pp0_stage1_iter64 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state136_pp0_stage0_iter65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state137_pp0_stage1_iter65 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state138_pp0_stage0_iter66 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state139_pp0_stage1_iter66 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state13_io_assign_proc : process(gmem0_ARREADY, ap_predicate_op469_readreq_state13)
    begin
                ap_block_state13_io <= ((ap_predicate_op469_readreq_state13 = ap_const_boolean_1) and (gmem0_ARREADY = ap_const_logic_0));
    end process;

        ap_block_state13_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state140_pp0_stage0_iter67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state141_pp0_stage1_iter67 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state142_pp0_stage0_iter68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state143_pp0_stage1_iter68 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state144_pp0_stage0_iter69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state145_pp0_stage1_iter69 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state146_pp0_stage0_iter70 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state147_pp0_stage1_iter70 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state148_pp0_stage0_iter71 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state149_pp0_stage1_iter71 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state150_pp0_stage0_iter72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state151_pp0_stage1_iter72 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state152_pp0_stage0_iter73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state153_pp0_stage1_iter73 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state154_pp0_stage0_iter74 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state155_pp0_stage1_iter74_assign_proc : process(gmem1_BVALID, ap_predicate_op791_writeresp_state155)
    begin
                ap_block_state155_pp0_stage1_iter74 <= ((ap_predicate_op791_writeresp_state155 = ap_const_boolean_1) and (gmem1_BVALID = ap_const_logic_0));
    end process;

        ap_block_state15_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage0_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage1_iter11 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage0_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage1_iter12 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage0_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage1_iter13 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage0_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage1_iter14 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage0_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage1_iter15 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage0_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage1_iter16 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage0_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage1_iter17 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage0_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage1_iter18 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage0_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage1_iter19 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage0_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage1_iter20 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage0_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage1_iter21 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage0_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage1_iter22 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage0_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage1_iter23 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage0_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage1_iter24 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage0_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage1_iter25 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage0_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage1_iter26 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage0_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage1_iter27 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage0_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage1_iter28 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage0_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage1_iter29 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage0_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage1_iter30 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage0_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage1_iter31 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage0_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage1_iter32 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage0_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage1_iter33 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage0_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage1_iter34 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage0_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage1_iter35 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage0_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage1_iter36 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage0_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage1_iter37 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state82_pp0_stage0_iter38_assign_proc : process(gmem0_RVALID, ap_predicate_op606_read_state82)
    begin
                ap_block_state82_pp0_stage0_iter38 <= ((ap_predicate_op606_read_state82 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state83_pp0_stage1_iter38_assign_proc : process(gmem0_RVALID, ap_predicate_op628_read_state83)
    begin
                ap_block_state83_pp0_stage1_iter38 <= ((ap_predicate_op628_read_state83 = ap_const_boolean_1) and (gmem0_RVALID = ap_const_logic_0));
    end process;

        ap_block_state84_pp0_stage0_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state85_pp0_stage1_iter39 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state86_io_assign_proc : process(gmem1_AWREADY, ap_predicate_op722_writereq_state86)
    begin
                ap_block_state86_io <= ((ap_predicate_op722_writereq_state86 = ap_const_boolean_1) and (gmem1_AWREADY = ap_const_logic_0));
    end process;

        ap_block_state86_pp0_stage0_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state87_io_assign_proc : process(gmem1_WREADY, ap_predicate_op723_write_state87)
    begin
                ap_block_state87_io <= ((ap_predicate_op723_write_state87 = ap_const_boolean_1) and (gmem1_WREADY = ap_const_logic_0));
    end process;

        ap_block_state87_pp0_stage1_iter40 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state88_pp0_stage0_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state89_pp0_stage1_iter41 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state90_pp0_stage0_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state91_pp0_stage1_iter42 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state92_pp0_stage0_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state93_pp0_stage1_iter43 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state94_pp0_stage0_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state95_pp0_stage1_iter44 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state96_pp0_stage0_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state97_pp0_stage1_iter45 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state98_pp0_stage0_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state99_pp0_stage1_iter46 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_1096_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_1096 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_3024_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln144_fu_862_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_3024 <= ((icmp_ln144_fu_862_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_3436_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_predicate_op467_readreq_state12, ap_block_pp0_stage0_11001)
    begin
                ap_condition_3436 <= ((ap_predicate_op467_readreq_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_3440_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_predicate_op469_readreq_state13, ap_block_pp0_stage1_11001)
    begin
                ap_condition_3440 <= ((ap_predicate_op469_readreq_state13 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001));
    end process;


    ap_condition_3448_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln144_reg_2196_pp0_iter38_reg, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg, ap_enable_reg_pp0_iter39)
    begin
                ap_condition_3448 <= ((icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0));
    end process;


    ap_condition_3457_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, cmp78_reg_2104, icmp_ln144_reg_2196_pp0_iter39_reg, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg)
    begin
                ap_condition_3457 <= ((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1));
    end process;


    ap_condition_3465_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, cmp78_reg_2104, icmp_ln144_reg_2196_pp0_iter39_reg, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg)
    begin
                ap_condition_3465 <= ((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter39_state84_assign_proc : process(ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter39)
    begin
        if (((ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0))) then 
            ap_condition_pp0_exit_iter39_state84 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter39_state84 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln144_reg_2196, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln144_reg_2196 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln125_fu_821_p2)
    begin
        if (((icmp_ln125_fu_821_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_ext_blocking_cur_n <= (gmem1_blk_n_W and gmem1_blk_n_B and gmem1_blk_n_AW and gmem0_blk_n_R and gmem0_blk_n_AR);
    ap_ext_blocking_n <= (ap_ext_blocking_cur_n and ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter38, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter74, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter39, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10, ap_enable_reg_pp0_iter11, ap_enable_reg_pp0_iter12, ap_enable_reg_pp0_iter13, ap_enable_reg_pp0_iter14, ap_enable_reg_pp0_iter15, ap_enable_reg_pp0_iter16, ap_enable_reg_pp0_iter17, ap_enable_reg_pp0_iter18, ap_enable_reg_pp0_iter19, ap_enable_reg_pp0_iter20, ap_enable_reg_pp0_iter21, ap_enable_reg_pp0_iter22, ap_enable_reg_pp0_iter23, ap_enable_reg_pp0_iter24, ap_enable_reg_pp0_iter25, ap_enable_reg_pp0_iter26, ap_enable_reg_pp0_iter27, ap_enable_reg_pp0_iter28, ap_enable_reg_pp0_iter29, ap_enable_reg_pp0_iter30, ap_enable_reg_pp0_iter31, ap_enable_reg_pp0_iter32, ap_enable_reg_pp0_iter33, ap_enable_reg_pp0_iter34, ap_enable_reg_pp0_iter35, ap_enable_reg_pp0_iter36, ap_enable_reg_pp0_iter37, ap_enable_reg_pp0_iter41, ap_enable_reg_pp0_iter42, ap_enable_reg_pp0_iter43, ap_enable_reg_pp0_iter44, ap_enable_reg_pp0_iter45, ap_enable_reg_pp0_iter46, ap_enable_reg_pp0_iter47, ap_enable_reg_pp0_iter48, ap_enable_reg_pp0_iter49, ap_enable_reg_pp0_iter50, ap_enable_reg_pp0_iter51, ap_enable_reg_pp0_iter52, ap_enable_reg_pp0_iter53, ap_enable_reg_pp0_iter54, ap_enable_reg_pp0_iter55, ap_enable_reg_pp0_iter56, ap_enable_reg_pp0_iter57, ap_enable_reg_pp0_iter58, ap_enable_reg_pp0_iter59, ap_enable_reg_pp0_iter60, ap_enable_reg_pp0_iter61, ap_enable_reg_pp0_iter62, ap_enable_reg_pp0_iter63, ap_enable_reg_pp0_iter64, ap_enable_reg_pp0_iter65, ap_enable_reg_pp0_iter66, ap_enable_reg_pp0_iter67, ap_enable_reg_pp0_iter68, ap_enable_reg_pp0_iter69, ap_enable_reg_pp0_iter70, ap_enable_reg_pp0_iter71, ap_enable_reg_pp0_iter72, ap_enable_reg_pp0_iter73)
    begin
        if (((ap_enable_reg_pp0_iter74 = ap_const_logic_0) and (ap_enable_reg_pp0_iter40 = ap_const_logic_0) and (ap_enable_reg_pp0_iter73 = ap_const_logic_0) and (ap_enable_reg_pp0_iter72 = ap_const_logic_0) and (ap_enable_reg_pp0_iter71 = ap_const_logic_0) and (ap_enable_reg_pp0_iter70 = ap_const_logic_0) and (ap_enable_reg_pp0_iter69 = ap_const_logic_0) and (ap_enable_reg_pp0_iter68 = ap_const_logic_0) and (ap_enable_reg_pp0_iter67 = ap_const_logic_0) and (ap_enable_reg_pp0_iter66 = ap_const_logic_0) and (ap_enable_reg_pp0_iter65 = ap_const_logic_0) and (ap_enable_reg_pp0_iter64 = ap_const_logic_0) and (ap_enable_reg_pp0_iter63 = ap_const_logic_0) and (ap_enable_reg_pp0_iter62 = ap_const_logic_0) and (ap_enable_reg_pp0_iter61 = ap_const_logic_0) and (ap_enable_reg_pp0_iter60 = ap_const_logic_0) and (ap_enable_reg_pp0_iter59 = ap_const_logic_0) and (ap_enable_reg_pp0_iter58 = ap_const_logic_0) and (ap_enable_reg_pp0_iter57 = ap_const_logic_0) and (ap_enable_reg_pp0_iter56 = ap_const_logic_0) and (ap_enable_reg_pp0_iter55 = ap_const_logic_0) and (ap_enable_reg_pp0_iter54 = ap_const_logic_0) and (ap_enable_reg_pp0_iter53 = ap_const_logic_0) and (ap_enable_reg_pp0_iter52 = ap_const_logic_0) and (ap_enable_reg_pp0_iter51 = ap_const_logic_0) and (ap_enable_reg_pp0_iter50 = ap_const_logic_0) and (ap_enable_reg_pp0_iter49 = ap_const_logic_0) and (ap_enable_reg_pp0_iter48 = ap_const_logic_0) and (ap_enable_reg_pp0_iter47 = ap_const_logic_0) and (ap_enable_reg_pp0_iter46 = ap_const_logic_0) and (ap_enable_reg_pp0_iter45 = ap_const_logic_0) and (ap_enable_reg_pp0_iter44 = ap_const_logic_0) and (ap_enable_reg_pp0_iter43 = ap_const_logic_0) and (ap_enable_reg_pp0_iter42 = ap_const_logic_0) and (ap_enable_reg_pp0_iter41 = ap_const_logic_0) and (ap_enable_reg_pp0_iter37 = ap_const_logic_0) and (ap_enable_reg_pp0_iter36 = ap_const_logic_0) and (ap_enable_reg_pp0_iter35 = ap_const_logic_0) and (ap_enable_reg_pp0_iter34 = ap_const_logic_0) and (ap_enable_reg_pp0_iter33 = ap_const_logic_0) and (ap_enable_reg_pp0_iter32 = ap_const_logic_0) and (ap_enable_reg_pp0_iter31 = ap_const_logic_0) and (ap_enable_reg_pp0_iter30 = ap_const_logic_0) and (ap_enable_reg_pp0_iter29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter28 = ap_const_logic_0) and (ap_enable_reg_pp0_iter27 = ap_const_logic_0) and (ap_enable_reg_pp0_iter26 = ap_const_logic_0) and (ap_enable_reg_pp0_iter25 = ap_const_logic_0) and (ap_enable_reg_pp0_iter24 = ap_const_logic_0) and (ap_enable_reg_pp0_iter23 = ap_const_logic_0) and (ap_enable_reg_pp0_iter22 = ap_const_logic_0) and (ap_enable_reg_pp0_iter21 = ap_const_logic_0) and (ap_enable_reg_pp0_iter20 = ap_const_logic_0) and (ap_enable_reg_pp0_iter19 = ap_const_logic_0) and (ap_enable_reg_pp0_iter18 = ap_const_logic_0) and (ap_enable_reg_pp0_iter17 = ap_const_logic_0) and (ap_enable_reg_pp0_iter16 = ap_const_logic_0) and (ap_enable_reg_pp0_iter15 = ap_const_logic_0) and (ap_enable_reg_pp0_iter14 = ap_const_logic_0) and (ap_enable_reg_pp0_iter13 = ap_const_logic_0) and (ap_enable_reg_pp0_iter12 = ap_const_logic_0) and (ap_enable_reg_pp0_iter11 = ap_const_logic_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_int_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);

    ap_phi_mux_gp_final_cnt_phi_fu_517_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln144_reg_2196, gp_final_cnt_reg_513, gp_final_cnt_3_reg_597, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_gp_final_cnt_phi_fu_517_p4 <= gp_final_cnt_3_reg_597;
        else 
            ap_phi_mux_gp_final_cnt_phi_fu_517_p4 <= gp_final_cnt_reg_513;
        end if; 
    end process;


    ap_phi_mux_item_loop_cnt_phi_fu_541_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln144_reg_2196, item_loop_cnt_reg_537, item_loop_cnt_2_reg_2335, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_item_loop_cnt_phi_fu_541_p4 <= item_loop_cnt_2_reg_2335;
        else 
            ap_phi_mux_item_loop_cnt_phi_fu_541_p4 <= item_loop_cnt_reg_537;
        end if; 
    end process;


    ap_phi_mux_k_phi_fu_493_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln144_reg_2196, k_reg_489, k_1_reg_2263, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_k_phi_fu_493_p4 <= k_1_reg_2263;
        else 
            ap_phi_mux_k_phi_fu_493_p4 <= k_reg_489;
        end if; 
    end process;


    ap_phi_mux_lane_cnt_phi_fu_505_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln144_reg_2196, lane_cnt_reg_501, lane_cnt_2_reg_609, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_lane_cnt_phi_fu_505_p4 <= lane_cnt_2_reg_609;
        else 
            ap_phi_mux_lane_cnt_phi_fu_505_p4 <= lane_cnt_reg_501;
        end if; 
    end process;


    ap_phi_mux_pool_win_cnt_phi_fu_529_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, icmp_ln144_reg_2196, pool_win_cnt_reg_525, pool_win_cnt_2_reg_2330, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln144_reg_2196 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_pool_win_cnt_phi_fu_529_p4 <= pool_win_cnt_2_reg_2330;
        else 
            ap_phi_mux_pool_win_cnt_phi_fu_529_p4 <= pool_win_cnt_reg_525;
        end if; 
    end process;


    ap_phi_mux_win_item_cnt_phi_fu_553_p4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, win_item_cnt_reg_549, win_item_cnt_3_reg_657, icmp_ln144_reg_2196_pp0_iter1_reg, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_phi_mux_win_item_cnt_phi_fu_553_p4 <= win_item_cnt_3_reg_657;
        else 
            ap_phi_mux_win_item_cnt_phi_fu_553_p4 <= win_item_cnt_reg_549;
        end if; 
    end process;


    ap_phi_mux_win_item_s_phi_fu_565_p4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, win_item_s_reg_561, win_item_s_3_reg_645, icmp_ln144_reg_2196_pp0_iter1_reg, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_phi_mux_win_item_s_phi_fu_565_p4 <= win_item_s_3_reg_645;
        else 
            ap_phi_mux_win_item_s_phi_fu_565_p4 <= win_item_s_reg_561;
        end if; 
    end process;


    ap_phi_mux_win_item_x_phi_fu_589_p4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, win_item_x_reg_585, win_item_x_2_reg_621, icmp_ln144_reg_2196_pp0_iter1_reg, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_phi_mux_win_item_x_phi_fu_589_p4 <= win_item_x_2_reg_621;
        else 
            ap_phi_mux_win_item_x_phi_fu_589_p4 <= win_item_x_reg_585;
        end if; 
    end process;


    ap_phi_mux_win_item_y_phi_fu_577_p4_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, win_item_y_reg_573, win_item_y_3_reg_633, icmp_ln144_reg_2196_pp0_iter1_reg, ap_enable_reg_pp0_iter1)
    begin
        if (((icmp_ln144_reg_2196_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            ap_phi_mux_win_item_y_phi_fu_577_p4 <= win_item_y_3_reg_633;
        else 
            ap_phi_mux_win_item_y_phi_fu_577_p4 <= win_item_y_reg_573;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_win_item_cnt_3_reg_657 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_win_item_s_3_reg_645 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_win_item_x_2_reg_621 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_win_item_y_3_reg_633 <= "XXXXXXXX";

    ap_predicate_op467_readreq_state12_assign_proc : process(icmp_ln144_reg_2196_pp0_iter2_reg, and_ln149_reg_2273_pp0_iter2_reg, cmp37_reg_2371_pp0_iter2_reg)
    begin
                ap_predicate_op467_readreq_state12 <= ((cmp37_reg_2371_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter2_reg) and (icmp_ln144_reg_2196_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_predicate_op469_readreq_state13_assign_proc : process(and_ln149_reg_2273_pp0_iter2_reg, cmp37_reg_2371_pp0_iter2_reg, icmp_ln144_reg_2196_pp0_iter3_reg)
    begin
                ap_predicate_op469_readreq_state13 <= ((icmp_ln144_reg_2196_pp0_iter3_reg = ap_const_lv1_0) and (cmp37_reg_2371_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter2_reg));
    end process;


    ap_predicate_op606_read_state82_assign_proc : process(icmp_ln144_reg_2196_pp0_iter37_reg, and_ln149_reg_2273_pp0_iter37_reg, cmp37_reg_2371_pp0_iter37_reg)
    begin
                ap_predicate_op606_read_state82 <= ((cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter37_reg = ap_const_lv1_0) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg));
    end process;


    ap_predicate_op628_read_state83_assign_proc : process(and_ln149_reg_2273_pp0_iter37_reg, cmp37_reg_2371_pp0_iter37_reg, icmp_ln144_reg_2196_pp0_iter38_reg)
    begin
                ap_predicate_op628_read_state83 <= ((icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg));
    end process;


    ap_predicate_op722_writereq_state86_assign_proc : process(and_ln234_reg_2205_pp0_iter39_reg, icmp_ln235_reg_2214_pp0_iter39_reg, and_ln239_reg_2244_pp0_iter39_reg)
    begin
                ap_predicate_op722_writereq_state86 <= ((icmp_ln235_reg_2214_pp0_iter39_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln239_reg_2244_pp0_iter39_reg) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter39_reg));
    end process;


    ap_predicate_op723_write_state87_assign_proc : process(and_ln234_reg_2205_pp0_iter40_reg, icmp_ln235_reg_2214_pp0_iter40_reg, and_ln239_reg_2244_pp0_iter40_reg)
    begin
                ap_predicate_op723_write_state87 <= ((icmp_ln235_reg_2214_pp0_iter40_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln239_reg_2244_pp0_iter40_reg) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter40_reg));
    end process;


    ap_predicate_op791_writeresp_state155_assign_proc : process(and_ln234_reg_2205_pp0_iter74_reg, icmp_ln235_reg_2214_pp0_iter74_reg, and_ln239_reg_2244_pp0_iter74_reg)
    begin
                ap_predicate_op791_writeresp_state155 <= ((icmp_ln235_reg_2214_pp0_iter74_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln239_reg_2244_pp0_iter74_reg) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter74_reg));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln125_fu_821_p2)
    begin
        if (((icmp_ln125_fu_821_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_str_blocking_n <= (ap_const_logic_1 and ap_const_logic_1);
    cmp101_fu_1151_p2 <= "1" when (ap_phi_mux_win_item_y_phi_fu_577_p4 = ap_const_lv8_1) else "0";
    cmp134_fu_1145_p2 <= "1" when (ap_phi_mux_win_item_y_phi_fu_577_p4 = ap_const_lv8_0) else "0";
    cmp37_fu_1432_p2 <= "1" when (unsigned(add35_fu_1426_p2) < unsigned(conv_x_cast1_reg_2071)) else "0";
    cmp52_fu_1135_p2 <= "1" when (zext_ln151_2_fu_1095_p1 = sub_reg_2082) else "0";
    cmp55_fu_1140_p2 <= "1" when (win_item_cnt_1_fu_1110_p3 = pool_stride) else "0";
    cmp78_fu_741_p2 <= "1" when (pool_size = ap_const_lv8_3) else "0";
    conv8_fu_689_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_xy),32));
    conv_x_cast14_fu_697_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_x),24));
    conv_x_cast1_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv_x),26));
    empty_fu_1373_p1 <= win_item_s_reg_561(3 - 1 downto 0);
    event_done <= ap_done;
    flag_fu_1071_p1 <= pool_win_cnt_reg_525(1 - 1 downto 0);
    global_index_z_group_fu_1263_p3 <= 
        sub_ln237_2_fu_1257_p2 when (tmp_2_reg_2218(0) = '1') else 
        sext_ln237_1_fu_1254_p1;
    global_z_fu_929_p2 <= std_logic_vector(unsigned(shl_ln236_reg_2186) + unsigned(zext_ln236_fu_925_p1));

    gmem0_ARADDR_assign_proc : process(ap_enable_reg_pp0_iter3, gmem0_addr_reg_2390, gmem0_addr_1_reg_2396, ap_condition_3436, ap_condition_3440)
    begin
        if ((ap_enable_reg_pp0_iter3 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3440)) then 
                gmem0_ARADDR <= gmem0_addr_1_reg_2396;
            elsif ((ap_const_boolean_1 = ap_condition_3436)) then 
                gmem0_ARADDR <= gmem0_addr_reg_2390;
            else 
                gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            gmem0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem0_ARVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage1, ap_predicate_op469_readreq_state13, ap_block_pp0_stage1_11001, ap_predicate_op467_readreq_state12, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op467_readreq_state12 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_predicate_op469_readreq_state13 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            gmem0_ARVALID <= ap_const_logic_1;
        else 
            gmem0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter38, ap_CS_fsm_pp0_stage1, ap_predicate_op628_read_state83, ap_block_pp0_stage1_11001, ap_predicate_op606_read_state82, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op606_read_state82 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_predicate_op628_read_state83 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            gmem0_RREADY <= ap_const_logic_1;
        else 
            gmem0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem0_blk_n_AR_assign_proc : process(m_axi_gmem0_ARREADY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter3, ap_block_pp0_stage0, icmp_ln144_reg_2196_pp0_iter2_reg, and_ln149_reg_2273_pp0_iter2_reg, cmp37_reg_2371_pp0_iter2_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln144_reg_2196_pp0_iter3_reg)
    begin
        if ((((icmp_ln144_reg_2196_pp0_iter3_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cmp37_reg_2371_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter2_reg) and (icmp_ln144_reg_2196_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then 
            gmem0_blk_n_AR <= m_axi_gmem0_ARREADY;
        else 
            gmem0_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem0_blk_n_R_assign_proc : process(m_axi_gmem0_RVALID, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter38, icmp_ln144_reg_2196_pp0_iter37_reg, and_ln149_reg_2273_pp0_iter37_reg, cmp37_reg_2371_pp0_iter37_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln144_reg_2196_pp0_iter38_reg)
    begin
        if ((((icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter37_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0)))) then 
            gmem0_blk_n_R <= m_axi_gmem0_RVALID;
        else 
            gmem0_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_AWVALID_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter40, ap_predicate_op722_writereq_state86, ap_block_pp0_stage0_11001)
    begin
        if (((ap_predicate_op722_writereq_state86 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            gmem1_AWVALID <= ap_const_logic_1;
        else 
            gmem1_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_BREADY_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter74, ap_predicate_op791_writeresp_state155, ap_block_pp0_stage1_11001)
    begin
        if (((ap_predicate_op791_writeresp_state155 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter74 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            gmem1_BREADY <= ap_const_logic_1;
        else 
            gmem1_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_WVALID_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter40, ap_predicate_op723_write_state87, ap_block_pp0_stage1_11001)
    begin
        if (((ap_predicate_op723_write_state87 = ap_const_boolean_1) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then 
            gmem1_WVALID <= ap_const_logic_1;
        else 
            gmem1_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem1_blk_n_AW_assign_proc : process(m_axi_gmem1_AWREADY, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter40, and_ln234_reg_2205_pp0_iter39_reg, icmp_ln235_reg_2214_pp0_iter39_reg, and_ln239_reg_2244_pp0_iter39_reg)
    begin
        if (((icmp_ln235_reg_2214_pp0_iter39_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln239_reg_2244_pp0_iter39_reg) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter39_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            gmem1_blk_n_AW <= m_axi_gmem1_AWREADY;
        else 
            gmem1_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_B_assign_proc : process(m_axi_gmem1_BVALID, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter74, and_ln234_reg_2205_pp0_iter74_reg, icmp_ln235_reg_2214_pp0_iter74_reg, and_ln239_reg_2244_pp0_iter74_reg)
    begin
        if (((icmp_ln235_reg_2214_pp0_iter74_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter74 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln239_reg_2244_pp0_iter74_reg) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter74_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            gmem1_blk_n_B <= m_axi_gmem1_BVALID;
        else 
            gmem1_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem1_blk_n_W_assign_proc : process(m_axi_gmem1_WREADY, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter40, and_ln234_reg_2205_pp0_iter40_reg, icmp_ln235_reg_2214_pp0_iter40_reg, and_ln239_reg_2244_pp0_iter40_reg)
    begin
        if (((icmp_ln235_reg_2214_pp0_iter40_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_lv1_1 = and_ln239_reg_2244_pp0_iter40_reg) and (ap_const_lv1_1 = and_ln234_reg_2205_pp0_iter40_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            gmem1_blk_n_W <= m_axi_gmem1_WREADY;
        else 
            gmem1_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    gp_final_cnt_1_fu_1035_p3 <= 
        add_ln247_fu_1029_p2 when (icmp_ln244_1_fu_1017_p2(0) = '1') else 
        ap_phi_mux_gp_final_cnt_phi_fu_517_p4;
    gp_final_cnt_2_fu_1043_p3 <= 
        ap_const_lv8_0 when (and_ln244_fu_1023_p2(0) = '1') else 
        gp_final_cnt_1_fu_1035_p3;
    grp_fu_1970_p0 <= grp_fu_1970_p00(16 - 1 downto 0);
    grp_fu_1970_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_group_cnt_reg_477),32));
    grp_fu_1970_p1 <= conv8_reg_2056(16 - 1 downto 0);

    grp_fu_1975_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_1975_ce <= ap_const_logic_1;
        else 
            grp_fu_1975_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1975_p0 <= grp_fu_1975_p00(16 - 1 downto 0);
    grp_fu_1975_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_pool_win_cnt_phi_fu_529_p4),24));
    grp_fu_1975_p1 <= zext_ln160_reg_2143(8 - 1 downto 0);

    grp_fu_1981_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_1981_ce <= ap_const_logic_1;
        else 
            grp_fu_1981_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1981_p0 <= grp_fu_1981_p00(16 - 1 downto 0);
    grp_fu_1981_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_1126_p2),24));
    grp_fu_1981_p1 <= conv_x_cast14_reg_2066(8 - 1 downto 0);
    grp_fu_1981_p2 <= grp_fu_1981_p20(26 - 1 downto 0);
    grp_fu_1981_p20 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln146_1_fu_1411_p3),27));

    grp_fu_1989_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            grp_fu_1989_ce <= ap_const_logic_1;
        else 
            grp_fu_1989_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1989_p0 <= grp_fu_1989_p00(16 - 1 downto 0);
    grp_fu_1989_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(global_index_z_group_fu_1263_p3),30));
    grp_fu_1989_p1 <= zext_ln240_reg_2123(16 - 1 downto 0);
    grp_fu_1989_p2 <= zext_ln144_reg_2191(16 - 1 downto 0);
    i_1_fu_815_p2 <= std_logic_vector(unsigned(i_reg_454) + unsigned(ap_const_lv16_1));
    icmp_ln125_fu_821_p2 <= "1" when (i_reg_454 = pool_times) else "0";
    icmp_ln144_fu_862_p2 <= "1" when (ap_phi_mux_k_phi_fu_493_p4 = pool_y_bound) else "0";
    icmp_ln149_1_fu_1084_p2 <= "1" when (unsigned(item_loop_cnt_reg_537) < unsigned(load_data_bound)) else "0";
    icmp_ln149_fu_1075_p2 <= "1" when (unsigned(pool_win_cnt_reg_525) < unsigned(pool_win_num_x_cast_reg_2076)) else "0";
    icmp_ln151_fu_1099_p2 <= "1" when (signed(zext_ln151_2_fu_1095_p1) > signed(sub_reg_2082)) else "0";
    icmp_ln218_1_fu_1190_p2 <= "1" when (zext_ln151_2_fu_1095_p1 = sub184_reg_2128) else "0";
    icmp_ln218_fu_1185_p2 <= "1" when (win_item_y_cast15_fu_1118_p1 = sub_reg_2082) else "0";
    icmp_ln227_fu_1237_p2 <= "1" when (win_item_x_3_fu_1229_p3 = ap_const_lv8_0) else "0";
    icmp_ln234_1_fu_889_p2 <= "1" when (unsigned(ap_phi_mux_item_loop_cnt_phi_fu_541_p4) < unsigned(write_back_bound)) else "0";
    icmp_ln234_fu_883_p2 <= "0" when (ap_phi_mux_pool_win_cnt_phi_fu_529_p4 = ap_const_lv16_0) else "1";
    icmp_ln235_fu_920_p2 <= "1" when (signed(add_ln235_1_fu_914_p2) < signed(pool_dim1_cast16_reg_2089)) else "0";
    icmp_ln239_1_fu_990_p2 <= "1" when (unsigned(global_z_fu_929_p2) < unsigned(padd_offset_cast17_reg_2108)) else "0";
    icmp_ln239_fu_985_p2 <= "1" when (signed(sub_ln237_fu_938_p2) < signed(pool_dim3_cast_reg_2118)) else "0";
    icmp_ln244_1_fu_1017_p2 <= "1" when (ap_phi_mux_lane_cnt_phi_fu_505_p4 = ap_const_lv8_1) else "0";
    icmp_ln244_fu_1011_p2 <= "1" when (ap_phi_mux_gp_final_cnt_phi_fu_517_p4 = ap_const_lv8_3) else "0";
    icmp_ln254_1_fu_1316_p2 <= "1" when (zext_ln149_1_fu_1080_p1 = sub272_reg_2099) else "0";
    icmp_ln254_fu_1311_p2 <= "1" when (pool_win_cnt_reg_525 = pool_win_num_x_cast_reg_2076) else "0";
    icmp_ln266_1_fu_1924_p2 <= "1" when (pool_y_cnt_cast10_reg_2176 = sub291_reg_2138) else "0";
    icmp_ln266_fu_1920_p2 <= "1" when (pool_group_cnt_cast_reg_2166 = sub287_reg_2133) else "0";
    icmp_ln52_10_fu_1903_p2 <= "1" when (signed(max_value_18_reg_2482) < signed(row_reg0_load_1_reg_2476)) else "0";
    icmp_ln52_11_fu_1884_p2 <= "1" when (signed(max_value_18_reg_2482) < signed(row_reg1_q0)) else "0";
    icmp_ln52_1_fu_1661_p2 <= "1" when (signed(temp_reg2_fu_1612_p3) < signed(max_value_13_fu_1653_p3)) else "0";
    icmp_ln52_2_fu_1620_p2 <= "1" when (signed(temp_reg1_fu_1604_p3) < signed(temp_reg0_1_fu_1597_p3)) else "0";
    icmp_ln52_3_fu_1696_p2 <= "1" when (signed(max_value_15_reg_2421) < signed(row_reg0_q1)) else "0";
    icmp_ln52_4_fu_1734_p2 <= "1" when (signed(max_value_14_reg_2427) < signed(row_reg0_q1)) else "0";
    icmp_ln52_5_fu_1715_p2 <= "1" when (signed(max_value_14_reg_2427) < signed(row_reg1_q1)) else "0";
    icmp_ln52_6_fu_1806_p2 <= "1" when (signed(temp_reg0_fu_1765_p3) < signed(temp_reg1_2_fu_1772_p3)) else "0";
    icmp_ln52_7_fu_1863_p2 <= "1" when (signed(temp_reg2_2_reg_2452) < signed(max_value_17_reg_2465)) else "0";
    icmp_ln52_8_fu_1786_p2 <= "1" when (signed(temp_reg1_2_fu_1772_p3) < signed(temp_reg0_fu_1765_p3)) else "0";
    icmp_ln52_9_fu_1844_p2 <= "1" when (signed(max_value_16_reg_2458) < signed(row_reg0_q1)) else "0";
    icmp_ln52_fu_1641_p2 <= "1" when (signed(temp_reg0_1_fu_1597_p3) < signed(temp_reg1_fu_1604_p3)) else "0";
    idxprom139_fu_1363_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(win_item_s_reg_561),64));
    item_loop_bound_cast_fu_731_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(item_loop_bound),17));
    item_loop_cnt_1_fu_1349_p2 <= std_logic_vector(unsigned(item_loop_cnt_reg_537) + unsigned(ap_const_lv16_1));
    item_loop_cnt_2_fu_1355_p3 <= 
        ap_const_lv16_0 when (icmp_ln254_1_fu_1316_p2(0) = '1') else 
        item_loop_cnt_1_fu_1349_p2;
    k_1_fu_1065_p2 <= std_logic_vector(unsigned(k_reg_489) + unsigned(ap_const_lv16_1));
    lane_cnt_1_fu_1051_p2 <= std_logic_vector(unsigned(ap_phi_mux_lane_cnt_phi_fu_505_p4) + unsigned(ap_const_lv8_1));
    lshr_ln160_fu_1756_p2 <= std_logic_vector(shift_right(unsigned(gmem0_addr_1_read_reg_2436),to_integer(unsigned('0' & zext_ln125_reg_2148(16-1 downto 0)))));
    max_value_10_fu_1855_p3 <= 
        max_value_16_reg_2458 when (xor_ln52_9_fu_1849_p2(0) = '1') else 
        row_reg0_q1;
    max_value_12_fu_1895_p3 <= 
        max_value_18_reg_2482 when (xor_ln52_11_fu_1889_p2(0) = '1') else 
        row_reg1_q0;
    max_value_13_fu_1653_p3 <= 
        temp_reg0_1_fu_1597_p3 when (xor_ln52_fu_1647_p2(0) = '1') else 
        temp_reg1_fu_1604_p3;
    max_value_14_fu_1673_p3 <= 
        temp_reg2_fu_1612_p3 when (xor_ln52_1_fu_1667_p2(0) = '1') else 
        max_value_13_fu_1653_p3;
    max_value_15_fu_1632_p3 <= 
        temp_reg1_fu_1604_p3 when (xor_ln52_2_fu_1626_p2(0) = '1') else 
        temp_reg0_1_fu_1597_p3;
    max_value_16_fu_1798_p3 <= 
        temp_reg1_2_fu_1772_p3 when (xor_ln52_8_fu_1792_p2(0) = '1') else 
        temp_reg0_fu_1765_p3;
    max_value_17_fu_1818_p3 <= 
        temp_reg0_fu_1765_p3 when (xor_ln52_6_fu_1812_p2(0) = '1') else 
        temp_reg1_2_fu_1772_p3;
    max_value_18_fu_1873_p3 <= 
        temp_reg2_2_reg_2452 when (xor_ln52_7_fu_1867_p2(0) = '1') else 
        max_value_17_reg_2465;
    max_value_5_fu_1726_p3 <= 
        max_value_14_reg_2427 when (xor_ln52_5_fu_1720_p2(0) = '1') else 
        row_reg1_q1;
    max_value_fu_1707_p3 <= 
        max_value_15_reg_2421 when (xor_ln52_3_fu_1701_p2(0) = '1') else 
        row_reg0_q1;
    mul13_fu_842_p0 <= pool_y_cnt_cast_fu_838_p1(8 - 1 downto 0);
    mul13_fu_842_p1 <= pool_stride_cast_reg_2061(8 - 1 downto 0);
    mul244_fu_853_p0 <= pool_y_cnt_cast_fu_838_p1(8 - 1 downto 0);
    mul244_fu_853_p1 <= pool_dim1_cast9_reg_2094(8 - 1 downto 0);
    or_ln163_fu_1593_p2 <= (cmp55_reg_2287_pp0_iter37_reg or cmp52_reg_2282_pp0_iter37_reg);
    or_ln195_fu_1833_p2 <= (tmp_5_cast_fu_1826_p3 or ap_const_lv4_1);
    or_ln210_fu_1157_p2 <= (cmp55_fu_1140_p2 or cmp52_fu_1135_p2);
    p_and_t_cast_fu_1458_p3 <= (ap_const_lv6_0 & trunc_ln238_1_reg_2239_pp0_iter1_reg);
    padd_offset_cast17_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(padd_offset),16));
    padd_offset_cast_fu_751_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(padd_offset),17));
    pool_dim1_cast16_fu_719_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_dim1),20));
    pool_dim1_cast9_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_dim1),16));
    pool_dim1_cast_fu_727_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_dim1),9));
    pool_dim3_cast_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_dim3),17));

    pool_final_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter40, pool_final_addr_1_reg_2471, ap_enable_reg_pp0_iter39, zext_ln195_fu_1839_p1)
    begin
        if (((ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pool_final_address0 <= pool_final_addr_1_reg_2471;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            pool_final_address0 <= zext_ln195_fu_1839_p1(4 - 1 downto 0);
        else 
            pool_final_address0 <= "XXXX";
        end if; 
    end process;


    pool_final_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln144_reg_2196_pp0_iter38_reg, cmp78_reg_2104, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, cmp101_reg_2296_pp0_iter38_reg, pool_final_addr_reg_2361_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg, ap_enable_reg_pp0_iter39, zext_ln240_1_fu_1880_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            pool_final_address1 <= zext_ln240_1_fu_1880_p1(4 - 1 downto 0);
        elsif ((((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp101_reg_2296_pp0_iter38_reg = ap_const_lv1_0) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)) or ((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)))) then 
            pool_final_address1 <= pool_final_addr_reg_2361_pp0_iter38_reg;
        else 
            pool_final_address1 <= "XXXX";
        end if; 
    end process;


    pool_final_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter40, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter39)
    begin
        if ((((ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            pool_final_ce0 <= ap_const_logic_1;
        else 
            pool_final_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    pool_final_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, icmp_ln144_reg_2196_pp0_iter38_reg, ap_block_pp0_stage1_11001, cmp78_reg_2104, ap_block_pp0_stage0_11001, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, cmp101_reg_2296_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg, ap_enable_reg_pp0_iter39)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp101_reg_2296_pp0_iter38_reg = ap_const_lv1_0) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)) or ((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)))) then 
            pool_final_ce1 <= ap_const_logic_1;
        else 
            pool_final_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    pool_final_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_enable_reg_pp0_iter40, ap_enable_reg_pp0_iter39, max_value_10_fu_1855_p3, max_value_12_fu_1895_p3)
    begin
        if (((ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            pool_final_d0 <= max_value_12_fu_1895_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            pool_final_d0 <= max_value_10_fu_1855_p3;
        else 
            pool_final_d0 <= "XXXXXXXX";
        end if; 
    end process;


    pool_final_d1_assign_proc : process(cmp78_reg_2104, cmp101_reg_2296_pp0_iter38_reg, max_value_fu_1707_p3, max_value_5_fu_1726_p3, ap_condition_3448)
    begin
        if ((ap_const_boolean_1 = ap_condition_3448)) then
            if (((cmp78_reg_2104 = ap_const_lv1_1) and (cmp101_reg_2296_pp0_iter38_reg = ap_const_lv1_0))) then 
                pool_final_d1 <= max_value_5_fu_1726_p3;
            elsif ((cmp78_reg_2104 = ap_const_lv1_0)) then 
                pool_final_d1 <= max_value_fu_1707_p3;
            else 
                pool_final_d1 <= "XXXXXXXX";
            end if;
        else 
            pool_final_d1 <= "XXXXXXXX";
        end if; 
    end process;


    pool_final_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter40, ap_block_pp0_stage1_11001, cmp78_reg_2104, ap_block_pp0_stage0_11001, icmp_ln144_reg_2196_pp0_iter39_reg, and_ln149_reg_2273_pp0_iter38_reg, and_ln149_reg_2273_pp0_iter39_reg, cmp134_reg_2292_pp0_iter38_reg, cmp134_reg_2292_pp0_iter39_reg, cmp101_reg_2296_pp0_iter39_reg, cmp37_reg_2371_pp0_iter38_reg, cmp37_reg_2371_pp0_iter39_reg, ap_enable_reg_pp0_iter39)
    begin
        if ((((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)) or ((cmp78_reg_2104 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter39_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter39_reg = ap_const_lv1_1) and (cmp101_reg_2296_pp0_iter39_reg = ap_const_lv1_0) and (cmp134_reg_2292_pp0_iter39_reg = ap_const_lv1_0)))) then 
            pool_final_we0 <= ap_const_logic_1;
        else 
            pool_final_we0 <= ap_const_logic_0;
        end if; 
    end process;


    pool_final_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln144_reg_2196_pp0_iter38_reg, cmp78_reg_2104, ap_block_pp0_stage0_11001, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, cmp101_reg_2296_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg, ap_enable_reg_pp0_iter39)
    begin
        if ((((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp101_reg_2296_pp0_iter38_reg = ap_const_lv1_0) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)) or ((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0)))) then 
            pool_final_we1 <= ap_const_logic_1;
        else 
            pool_final_we1 <= ap_const_logic_0;
        end if; 
    end process;

    pool_group_cast_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_group),17));
    pool_group_cnt_1_fu_1940_p3 <= 
        add_ln269_fu_1934_p2 when (icmp_ln266_1_fu_1924_p2(0) = '1') else 
        pool_group_cnt_reg_477;
    pool_group_cnt_2_fu_1948_p3 <= 
        ap_const_lv16_0 when (and_ln266_fu_1928_p2(0) = '1') else 
        pool_group_cnt_1_fu_1940_p3;
    pool_group_cnt_cast_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_group_cnt_reg_477),17));
    pool_size_cast_fu_709_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_size),9));
    pool_stride_cast_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_stride),16));
    pool_win_cnt_1_fu_1333_p3 <= 
        add_ln257_fu_1327_p2 when (icmp_ln254_1_fu_1316_p2(0) = '1') else 
        pool_win_cnt_reg_525;
    pool_win_cnt_2_fu_1341_p3 <= 
        ap_const_lv16_0 when (and_ln254_fu_1321_p2(0) = '1') else 
        pool_win_cnt_1_fu_1333_p3;
    pool_win_num_x_cast_fu_705_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_win_num_x),16));
    pool_y_cnt_1_fu_1956_p2 <= std_logic_vector(unsigned(pool_y_cnt_reg_465) + unsigned(ap_const_lv8_1));
    pool_y_cnt_2_fu_1962_p3 <= 
        ap_const_lv8_0 when (icmp_ln266_1_fu_1924_p2(0) = '1') else 
        pool_y_cnt_1_fu_1956_p2;
    pool_y_cnt_cast10_fu_834_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_y_cnt_reg_465),9));
    pool_y_cnt_cast_fu_838_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_y_cnt_reg_465),16));

    row_reg0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, cmp78_reg_2104, icmp_ln144_reg_2196_pp0_iter39_reg, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, row_reg0_addr_reg_2345_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg, row_reg0_addr_1_reg_2441, ap_enable_reg_pp0_iter39)
    begin
        if ((((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1)) or ((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1)))) then 
            row_reg0_address0 <= row_reg0_addr_1_reg_2441;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            row_reg0_address0 <= row_reg0_addr_reg_2345_pp0_iter38_reg;
        else 
            row_reg0_address0 <= "XXX";
        end if; 
    end process;


    row_reg0_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter38, and_ln149_reg_2273_pp0_iter37_reg, cmp37_reg_2371_pp0_iter37_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, icmp_ln144_reg_2196_pp0_iter38_reg, row_reg0_addr_reg_2345_pp0_iter38_reg, ap_enable_reg_pp0_iter39, zext_ln179_fu_1690_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            row_reg0_address1 <= zext_ln179_fu_1690_p1(3 - 1 downto 0);
        elsif (((icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1))) then 
            row_reg0_address1 <= row_reg0_addr_reg_2345_pp0_iter38_reg;
        else 
            row_reg0_address1 <= "XXX";
        end if; 
    end process;


    row_reg0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, cmp78_reg_2104, ap_block_pp0_stage0_11001, icmp_ln144_reg_2196_pp0_iter39_reg, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg, ap_enable_reg_pp0_iter39)
    begin
        if ((((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1)) or ((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            row_reg0_ce0 <= ap_const_logic_1;
        else 
            row_reg0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    row_reg0_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter38, and_ln149_reg_2273_pp0_iter37_reg, cmp37_reg_2371_pp0_iter37_reg, ap_CS_fsm_pp0_stage1, icmp_ln144_reg_2196_pp0_iter38_reg, ap_block_pp0_stage1_11001, cmp78_reg_2104, ap_block_pp0_stage0_11001, cmp134_reg_2292_pp0_iter37_reg, ap_enable_reg_pp0_iter39)
    begin
        if ((((icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp134_reg_2292_pp0_iter37_reg = ap_const_lv1_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            row_reg0_ce1 <= ap_const_logic_1;
        else 
            row_reg0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    row_reg0_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, max_value_14_reg_2427, max_value_16_reg_2458, ap_enable_reg_pp0_iter39, max_value_18_fu_1873_p3, ap_condition_3457, ap_condition_3465)
    begin
        if ((ap_enable_reg_pp0_iter39 = ap_const_logic_1)) then
            if ((ap_const_boolean_1 = ap_condition_3465)) then 
                row_reg0_d0 <= max_value_18_fu_1873_p3;
            elsif ((ap_const_boolean_1 = ap_condition_3457)) then 
                row_reg0_d0 <= max_value_16_reg_2458;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
                row_reg0_d0 <= max_value_14_reg_2427;
            else 
                row_reg0_d0 <= "XXXXXXXX";
            end if;
        else 
            row_reg0_d0 <= "XXXXXXXX";
        end if; 
    end process;

    row_reg0_d1 <= 
        temp_reg1_fu_1604_p3 when (xor_ln52_2_fu_1626_p2(0) = '1') else 
        temp_reg0_1_fu_1597_p3;

    row_reg0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, icmp_ln144_reg_2196_pp0_iter38_reg, ap_block_pp0_stage1_11001, cmp78_reg_2104, ap_block_pp0_stage0_11001, icmp_ln144_reg_2196_pp0_iter39_reg, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg, ap_enable_reg_pp0_iter39)
    begin
        if ((((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1)) or ((icmp_ln144_reg_2196_pp0_iter39_reg = ap_const_lv1_0) and (cmp78_reg_2104 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1)) or ((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_1)))) then 
            row_reg0_we0 <= ap_const_logic_1;
        else 
            row_reg0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    row_reg0_we1_assign_proc : process(ap_enable_reg_pp0_iter38, and_ln149_reg_2273_pp0_iter37_reg, cmp37_reg_2371_pp0_iter37_reg, ap_CS_fsm_pp0_stage1, icmp_ln144_reg_2196_pp0_iter38_reg, ap_block_pp0_stage1_11001, cmp78_reg_2104, cmp134_reg_2292_pp0_iter37_reg)
    begin
        if (((cmp78_reg_2104 = ap_const_lv1_0) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (cmp37_reg_2371_pp0_iter37_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter37_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (cmp134_reg_2292_pp0_iter37_reg = ap_const_lv1_1))) then 
            row_reg0_we1 <= ap_const_logic_1;
        else 
            row_reg0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    row_reg1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter40, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter39)
    begin
        if ((((ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            row_reg1_ce0 <= ap_const_logic_1;
        else 
            row_reg1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    row_reg1_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter38, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter39)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_enable_reg_pp0_iter38 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)))) then 
            row_reg1_ce1 <= ap_const_logic_1;
        else 
            row_reg1_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    row_reg1_d0 <= 
        max_value_18_reg_2482 when (xor_ln52_10_fu_1907_p2(0) = '1') else 
        row_reg0_load_1_reg_2476;
    row_reg1_d1 <= 
        max_value_14_reg_2427 when (xor_ln52_4_fu_1739_p2(0) = '1') else 
        row_reg0_q1;

    row_reg1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter40, cmp78_reg_2104, ap_block_pp0_stage0_11001, and_ln149_reg_2273_pp0_iter39_reg, cmp134_reg_2292_pp0_iter39_reg, cmp101_reg_2296_pp0_iter39_reg, cmp37_reg_2371_pp0_iter39_reg)
    begin
        if (((cmp78_reg_2104 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter40 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter39_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter39_reg = ap_const_lv1_1) and (cmp101_reg_2296_pp0_iter39_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter39_reg = ap_const_lv1_0))) then 
            row_reg1_we0 <= ap_const_logic_1;
        else 
            row_reg1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    row_reg1_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln144_reg_2196_pp0_iter38_reg, cmp78_reg_2104, ap_block_pp0_stage0_11001, and_ln149_reg_2273_pp0_iter38_reg, cmp134_reg_2292_pp0_iter38_reg, cmp101_reg_2296_pp0_iter38_reg, cmp37_reg_2371_pp0_iter38_reg, ap_enable_reg_pp0_iter39)
    begin
        if (((cmp78_reg_2104 = ap_const_lv1_1) and (icmp_ln144_reg_2196_pp0_iter38_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter39 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln149_reg_2273_pp0_iter38_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (cmp37_reg_2371_pp0_iter38_reg = ap_const_lv1_1) and (cmp101_reg_2296_pp0_iter38_reg = ap_const_lv1_1) and (cmp134_reg_2292_pp0_iter38_reg = ap_const_lv1_0))) then 
            row_reg1_we1 <= ap_const_logic_1;
        else 
            row_reg1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    select_ln238_fu_1478_p3 <= 
        sub_ln238_fu_1465_p2 when (tmp_2_reg_2218_pp0_iter1_reg(0) = '1') else 
        tmp_9_fu_1471_p3;
    select_ln248_fu_1057_p3 <= 
        ap_const_lv8_0 when (icmp_ln244_1_fu_1017_p2(0) = '1') else 
        lane_cnt_1_fu_1051_p2;
        sext_ln160_1_fu_1542_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln160_3_fu_1532_p4),64));

        sext_ln160_fu_1516_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln160_1_fu_1506_p4),64));

        sext_ln235_1_fu_1455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln235_1_reg_2209_pp0_iter1_reg),30));

        sext_ln235_fu_910_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln235_fu_904_p2),20));

        sext_ln237_1_fu_1254_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln237_2_reg_2229),16));

        sext_ln237_fu_1251_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln237_1_reg_2224),16));

        sext_ln240_fu_1568_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln240_fu_1562_p2),64));

    shift_reg_5_fu_1583_p1 <= gmem0_RDATA(8 - 1 downto 0);
    shift_reg_8_fu_1760_p1 <= lshr_ln160_fu_1756_p2(8 - 1 downto 0);
    shl_ln146_1_fu_1411_p3 <= (grp_fu_1975_p2 & ap_const_lv2_0);
    shl_ln160_1_fu_803_p3 <= (xor_ln160_fu_797_p2 & ap_const_lv3_0);
    shl_ln1_fu_867_p3 <= (ap_phi_mux_pool_win_cnt_phi_fu_529_p4 & ap_const_lv2_0);
    shl_ln236_fu_847_p2 <= std_logic_vector(shift_left(unsigned(pool_group_cnt_reg_477),to_integer(unsigned('0' & ap_const_lv16_1(16-1 downto 0)))));
    shl_ln2_fu_1490_p3 <= (add43_reg_2375 & ap_const_lv1_0);

    stall_done_ext_assign_proc : process(ap_ext_blocking_n, ap_ext_blocking_n_reg)
    begin
        if (((ap_ext_blocking_n_reg = ap_const_logic_0) and (ap_ext_blocking_n = ap_const_logic_1))) then 
            stall_done_ext <= ap_const_logic_1;
        else 
            stall_done_ext <= ap_const_logic_0;
        end if; 
    end process;


    stall_done_int_assign_proc : process(ap_int_blocking_n, ap_int_blocking_n_reg)
    begin
        if (((ap_int_blocking_n_reg = ap_const_logic_0) and (ap_int_blocking_n = ap_const_logic_1))) then 
            stall_done_int <= ap_const_logic_1;
        else 
            stall_done_int <= ap_const_logic_0;
        end if; 
    end process;


    stall_done_str_assign_proc : process(ap_str_blocking_n, ap_str_blocking_n_reg)
    begin
        if (((ap_str_blocking_n_reg = ap_const_logic_0) and (ap_str_blocking_n = ap_const_logic_1))) then 
            stall_done_str <= ap_const_logic_1;
        else 
            stall_done_str <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_ext_assign_proc : process(ap_ext_blocking_n, ap_ext_blocking_n_reg)
    begin
        if (((ap_ext_blocking_n_reg = ap_const_logic_1) and (ap_ext_blocking_n = ap_const_logic_0))) then 
            stall_start_ext <= ap_const_logic_1;
        else 
            stall_start_ext <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_int_assign_proc : process(ap_int_blocking_n, ap_int_blocking_n_reg)
    begin
        if (((ap_int_blocking_n_reg = ap_const_logic_1) and (ap_int_blocking_n = ap_const_logic_0))) then 
            stall_start_int <= ap_const_logic_1;
        else 
            stall_start_int <= ap_const_logic_0;
        end if; 
    end process;


    stall_start_str_assign_proc : process(ap_str_blocking_n, ap_str_blocking_n_reg)
    begin
        if (((ap_str_blocking_n_reg = ap_const_logic_1) and (ap_str_blocking_n = ap_const_logic_0))) then 
            stall_start_str <= ap_const_logic_1;
        else 
            stall_start_str <= ap_const_logic_0;
        end if; 
    end process;

    sub184_fu_767_p2 <= std_logic_vector(unsigned(win_size_x_cast_fu_763_p1) + unsigned(ap_const_lv9_1FF));
    sub272_fu_735_p2 <= std_logic_vector(unsigned(item_loop_bound_cast_fu_731_p1) + unsigned(ap_const_lv17_1FFFF));
    sub287_fu_777_p2 <= std_logic_vector(unsigned(pool_group_cast_fu_773_p1) + unsigned(ap_const_lv17_1FFFF));
    sub291_fu_783_p2 <= std_logic_vector(unsigned(pool_dim1_cast_fu_727_p1) + unsigned(ap_const_lv9_1FF));
    sub_fu_713_p2 <= std_logic_vector(unsigned(pool_size_cast_fu_709_p1) + unsigned(ap_const_lv9_1FF));
    sub_ln237_1_fu_951_p2 <= std_logic_vector(unsigned(ap_const_lv17_0) - unsigned(sub_ln237_fu_938_p2));
    sub_ln237_2_fu_1257_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(sext_ln237_fu_1251_p1));
    sub_ln237_fu_938_p2 <= std_logic_vector(unsigned(zext_ln237_fu_934_p1) - unsigned(padd_offset_cast_reg_2113));
    sub_ln238_fu_1465_p2 <= std_logic_vector(unsigned(ap_const_lv8_0) - unsigned(p_and_t_cast_fu_1458_p3));
    temp_reg0_1_fu_1597_p3 <= 
        shift_reg_5_reg_2408 when (or_ln163_fu_1593_p2(0) = '1') else 
        ap_const_lv8_0;
    temp_reg0_fu_1765_p3 <= 
        shift_reg_8_fu_1760_p1 when (or_ln163_reg_2414(0) = '1') else 
        ap_const_lv8_0;
    temp_reg1_2_fu_1772_p3 <= 
        shift_reg_3_fu_218 when (or_ln163_reg_2414(0) = '1') else 
        ap_const_lv8_0;
    temp_reg1_fu_1604_p3 <= 
        shift_reg_1_fu_210 when (or_ln163_fu_1593_p2(0) = '1') else 
        ap_const_lv8_0;
    temp_reg2_2_fu_1779_p3 <= 
        shift_reg_fu_206 when (or_ln163_reg_2414(0) = '1') else 
        ap_const_lv8_0;
    temp_reg2_fu_1612_p3 <= 
        shift_reg_2_fu_214 when (or_ln163_fu_1593_p2(0) = '1') else 
        ap_const_lv8_0;
    tmp1_cast_fu_1441_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_1981_p3),32));
    tmp47_fu_1485_p2 <= std_logic_vector(unsigned(grp_fu_1989_p3) + unsigned(sext_ln235_1_fu_1455_p1));
    tmp5_fu_1555_p3 <= (tmp47_reg_2385 & ap_const_lv2_0);
    tmp6_fu_1444_p2 <= std_logic_vector(unsigned(mul_reg_2171) + unsigned(zext_ln151_fu_1437_p1));
    tmp_12_cast_fu_1294_p3 <= (add_ln240_2_fu_1288_p2 & ap_const_lv1_0);
    tmp_1_fu_1398_p3 <= (add_ln185_fu_1388_p2 & ap_const_lv1_0);
    tmp_3_fu_1377_p3 <= (flag_reg_2268 & ap_const_lv2_0);
    tmp_5_cast_fu_1826_p3 <= (trunc_ln185_reg_2356_pp0_iter39_reg & ap_const_lv1_0);
    tmp_9_fu_1471_p3 <= (ap_const_lv6_0 & trunc_ln238_reg_2234_pp0_iter1_reg);
    tmp_fu_1126_p2 <= std_logic_vector(unsigned(mul13_reg_2181) + unsigned(win_item_y_cast_fu_1122_p1));
    tmp_s_fu_1276_p3 <= (xor_ln240_fu_1270_p2 & ap_const_lv2_0);
    trunc_ln160_1_fu_1506_p4 <= add_ln160_fu_1501_p2(63 downto 1);
    trunc_ln160_3_fu_1532_p4 <= add_ln160_1_fu_1526_p2(63 downto 1);
    trunc_ln160_fu_793_p1 <= bottom(1 - 1 downto 0);
    trunc_ln185_fu_1394_p1 <= add_ln185_fu_1388_p2(3 - 1 downto 0);
    trunc_ln238_1_fu_981_p1 <= sub_ln237_1_fu_951_p2(2 - 1 downto 0);
    trunc_ln238_fu_977_p1 <= sub_ln237_fu_938_p2(2 - 1 downto 0);
    trunc_ln240_1_fu_1007_p1 <= ap_phi_mux_lane_cnt_phi_fu_505_p4(4 - 1 downto 0);
    trunc_ln240_fu_1284_p1 <= gp_final_cnt_reg_513(3 - 1 downto 0);
    win_item_cnt_1_fu_1110_p3 <= 
        add_ln152_fu_1104_p2 when (icmp_ln151_fu_1099_p2(0) = '1') else 
        ap_phi_mux_win_item_cnt_phi_fu_553_p4;
    win_item_cnt_2_fu_1177_p3 <= 
        ap_const_lv8_0 when (cmp55_fu_1140_p2(0) = '1') else 
        win_item_cnt_1_fu_1110_p3;
    win_item_s_1_fu_1163_p2 <= std_logic_vector(unsigned(ap_phi_mux_win_item_s_phi_fu_565_p4) + unsigned(ap_const_lv8_1));
    win_item_s_2_fu_1169_p3 <= 
        win_item_s_1_fu_1163_p2 when (or_ln210_fu_1157_p2(0) = '1') else 
        ap_phi_mux_win_item_s_phi_fu_565_p4;
    win_item_s_4_fu_1243_p3 <= 
        ap_const_lv8_0 when (icmp_ln227_fu_1237_p2(0) = '1') else 
        win_item_s_2_fu_1169_p3;
    win_item_s_cast2_fu_1369_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(win_item_s_reg_561),9));
    win_item_x_1_fu_1223_p2 <= std_logic_vector(unsigned(ap_phi_mux_win_item_x_phi_fu_589_p4) + unsigned(ap_const_lv8_1));
    win_item_x_3_fu_1229_p3 <= 
        ap_const_lv8_0 when (icmp_ln218_1_fu_1190_p2(0) = '1') else 
        win_item_x_1_fu_1223_p2;
    win_item_y_1_fu_1207_p3 <= 
        add_ln221_fu_1201_p2 when (icmp_ln218_1_fu_1190_p2(0) = '1') else 
        ap_phi_mux_win_item_y_phi_fu_577_p4;
    win_item_y_2_fu_1215_p3 <= 
        ap_const_lv8_0 when (and_ln218_fu_1195_p2(0) = '1') else 
        win_item_y_1_fu_1207_p3;
    win_item_y_cast15_fu_1118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_win_item_y_phi_fu_577_p4),9));
    win_item_y_cast_fu_1122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_win_item_y_phi_fu_577_p4),16));
    win_size_x_cast_fu_763_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(win_size_x),9));
    xor_ln160_fu_797_p2 <= (trunc_ln160_fu_793_p1 xor ap_const_lv1_1);
    xor_ln179_fu_1685_p2 <= (empty_reg_2340_pp0_iter38_reg xor ap_const_lv3_4);
    xor_ln239_fu_995_p2 <= (icmp_ln239_1_fu_990_p2 xor ap_const_lv1_1);
    xor_ln240_fu_1270_p2 <= (flag_fu_1071_p1 xor ap_const_lv1_1);
    xor_ln52_10_fu_1907_p2 <= (icmp_ln52_10_fu_1903_p2 xor ap_const_lv1_1);
    xor_ln52_11_fu_1889_p2 <= (icmp_ln52_11_fu_1884_p2 xor ap_const_lv1_1);
    xor_ln52_1_fu_1667_p2 <= (icmp_ln52_1_fu_1661_p2 xor ap_const_lv1_1);
    xor_ln52_2_fu_1626_p2 <= (icmp_ln52_2_fu_1620_p2 xor ap_const_lv1_1);
    xor_ln52_3_fu_1701_p2 <= (icmp_ln52_3_fu_1696_p2 xor ap_const_lv1_1);
    xor_ln52_4_fu_1739_p2 <= (icmp_ln52_4_fu_1734_p2 xor ap_const_lv1_1);
    xor_ln52_5_fu_1720_p2 <= (icmp_ln52_5_fu_1715_p2 xor ap_const_lv1_1);
    xor_ln52_6_fu_1812_p2 <= (icmp_ln52_6_fu_1806_p2 xor ap_const_lv1_1);
    xor_ln52_7_fu_1867_p2 <= (icmp_ln52_7_fu_1863_p2 xor ap_const_lv1_1);
    xor_ln52_8_fu_1792_p2 <= (icmp_ln52_8_fu_1786_p2 xor ap_const_lv1_1);
    xor_ln52_9_fu_1849_p2 <= (icmp_ln52_9_fu_1844_p2 xor ap_const_lv1_1);
    xor_ln52_fu_1647_p2 <= (icmp_ln52_fu_1641_p2 xor ap_const_lv1_1);
    zext_ln125_fu_811_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln160_1_fu_803_p3),16));
    zext_ln144_fu_858_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul244_fu_853_p2),30));
    zext_ln146_fu_875_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_867_p3),20));
    zext_ln149_1_fu_1080_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(item_loop_cnt_reg_537),17));
    zext_ln151_1_fu_1422_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(win_item_x_reg_585),26));
    zext_ln151_2_fu_1095_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_win_item_x_phi_fu_589_p4),9));
    zext_ln151_fu_1437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(win_item_x_reg_585_pp0_iter1_reg),32));
    zext_ln160_1_fu_1497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_1490_p3),64));
    zext_ln160_fu_789_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_stride),24));
    zext_ln179_fu_1690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xor_ln179_fu_1685_p2),64));
    zext_ln185_1_fu_1406_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_1398_p3),64));
    zext_ln185_fu_1384_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_1377_p3),9));
    zext_ln195_fu_1839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln195_fu_1833_p2),64));
    zext_ln235_fu_900_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_gp_final_cnt_phi_fu_517_p4),9));
    zext_ln236_fu_925_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_lane_cnt_phi_fu_505_p4),16));
    zext_ln237_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(global_z_fu_929_p2),17));
    zext_ln240_1_fu_1880_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln240_3_reg_2320_pp0_iter38_reg),64));
    zext_ln240_3_fu_1552_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln238_reg_2380),32));
    zext_ln240_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(pool_dim1x2),30));
end behav;
